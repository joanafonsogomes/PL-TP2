Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Comandos
Rule 1     Comandos -> Comandos Comando
Rule 2     Comandos -> Comando
Rule 3     Comando -> Reading
Rule 4     Comando -> Writing
Rule 5     Comando -> Printing
Rule 6     Comando -> Atrib
Rule 7     Comando -> Exp
Rule 8     Comando -> Start
Rule 9     Comando -> End
Rule 10    Comando -> Condition
Rule 11    Comando -> Cicle
Rule 12    Comando -> Array
Rule 13    Comando -> Matriz
Rule 14    Exp -> Exp + Termo
Rule 15    Exp -> Exp - Termo
Rule 16    Exp -> Termo
Rule 17    Termo -> Termo * Factor
Rule 18    Termo -> Termo / Factor
Rule 19    Termo -> Factor
Rule 20    Factor -> id
Rule 21    Factor -> num
Rule 22    Factor -> ( Exp )
Rule 23    Reading -> READ id
Rule 24    Writing -> WRITE id
Rule 25    Printing -> PRINT ( frase )
Rule 26    Start -> START
Rule 27    End -> END
Rule 28    Atrib -> id = Exp
Rule 29    Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
Rule 30    Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
Rule 31    Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
Rule 32    Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
Rule 33    Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
Rule 34    Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
Rule 35    Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
Rule 36    Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
Rule 37    Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
Rule 38    Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
Rule 39    Array -> id [ num ] FI
Rule 40    Array -> id [ num ] = num
Rule 41    Matriz -> id [ num ] [ num ] FI
Rule 42    Matriz -> id [ num ] [ num ] = num

Terminals, with rules where they appear

(                    : 22 25 29 30 31 32 33 34 35 36 37 38
)                    : 22 25 29 30 31 32 33 34 35 36 37 38
*                    : 17
+                    : 14
-                    : 15
/                    : 18
;                    : 34 34 35 35 36 36 37 37 38 38
<                    : 30 32 34 36
=                    : 28 31 32 33 33 36 37 38 38 40 42
>                    : 29 31 35 37
ELSE                 : 29 30 31 32 33
END                  : 27
FI                   : 29 30 31 32 33 39 41
FOR                  : 34 35 36 37 38
IF                   : 29 30 31 32 33
PRINT                : 25
READ                 : 23
ROF                  : 34 35 36 37 38
START                : 26
THEN                 : 29 30 31 32 33
WRITE                : 24
[                    : 39 40 41 41 42 42
]                    : 39 40 41 41 42 42
error                : 
frase                : 25
id                   : 20 23 24 28 39 40 41 42
num                  : 21 39 40 40 41 41 42 42 42

Nonterminals, with rules where they appear

Array                : 12
Atrib                : 6 34 34 35 35 36 36 37 37 38 38
Cicle                : 11
Comando              : 1 2
Comandos             : 1 29 29 30 30 31 31 32 32 33 33 34 35 36 37 38 0
Condition            : 10
End                  : 9
Exp                  : 7 14 15 22 28 29 30 31 32 33
Factor               : 17 18 19 34 34 35 35 36 36 37 37 38 38
Matriz               : 13
Printing             : 5
Reading              : 3
Start                : 8
Termo                : 14 15 16 17 18 29 30 31 32 33
Writing              : 4

Parsing method: LALR

state 0

    (0) S' -> . Comandos
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 17
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 1

    (9) Comando -> End .

    FI              reduce using rule 9 (Comando -> End .)
    READ            reduce using rule 9 (Comando -> End .)
    WRITE           reduce using rule 9 (Comando -> End .)
    PRINT           reduce using rule 9 (Comando -> End .)
    id              reduce using rule 9 (Comando -> End .)
    START           reduce using rule 9 (Comando -> End .)
    END             reduce using rule 9 (Comando -> End .)
    IF              reduce using rule 9 (Comando -> End .)
    FOR             reduce using rule 9 (Comando -> End .)
    num             reduce using rule 9 (Comando -> End .)
    (               reduce using rule 9 (Comando -> End .)
    ELSE            reduce using rule 9 (Comando -> End .)
    ROF             reduce using rule 9 (Comando -> End .)
    $end            reduce using rule 9 (Comando -> End .)


state 2

    (2) Comandos -> Comando .

    FI              reduce using rule 2 (Comandos -> Comando .)
    READ            reduce using rule 2 (Comandos -> Comando .)
    WRITE           reduce using rule 2 (Comandos -> Comando .)
    PRINT           reduce using rule 2 (Comandos -> Comando .)
    id              reduce using rule 2 (Comandos -> Comando .)
    START           reduce using rule 2 (Comandos -> Comando .)
    END             reduce using rule 2 (Comandos -> Comando .)
    IF              reduce using rule 2 (Comandos -> Comando .)
    FOR             reduce using rule 2 (Comandos -> Comando .)
    num             reduce using rule 2 (Comandos -> Comando .)
    (               reduce using rule 2 (Comandos -> Comando .)
    ELSE            reduce using rule 2 (Comandos -> Comando .)
    $end            reduce using rule 2 (Comandos -> Comando .)
    ROF             reduce using rule 2 (Comandos -> Comando .)


state 3

    (13) Comando -> Matriz .

    FI              reduce using rule 13 (Comando -> Matriz .)
    READ            reduce using rule 13 (Comando -> Matriz .)
    WRITE           reduce using rule 13 (Comando -> Matriz .)
    PRINT           reduce using rule 13 (Comando -> Matriz .)
    id              reduce using rule 13 (Comando -> Matriz .)
    START           reduce using rule 13 (Comando -> Matriz .)
    END             reduce using rule 13 (Comando -> Matriz .)
    IF              reduce using rule 13 (Comando -> Matriz .)
    FOR             reduce using rule 13 (Comando -> Matriz .)
    num             reduce using rule 13 (Comando -> Matriz .)
    (               reduce using rule 13 (Comando -> Matriz .)
    ELSE            reduce using rule 13 (Comando -> Matriz .)
    ROF             reduce using rule 13 (Comando -> Matriz .)
    $end            reduce using rule 13 (Comando -> Matriz .)


state 4

    (23) Reading -> READ . id

    id              shift and go to state 26


state 5

    (4) Comando -> Writing .

    FI              reduce using rule 4 (Comando -> Writing .)
    READ            reduce using rule 4 (Comando -> Writing .)
    WRITE           reduce using rule 4 (Comando -> Writing .)
    PRINT           reduce using rule 4 (Comando -> Writing .)
    id              reduce using rule 4 (Comando -> Writing .)
    START           reduce using rule 4 (Comando -> Writing .)
    END             reduce using rule 4 (Comando -> Writing .)
    IF              reduce using rule 4 (Comando -> Writing .)
    FOR             reduce using rule 4 (Comando -> Writing .)
    num             reduce using rule 4 (Comando -> Writing .)
    (               reduce using rule 4 (Comando -> Writing .)
    ELSE            reduce using rule 4 (Comando -> Writing .)
    ROF             reduce using rule 4 (Comando -> Writing .)
    $end            reduce using rule 4 (Comando -> Writing .)


state 6

    (8) Comando -> Start .

    FI              reduce using rule 8 (Comando -> Start .)
    READ            reduce using rule 8 (Comando -> Start .)
    WRITE           reduce using rule 8 (Comando -> Start .)
    PRINT           reduce using rule 8 (Comando -> Start .)
    id              reduce using rule 8 (Comando -> Start .)
    START           reduce using rule 8 (Comando -> Start .)
    END             reduce using rule 8 (Comando -> Start .)
    IF              reduce using rule 8 (Comando -> Start .)
    FOR             reduce using rule 8 (Comando -> Start .)
    num             reduce using rule 8 (Comando -> Start .)
    (               reduce using rule 8 (Comando -> Start .)
    ELSE            reduce using rule 8 (Comando -> Start .)
    ROF             reduce using rule 8 (Comando -> Start .)
    $end            reduce using rule 8 (Comando -> Start .)


state 7

    (21) Factor -> num .

    ;               reduce using rule 21 (Factor -> num .)
    *               reduce using rule 21 (Factor -> num .)
    /               reduce using rule 21 (Factor -> num .)
    +               reduce using rule 21 (Factor -> num .)
    -               reduce using rule 21 (Factor -> num .)
    ELSE            reduce using rule 21 (Factor -> num .)
    READ            reduce using rule 21 (Factor -> num .)
    WRITE           reduce using rule 21 (Factor -> num .)
    PRINT           reduce using rule 21 (Factor -> num .)
    id              reduce using rule 21 (Factor -> num .)
    START           reduce using rule 21 (Factor -> num .)
    END             reduce using rule 21 (Factor -> num .)
    IF              reduce using rule 21 (Factor -> num .)
    FOR             reduce using rule 21 (Factor -> num .)
    num             reduce using rule 21 (Factor -> num .)
    (               reduce using rule 21 (Factor -> num .)
    ROF             reduce using rule 21 (Factor -> num .)
    $end            reduce using rule 21 (Factor -> num .)
    )               reduce using rule 21 (Factor -> num .)
    FI              reduce using rule 21 (Factor -> num .)
    >               reduce using rule 21 (Factor -> num .)
    <               reduce using rule 21 (Factor -> num .)
    =               reduce using rule 21 (Factor -> num .)


state 8

    (19) Termo -> Factor .

    *               reduce using rule 19 (Termo -> Factor .)
    /               reduce using rule 19 (Termo -> Factor .)
    +               reduce using rule 19 (Termo -> Factor .)
    -               reduce using rule 19 (Termo -> Factor .)
    FI              reduce using rule 19 (Termo -> Factor .)
    READ            reduce using rule 19 (Termo -> Factor .)
    WRITE           reduce using rule 19 (Termo -> Factor .)
    PRINT           reduce using rule 19 (Termo -> Factor .)
    id              reduce using rule 19 (Termo -> Factor .)
    START           reduce using rule 19 (Termo -> Factor .)
    END             reduce using rule 19 (Termo -> Factor .)
    IF              reduce using rule 19 (Termo -> Factor .)
    FOR             reduce using rule 19 (Termo -> Factor .)
    num             reduce using rule 19 (Termo -> Factor .)
    (               reduce using rule 19 (Termo -> Factor .)
    ELSE            reduce using rule 19 (Termo -> Factor .)
    $end            reduce using rule 19 (Termo -> Factor .)
    ;               reduce using rule 19 (Termo -> Factor .)
    )               reduce using rule 19 (Termo -> Factor .)
    ROF             reduce using rule 19 (Termo -> Factor .)
    >               reduce using rule 19 (Termo -> Factor .)
    <               reduce using rule 19 (Termo -> Factor .)
    =               reduce using rule 19 (Termo -> Factor .)


state 9

    (25) Printing -> PRINT . ( frase )

    (               shift and go to state 27


state 10

    (3) Comando -> Reading .

    FI              reduce using rule 3 (Comando -> Reading .)
    READ            reduce using rule 3 (Comando -> Reading .)
    WRITE           reduce using rule 3 (Comando -> Reading .)
    PRINT           reduce using rule 3 (Comando -> Reading .)
    id              reduce using rule 3 (Comando -> Reading .)
    START           reduce using rule 3 (Comando -> Reading .)
    END             reduce using rule 3 (Comando -> Reading .)
    IF              reduce using rule 3 (Comando -> Reading .)
    FOR             reduce using rule 3 (Comando -> Reading .)
    num             reduce using rule 3 (Comando -> Reading .)
    (               reduce using rule 3 (Comando -> Reading .)
    ELSE            reduce using rule 3 (Comando -> Reading .)
    ROF             reduce using rule 3 (Comando -> Reading .)
    $end            reduce using rule 3 (Comando -> Reading .)


state 11

    (28) Atrib -> id . = Exp
    (39) Array -> id . [ num ] FI
    (40) Array -> id . [ num ] = num
    (41) Matriz -> id . [ num ] [ num ] FI
    (42) Matriz -> id . [ num ] [ num ] = num
    (20) Factor -> id .

    =               shift and go to state 28
    [               shift and go to state 29
    *               reduce using rule 20 (Factor -> id .)
    /               reduce using rule 20 (Factor -> id .)
    +               reduce using rule 20 (Factor -> id .)
    -               reduce using rule 20 (Factor -> id .)
    ELSE            reduce using rule 20 (Factor -> id .)
    READ            reduce using rule 20 (Factor -> id .)
    WRITE           reduce using rule 20 (Factor -> id .)
    PRINT           reduce using rule 20 (Factor -> id .)
    id              reduce using rule 20 (Factor -> id .)
    START           reduce using rule 20 (Factor -> id .)
    END             reduce using rule 20 (Factor -> id .)
    IF              reduce using rule 20 (Factor -> id .)
    FOR             reduce using rule 20 (Factor -> id .)
    num             reduce using rule 20 (Factor -> id .)
    (               reduce using rule 20 (Factor -> id .)
    ROF             reduce using rule 20 (Factor -> id .)
    FI              reduce using rule 20 (Factor -> id .)
    $end            reduce using rule 20 (Factor -> id .)


state 12

    (22) Factor -> ( . Exp )
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Termo                          shift and go to state 13
    Exp                            shift and go to state 30
    Factor                         shift and go to state 8

state 13

    (16) Exp -> Termo .
    (17) Termo -> Termo . * Factor
    (18) Termo -> Termo . / Factor

    +               reduce using rule 16 (Exp -> Termo .)
    -               reduce using rule 16 (Exp -> Termo .)
    ELSE            reduce using rule 16 (Exp -> Termo .)
    READ            reduce using rule 16 (Exp -> Termo .)
    WRITE           reduce using rule 16 (Exp -> Termo .)
    PRINT           reduce using rule 16 (Exp -> Termo .)
    id              reduce using rule 16 (Exp -> Termo .)
    START           reduce using rule 16 (Exp -> Termo .)
    END             reduce using rule 16 (Exp -> Termo .)
    IF              reduce using rule 16 (Exp -> Termo .)
    FOR             reduce using rule 16 (Exp -> Termo .)
    num             reduce using rule 16 (Exp -> Termo .)
    (               reduce using rule 16 (Exp -> Termo .)
    FI              reduce using rule 16 (Exp -> Termo .)
    ROF             reduce using rule 16 (Exp -> Termo .)
    $end            reduce using rule 16 (Exp -> Termo .)
    >               reduce using rule 16 (Exp -> Termo .)
    <               reduce using rule 16 (Exp -> Termo .)
    =               reduce using rule 16 (Exp -> Termo .)
    )               reduce using rule 16 (Exp -> Termo .)
    ;               reduce using rule 16 (Exp -> Termo .)
    *               shift and go to state 32
    /               shift and go to state 33


state 14

    (10) Comando -> Condition .

    FI              reduce using rule 10 (Comando -> Condition .)
    READ            reduce using rule 10 (Comando -> Condition .)
    WRITE           reduce using rule 10 (Comando -> Condition .)
    PRINT           reduce using rule 10 (Comando -> Condition .)
    id              reduce using rule 10 (Comando -> Condition .)
    START           reduce using rule 10 (Comando -> Condition .)
    END             reduce using rule 10 (Comando -> Condition .)
    IF              reduce using rule 10 (Comando -> Condition .)
    FOR             reduce using rule 10 (Comando -> Condition .)
    num             reduce using rule 10 (Comando -> Condition .)
    (               reduce using rule 10 (Comando -> Condition .)
    ELSE            reduce using rule 10 (Comando -> Condition .)
    ROF             reduce using rule 10 (Comando -> Condition .)
    $end            reduce using rule 10 (Comando -> Condition .)


state 15

    (27) End -> END .

    FI              reduce using rule 27 (End -> END .)
    READ            reduce using rule 27 (End -> END .)
    WRITE           reduce using rule 27 (End -> END .)
    PRINT           reduce using rule 27 (End -> END .)
    id              reduce using rule 27 (End -> END .)
    START           reduce using rule 27 (End -> END .)
    END             reduce using rule 27 (End -> END .)
    IF              reduce using rule 27 (End -> END .)
    FOR             reduce using rule 27 (End -> END .)
    num             reduce using rule 27 (End -> END .)
    (               reduce using rule 27 (End -> END .)
    ROF             reduce using rule 27 (End -> END .)
    ELSE            reduce using rule 27 (End -> END .)
    $end            reduce using rule 27 (End -> END .)


state 16

    (34) Cicle -> FOR . ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> FOR . ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> FOR . ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> FOR . ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> FOR . ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF

    (               shift and go to state 34


state 17

    (0) S' -> Comandos .
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 18

    (24) Writing -> WRITE . id

    id              shift and go to state 36


state 19

    (26) Start -> START .

    ELSE            reduce using rule 26 (Start -> START .)
    READ            reduce using rule 26 (Start -> START .)
    WRITE           reduce using rule 26 (Start -> START .)
    PRINT           reduce using rule 26 (Start -> START .)
    id              reduce using rule 26 (Start -> START .)
    START           reduce using rule 26 (Start -> START .)
    END             reduce using rule 26 (Start -> START .)
    IF              reduce using rule 26 (Start -> START .)
    FOR             reduce using rule 26 (Start -> START .)
    num             reduce using rule 26 (Start -> START .)
    (               reduce using rule 26 (Start -> START .)
    ROF             reduce using rule 26 (Start -> START .)
    $end            reduce using rule 26 (Start -> START .)
    FI              reduce using rule 26 (Start -> START .)


state 20

    (5) Comando -> Printing .

    FI              reduce using rule 5 (Comando -> Printing .)
    READ            reduce using rule 5 (Comando -> Printing .)
    WRITE           reduce using rule 5 (Comando -> Printing .)
    PRINT           reduce using rule 5 (Comando -> Printing .)
    id              reduce using rule 5 (Comando -> Printing .)
    START           reduce using rule 5 (Comando -> Printing .)
    END             reduce using rule 5 (Comando -> Printing .)
    IF              reduce using rule 5 (Comando -> Printing .)
    FOR             reduce using rule 5 (Comando -> Printing .)
    num             reduce using rule 5 (Comando -> Printing .)
    (               reduce using rule 5 (Comando -> Printing .)
    ELSE            reduce using rule 5 (Comando -> Printing .)
    ROF             reduce using rule 5 (Comando -> Printing .)
    $end            reduce using rule 5 (Comando -> Printing .)


state 21

    (7) Comando -> Exp .
    (14) Exp -> Exp . + Termo
    (15) Exp -> Exp . - Termo

    FI              reduce using rule 7 (Comando -> Exp .)
    READ            reduce using rule 7 (Comando -> Exp .)
    WRITE           reduce using rule 7 (Comando -> Exp .)
    PRINT           reduce using rule 7 (Comando -> Exp .)
    id              reduce using rule 7 (Comando -> Exp .)
    START           reduce using rule 7 (Comando -> Exp .)
    END             reduce using rule 7 (Comando -> Exp .)
    IF              reduce using rule 7 (Comando -> Exp .)
    FOR             reduce using rule 7 (Comando -> Exp .)
    num             reduce using rule 7 (Comando -> Exp .)
    (               reduce using rule 7 (Comando -> Exp .)
    ELSE            reduce using rule 7 (Comando -> Exp .)
    ROF             reduce using rule 7 (Comando -> Exp .)
    $end            reduce using rule 7 (Comando -> Exp .)
    +               shift and go to state 37
    -               shift and go to state 38


state 22

    (11) Comando -> Cicle .

    FI              reduce using rule 11 (Comando -> Cicle .)
    READ            reduce using rule 11 (Comando -> Cicle .)
    WRITE           reduce using rule 11 (Comando -> Cicle .)
    PRINT           reduce using rule 11 (Comando -> Cicle .)
    id              reduce using rule 11 (Comando -> Cicle .)
    START           reduce using rule 11 (Comando -> Cicle .)
    END             reduce using rule 11 (Comando -> Cicle .)
    IF              reduce using rule 11 (Comando -> Cicle .)
    FOR             reduce using rule 11 (Comando -> Cicle .)
    num             reduce using rule 11 (Comando -> Cicle .)
    (               reduce using rule 11 (Comando -> Cicle .)
    ELSE            reduce using rule 11 (Comando -> Cicle .)
    ROF             reduce using rule 11 (Comando -> Cicle .)
    $end            reduce using rule 11 (Comando -> Cicle .)


state 23

    (29) Condition -> IF . ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> IF . ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> IF . ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> IF . ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> IF . ( Exp = = Termo ) THEN Comandos ELSE Comandos FI

    (               shift and go to state 39


state 24

    (6) Comando -> Atrib .

    FI              reduce using rule 6 (Comando -> Atrib .)
    READ            reduce using rule 6 (Comando -> Atrib .)
    WRITE           reduce using rule 6 (Comando -> Atrib .)
    PRINT           reduce using rule 6 (Comando -> Atrib .)
    id              reduce using rule 6 (Comando -> Atrib .)
    START           reduce using rule 6 (Comando -> Atrib .)
    END             reduce using rule 6 (Comando -> Atrib .)
    IF              reduce using rule 6 (Comando -> Atrib .)
    FOR             reduce using rule 6 (Comando -> Atrib .)
    num             reduce using rule 6 (Comando -> Atrib .)
    (               reduce using rule 6 (Comando -> Atrib .)
    ELSE            reduce using rule 6 (Comando -> Atrib .)
    ROF             reduce using rule 6 (Comando -> Atrib .)
    $end            reduce using rule 6 (Comando -> Atrib .)


state 25

    (12) Comando -> Array .

    FI              reduce using rule 12 (Comando -> Array .)
    READ            reduce using rule 12 (Comando -> Array .)
    WRITE           reduce using rule 12 (Comando -> Array .)
    PRINT           reduce using rule 12 (Comando -> Array .)
    id              reduce using rule 12 (Comando -> Array .)
    START           reduce using rule 12 (Comando -> Array .)
    END             reduce using rule 12 (Comando -> Array .)
    IF              reduce using rule 12 (Comando -> Array .)
    FOR             reduce using rule 12 (Comando -> Array .)
    num             reduce using rule 12 (Comando -> Array .)
    (               reduce using rule 12 (Comando -> Array .)
    ELSE            reduce using rule 12 (Comando -> Array .)
    ROF             reduce using rule 12 (Comando -> Array .)
    $end            reduce using rule 12 (Comando -> Array .)


state 26

    (23) Reading -> READ id .

    ROF             reduce using rule 23 (Reading -> READ id .)
    READ            reduce using rule 23 (Reading -> READ id .)
    WRITE           reduce using rule 23 (Reading -> READ id .)
    PRINT           reduce using rule 23 (Reading -> READ id .)
    id              reduce using rule 23 (Reading -> READ id .)
    START           reduce using rule 23 (Reading -> READ id .)
    END             reduce using rule 23 (Reading -> READ id .)
    IF              reduce using rule 23 (Reading -> READ id .)
    FOR             reduce using rule 23 (Reading -> READ id .)
    num             reduce using rule 23 (Reading -> READ id .)
    (               reduce using rule 23 (Reading -> READ id .)
    FI              reduce using rule 23 (Reading -> READ id .)
    ELSE            reduce using rule 23 (Reading -> READ id .)
    $end            reduce using rule 23 (Reading -> READ id .)


state 27

    (25) Printing -> PRINT ( . frase )

    frase           shift and go to state 40


state 28

    (28) Atrib -> id = . Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Termo                          shift and go to state 13
    Exp                            shift and go to state 41
    Factor                         shift and go to state 8

state 29

    (39) Array -> id [ . num ] FI
    (40) Array -> id [ . num ] = num
    (41) Matriz -> id [ . num ] [ num ] FI
    (42) Matriz -> id [ . num ] [ num ] = num

    num             shift and go to state 42


state 30

    (22) Factor -> ( Exp . )
    (14) Exp -> Exp . + Termo
    (15) Exp -> Exp . - Termo

    )               shift and go to state 43
    +               shift and go to state 37
    -               shift and go to state 38


state 31

    (20) Factor -> id .

    ;               reduce using rule 20 (Factor -> id .)
    *               reduce using rule 20 (Factor -> id .)
    /               reduce using rule 20 (Factor -> id .)
    +               reduce using rule 20 (Factor -> id .)
    -               reduce using rule 20 (Factor -> id .)
    READ            reduce using rule 20 (Factor -> id .)
    WRITE           reduce using rule 20 (Factor -> id .)
    PRINT           reduce using rule 20 (Factor -> id .)
    id              reduce using rule 20 (Factor -> id .)
    START           reduce using rule 20 (Factor -> id .)
    END             reduce using rule 20 (Factor -> id .)
    IF              reduce using rule 20 (Factor -> id .)
    FOR             reduce using rule 20 (Factor -> id .)
    num             reduce using rule 20 (Factor -> id .)
    (               reduce using rule 20 (Factor -> id .)
    $end            reduce using rule 20 (Factor -> id .)
    )               reduce using rule 20 (Factor -> id .)
    ELSE            reduce using rule 20 (Factor -> id .)
    FI              reduce using rule 20 (Factor -> id .)
    ROF             reduce using rule 20 (Factor -> id .)
    >               reduce using rule 20 (Factor -> id .)
    <               reduce using rule 20 (Factor -> id .)
    =               reduce using rule 20 (Factor -> id .)


state 32

    (17) Termo -> Termo * . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Factor                         shift and go to state 44

state 33

    (18) Termo -> Termo / . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Factor                         shift and go to state 45

state 34

    (34) Cicle -> FOR ( . Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> FOR ( . Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> FOR ( . Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> FOR ( . Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> FOR ( . Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (28) Atrib -> . id = Exp

    id              shift and go to state 47

    Atrib                          shift and go to state 46

state 35

    (1) Comandos -> Comandos Comando .

    FI              reduce using rule 1 (Comandos -> Comandos Comando .)
    READ            reduce using rule 1 (Comandos -> Comandos Comando .)
    WRITE           reduce using rule 1 (Comandos -> Comandos Comando .)
    PRINT           reduce using rule 1 (Comandos -> Comandos Comando .)
    id              reduce using rule 1 (Comandos -> Comandos Comando .)
    START           reduce using rule 1 (Comandos -> Comandos Comando .)
    END             reduce using rule 1 (Comandos -> Comandos Comando .)
    IF              reduce using rule 1 (Comandos -> Comandos Comando .)
    FOR             reduce using rule 1 (Comandos -> Comandos Comando .)
    num             reduce using rule 1 (Comandos -> Comandos Comando .)
    (               reduce using rule 1 (Comandos -> Comandos Comando .)
    ELSE            reduce using rule 1 (Comandos -> Comandos Comando .)
    $end            reduce using rule 1 (Comandos -> Comandos Comando .)
    ROF             reduce using rule 1 (Comandos -> Comandos Comando .)


state 36

    (24) Writing -> WRITE id .

    ROF             reduce using rule 24 (Writing -> WRITE id .)
    READ            reduce using rule 24 (Writing -> WRITE id .)
    WRITE           reduce using rule 24 (Writing -> WRITE id .)
    PRINT           reduce using rule 24 (Writing -> WRITE id .)
    id              reduce using rule 24 (Writing -> WRITE id .)
    START           reduce using rule 24 (Writing -> WRITE id .)
    END             reduce using rule 24 (Writing -> WRITE id .)
    IF              reduce using rule 24 (Writing -> WRITE id .)
    FOR             reduce using rule 24 (Writing -> WRITE id .)
    num             reduce using rule 24 (Writing -> WRITE id .)
    (               reduce using rule 24 (Writing -> WRITE id .)
    FI              reduce using rule 24 (Writing -> WRITE id .)
    ELSE            reduce using rule 24 (Writing -> WRITE id .)
    $end            reduce using rule 24 (Writing -> WRITE id .)


state 37

    (14) Exp -> Exp + . Termo
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Termo                          shift and go to state 48
    Factor                         shift and go to state 8

state 38

    (15) Exp -> Exp - . Termo
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Termo                          shift and go to state 49
    Factor                         shift and go to state 8

state 39

    (29) Condition -> IF ( . Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> IF ( . Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> IF ( . Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> IF ( . Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> IF ( . Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Termo                          shift and go to state 13
    Exp                            shift and go to state 50
    Factor                         shift and go to state 8

state 40

    (25) Printing -> PRINT ( frase . )

    )               shift and go to state 51


state 41

    (28) Atrib -> id = Exp .
    (14) Exp -> Exp . + Termo
    (15) Exp -> Exp . - Termo

    ROF             reduce using rule 28 (Atrib -> id = Exp .)
    READ            reduce using rule 28 (Atrib -> id = Exp .)
    WRITE           reduce using rule 28 (Atrib -> id = Exp .)
    PRINT           reduce using rule 28 (Atrib -> id = Exp .)
    id              reduce using rule 28 (Atrib -> id = Exp .)
    START           reduce using rule 28 (Atrib -> id = Exp .)
    END             reduce using rule 28 (Atrib -> id = Exp .)
    IF              reduce using rule 28 (Atrib -> id = Exp .)
    FOR             reduce using rule 28 (Atrib -> id = Exp .)
    num             reduce using rule 28 (Atrib -> id = Exp .)
    (               reduce using rule 28 (Atrib -> id = Exp .)
    FI              reduce using rule 28 (Atrib -> id = Exp .)
    )               reduce using rule 28 (Atrib -> id = Exp .)
    ELSE            reduce using rule 28 (Atrib -> id = Exp .)
    $end            reduce using rule 28 (Atrib -> id = Exp .)
    ;               reduce using rule 28 (Atrib -> id = Exp .)
    +               shift and go to state 37
    -               shift and go to state 38


state 42

    (39) Array -> id [ num . ] FI
    (40) Array -> id [ num . ] = num
    (41) Matriz -> id [ num . ] [ num ] FI
    (42) Matriz -> id [ num . ] [ num ] = num

    ]               shift and go to state 52


state 43

    (22) Factor -> ( Exp ) .

    ;               reduce using rule 22 (Factor -> ( Exp ) .)
    *               reduce using rule 22 (Factor -> ( Exp ) .)
    /               reduce using rule 22 (Factor -> ( Exp ) .)
    +               reduce using rule 22 (Factor -> ( Exp ) .)
    -               reduce using rule 22 (Factor -> ( Exp ) .)
    ELSE            reduce using rule 22 (Factor -> ( Exp ) .)
    READ            reduce using rule 22 (Factor -> ( Exp ) .)
    WRITE           reduce using rule 22 (Factor -> ( Exp ) .)
    PRINT           reduce using rule 22 (Factor -> ( Exp ) .)
    id              reduce using rule 22 (Factor -> ( Exp ) .)
    START           reduce using rule 22 (Factor -> ( Exp ) .)
    END             reduce using rule 22 (Factor -> ( Exp ) .)
    IF              reduce using rule 22 (Factor -> ( Exp ) .)
    FOR             reduce using rule 22 (Factor -> ( Exp ) .)
    num             reduce using rule 22 (Factor -> ( Exp ) .)
    (               reduce using rule 22 (Factor -> ( Exp ) .)
    ROF             reduce using rule 22 (Factor -> ( Exp ) .)
    $end            reduce using rule 22 (Factor -> ( Exp ) .)
    )               reduce using rule 22 (Factor -> ( Exp ) .)
    FI              reduce using rule 22 (Factor -> ( Exp ) .)
    >               reduce using rule 22 (Factor -> ( Exp ) .)
    <               reduce using rule 22 (Factor -> ( Exp ) .)
    =               reduce using rule 22 (Factor -> ( Exp ) .)


state 44

    (17) Termo -> Termo * Factor .

    *               reduce using rule 17 (Termo -> Termo * Factor .)
    /               reduce using rule 17 (Termo -> Termo * Factor .)
    +               reduce using rule 17 (Termo -> Termo * Factor .)
    -               reduce using rule 17 (Termo -> Termo * Factor .)
    FI              reduce using rule 17 (Termo -> Termo * Factor .)
    READ            reduce using rule 17 (Termo -> Termo * Factor .)
    WRITE           reduce using rule 17 (Termo -> Termo * Factor .)
    PRINT           reduce using rule 17 (Termo -> Termo * Factor .)
    id              reduce using rule 17 (Termo -> Termo * Factor .)
    START           reduce using rule 17 (Termo -> Termo * Factor .)
    END             reduce using rule 17 (Termo -> Termo * Factor .)
    IF              reduce using rule 17 (Termo -> Termo * Factor .)
    FOR             reduce using rule 17 (Termo -> Termo * Factor .)
    num             reduce using rule 17 (Termo -> Termo * Factor .)
    (               reduce using rule 17 (Termo -> Termo * Factor .)
    ELSE            reduce using rule 17 (Termo -> Termo * Factor .)
    $end            reduce using rule 17 (Termo -> Termo * Factor .)
    ;               reduce using rule 17 (Termo -> Termo * Factor .)
    )               reduce using rule 17 (Termo -> Termo * Factor .)
    ROF             reduce using rule 17 (Termo -> Termo * Factor .)
    >               reduce using rule 17 (Termo -> Termo * Factor .)
    <               reduce using rule 17 (Termo -> Termo * Factor .)
    =               reduce using rule 17 (Termo -> Termo * Factor .)


state 45

    (18) Termo -> Termo / Factor .

    *               reduce using rule 18 (Termo -> Termo / Factor .)
    /               reduce using rule 18 (Termo -> Termo / Factor .)
    +               reduce using rule 18 (Termo -> Termo / Factor .)
    -               reduce using rule 18 (Termo -> Termo / Factor .)
    FI              reduce using rule 18 (Termo -> Termo / Factor .)
    READ            reduce using rule 18 (Termo -> Termo / Factor .)
    WRITE           reduce using rule 18 (Termo -> Termo / Factor .)
    PRINT           reduce using rule 18 (Termo -> Termo / Factor .)
    id              reduce using rule 18 (Termo -> Termo / Factor .)
    START           reduce using rule 18 (Termo -> Termo / Factor .)
    END             reduce using rule 18 (Termo -> Termo / Factor .)
    IF              reduce using rule 18 (Termo -> Termo / Factor .)
    FOR             reduce using rule 18 (Termo -> Termo / Factor .)
    num             reduce using rule 18 (Termo -> Termo / Factor .)
    (               reduce using rule 18 (Termo -> Termo / Factor .)
    ELSE            reduce using rule 18 (Termo -> Termo / Factor .)
    $end            reduce using rule 18 (Termo -> Termo / Factor .)
    ;               reduce using rule 18 (Termo -> Termo / Factor .)
    )               reduce using rule 18 (Termo -> Termo / Factor .)
    ROF             reduce using rule 18 (Termo -> Termo / Factor .)
    >               reduce using rule 18 (Termo -> Termo / Factor .)
    <               reduce using rule 18 (Termo -> Termo / Factor .)
    =               reduce using rule 18 (Termo -> Termo / Factor .)


state 46

    (34) Cicle -> FOR ( Atrib . ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> FOR ( Atrib . ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> FOR ( Atrib . ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> FOR ( Atrib . ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> FOR ( Atrib . ; Factor = = Factor ; Atrib ) Comandos ROF

    ;               shift and go to state 53


state 47

    (28) Atrib -> id . = Exp

    =               shift and go to state 28


state 48

    (14) Exp -> Exp + Termo .
    (17) Termo -> Termo . * Factor
    (18) Termo -> Termo . / Factor

    +               reduce using rule 14 (Exp -> Exp + Termo .)
    -               reduce using rule 14 (Exp -> Exp + Termo .)
    ELSE            reduce using rule 14 (Exp -> Exp + Termo .)
    READ            reduce using rule 14 (Exp -> Exp + Termo .)
    WRITE           reduce using rule 14 (Exp -> Exp + Termo .)
    PRINT           reduce using rule 14 (Exp -> Exp + Termo .)
    id              reduce using rule 14 (Exp -> Exp + Termo .)
    START           reduce using rule 14 (Exp -> Exp + Termo .)
    END             reduce using rule 14 (Exp -> Exp + Termo .)
    IF              reduce using rule 14 (Exp -> Exp + Termo .)
    FOR             reduce using rule 14 (Exp -> Exp + Termo .)
    num             reduce using rule 14 (Exp -> Exp + Termo .)
    (               reduce using rule 14 (Exp -> Exp + Termo .)
    FI              reduce using rule 14 (Exp -> Exp + Termo .)
    ROF             reduce using rule 14 (Exp -> Exp + Termo .)
    $end            reduce using rule 14 (Exp -> Exp + Termo .)
    >               reduce using rule 14 (Exp -> Exp + Termo .)
    <               reduce using rule 14 (Exp -> Exp + Termo .)
    =               reduce using rule 14 (Exp -> Exp + Termo .)
    )               reduce using rule 14 (Exp -> Exp + Termo .)
    ;               reduce using rule 14 (Exp -> Exp + Termo .)
    *               shift and go to state 32
    /               shift and go to state 33


state 49

    (15) Exp -> Exp - Termo .
    (17) Termo -> Termo . * Factor
    (18) Termo -> Termo . / Factor

    +               reduce using rule 15 (Exp -> Exp - Termo .)
    -               reduce using rule 15 (Exp -> Exp - Termo .)
    ELSE            reduce using rule 15 (Exp -> Exp - Termo .)
    READ            reduce using rule 15 (Exp -> Exp - Termo .)
    WRITE           reduce using rule 15 (Exp -> Exp - Termo .)
    PRINT           reduce using rule 15 (Exp -> Exp - Termo .)
    id              reduce using rule 15 (Exp -> Exp - Termo .)
    START           reduce using rule 15 (Exp -> Exp - Termo .)
    END             reduce using rule 15 (Exp -> Exp - Termo .)
    IF              reduce using rule 15 (Exp -> Exp - Termo .)
    FOR             reduce using rule 15 (Exp -> Exp - Termo .)
    num             reduce using rule 15 (Exp -> Exp - Termo .)
    (               reduce using rule 15 (Exp -> Exp - Termo .)
    FI              reduce using rule 15 (Exp -> Exp - Termo .)
    ROF             reduce using rule 15 (Exp -> Exp - Termo .)
    $end            reduce using rule 15 (Exp -> Exp - Termo .)
    >               reduce using rule 15 (Exp -> Exp - Termo .)
    <               reduce using rule 15 (Exp -> Exp - Termo .)
    =               reduce using rule 15 (Exp -> Exp - Termo .)
    )               reduce using rule 15 (Exp -> Exp - Termo .)
    ;               reduce using rule 15 (Exp -> Exp - Termo .)
    *               shift and go to state 32
    /               shift and go to state 33


state 50

    (29) Condition -> IF ( Exp . > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> IF ( Exp . < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> IF ( Exp . > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> IF ( Exp . < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> IF ( Exp . = = Termo ) THEN Comandos ELSE Comandos FI
    (14) Exp -> Exp . + Termo
    (15) Exp -> Exp . - Termo

    >               shift and go to state 56
    <               shift and go to state 55
    =               shift and go to state 54
    +               shift and go to state 37
    -               shift and go to state 38


state 51

    (25) Printing -> PRINT ( frase ) .

    READ            reduce using rule 25 (Printing -> PRINT ( frase ) .)
    WRITE           reduce using rule 25 (Printing -> PRINT ( frase ) .)
    PRINT           reduce using rule 25 (Printing -> PRINT ( frase ) .)
    id              reduce using rule 25 (Printing -> PRINT ( frase ) .)
    START           reduce using rule 25 (Printing -> PRINT ( frase ) .)
    END             reduce using rule 25 (Printing -> PRINT ( frase ) .)
    IF              reduce using rule 25 (Printing -> PRINT ( frase ) .)
    FOR             reduce using rule 25 (Printing -> PRINT ( frase ) .)
    num             reduce using rule 25 (Printing -> PRINT ( frase ) .)
    (               reduce using rule 25 (Printing -> PRINT ( frase ) .)
    $end            reduce using rule 25 (Printing -> PRINT ( frase ) .)
    ROF             reduce using rule 25 (Printing -> PRINT ( frase ) .)
    ELSE            reduce using rule 25 (Printing -> PRINT ( frase ) .)
    FI              reduce using rule 25 (Printing -> PRINT ( frase ) .)


state 52

    (39) Array -> id [ num ] . FI
    (40) Array -> id [ num ] . = num
    (41) Matriz -> id [ num ] . [ num ] FI
    (42) Matriz -> id [ num ] . [ num ] = num

    FI              shift and go to state 58
    =               shift and go to state 57
    [               shift and go to state 59


state 53

    (34) Cicle -> FOR ( Atrib ; . Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> FOR ( Atrib ; . Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> FOR ( Atrib ; . Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> FOR ( Atrib ; . Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> FOR ( Atrib ; . Factor = = Factor ; Atrib ) Comandos ROF
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Factor                         shift and go to state 60

state 54

    (33) Condition -> IF ( Exp = . = Termo ) THEN Comandos ELSE Comandos FI

    =               shift and go to state 61


state 55

    (30) Condition -> IF ( Exp < . Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> IF ( Exp < . = Termo ) THEN Comandos ELSE Comandos FI
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    =               shift and go to state 63
    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Termo                          shift and go to state 62
    Factor                         shift and go to state 8

state 56

    (29) Condition -> IF ( Exp > . Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> IF ( Exp > . = Termo ) THEN Comandos ELSE Comandos FI
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    =               shift and go to state 65
    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Termo                          shift and go to state 64
    Factor                         shift and go to state 8

state 57

    (40) Array -> id [ num ] = . num

    num             shift and go to state 66


state 58

    (39) Array -> id [ num ] FI .

    FI              reduce using rule 39 (Array -> id [ num ] FI .)
    READ            reduce using rule 39 (Array -> id [ num ] FI .)
    WRITE           reduce using rule 39 (Array -> id [ num ] FI .)
    PRINT           reduce using rule 39 (Array -> id [ num ] FI .)
    id              reduce using rule 39 (Array -> id [ num ] FI .)
    START           reduce using rule 39 (Array -> id [ num ] FI .)
    END             reduce using rule 39 (Array -> id [ num ] FI .)
    IF              reduce using rule 39 (Array -> id [ num ] FI .)
    FOR             reduce using rule 39 (Array -> id [ num ] FI .)
    num             reduce using rule 39 (Array -> id [ num ] FI .)
    (               reduce using rule 39 (Array -> id [ num ] FI .)
    $end            reduce using rule 39 (Array -> id [ num ] FI .)
    ELSE            reduce using rule 39 (Array -> id [ num ] FI .)
    ROF             reduce using rule 39 (Array -> id [ num ] FI .)


state 59

    (41) Matriz -> id [ num ] [ . num ] FI
    (42) Matriz -> id [ num ] [ . num ] = num

    num             shift and go to state 67


state 60

    (34) Cicle -> FOR ( Atrib ; Factor . < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> FOR ( Atrib ; Factor . > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> FOR ( Atrib ; Factor . < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> FOR ( Atrib ; Factor . > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> FOR ( Atrib ; Factor . = = Factor ; Atrib ) Comandos ROF

    <               shift and go to state 69
    >               shift and go to state 70
    =               shift and go to state 68


state 61

    (33) Condition -> IF ( Exp = = . Termo ) THEN Comandos ELSE Comandos FI
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Termo                          shift and go to state 71
    Factor                         shift and go to state 8

state 62

    (30) Condition -> IF ( Exp < Termo . ) THEN Comandos ELSE Comandos FI
    (17) Termo -> Termo . * Factor
    (18) Termo -> Termo . / Factor

    )               shift and go to state 72
    *               shift and go to state 32
    /               shift and go to state 33


state 63

    (32) Condition -> IF ( Exp < = . Termo ) THEN Comandos ELSE Comandos FI
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Termo                          shift and go to state 73
    Factor                         shift and go to state 8

state 64

    (29) Condition -> IF ( Exp > Termo . ) THEN Comandos ELSE Comandos FI
    (17) Termo -> Termo . * Factor
    (18) Termo -> Termo . / Factor

    )               shift and go to state 74
    *               shift and go to state 32
    /               shift and go to state 33


state 65

    (31) Condition -> IF ( Exp > = . Termo ) THEN Comandos ELSE Comandos FI
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Termo                          shift and go to state 75
    Factor                         shift and go to state 8

state 66

    (40) Array -> id [ num ] = num .

    FI              reduce using rule 40 (Array -> id [ num ] = num .)
    READ            reduce using rule 40 (Array -> id [ num ] = num .)
    WRITE           reduce using rule 40 (Array -> id [ num ] = num .)
    PRINT           reduce using rule 40 (Array -> id [ num ] = num .)
    id              reduce using rule 40 (Array -> id [ num ] = num .)
    START           reduce using rule 40 (Array -> id [ num ] = num .)
    END             reduce using rule 40 (Array -> id [ num ] = num .)
    IF              reduce using rule 40 (Array -> id [ num ] = num .)
    FOR             reduce using rule 40 (Array -> id [ num ] = num .)
    num             reduce using rule 40 (Array -> id [ num ] = num .)
    (               reduce using rule 40 (Array -> id [ num ] = num .)
    $end            reduce using rule 40 (Array -> id [ num ] = num .)
    ELSE            reduce using rule 40 (Array -> id [ num ] = num .)
    ROF             reduce using rule 40 (Array -> id [ num ] = num .)


state 67

    (41) Matriz -> id [ num ] [ num . ] FI
    (42) Matriz -> id [ num ] [ num . ] = num

    ]               shift and go to state 76


state 68

    (38) Cicle -> FOR ( Atrib ; Factor = . = Factor ; Atrib ) Comandos ROF

    =               shift and go to state 77


state 69

    (34) Cicle -> FOR ( Atrib ; Factor < . Factor ; Atrib ) Comandos ROF
    (36) Cicle -> FOR ( Atrib ; Factor < . = Factor ; Atrib ) Comandos ROF
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    =               shift and go to state 79
    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Factor                         shift and go to state 78

state 70

    (35) Cicle -> FOR ( Atrib ; Factor > . Factor ; Atrib ) Comandos ROF
    (37) Cicle -> FOR ( Atrib ; Factor > . = Factor ; Atrib ) Comandos ROF
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    =               shift and go to state 81
    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Factor                         shift and go to state 80

state 71

    (33) Condition -> IF ( Exp = = Termo . ) THEN Comandos ELSE Comandos FI
    (17) Termo -> Termo . * Factor
    (18) Termo -> Termo . / Factor

    )               shift and go to state 82
    *               shift and go to state 32
    /               shift and go to state 33


state 72

    (30) Condition -> IF ( Exp < Termo ) . THEN Comandos ELSE Comandos FI

    THEN            shift and go to state 83


state 73

    (32) Condition -> IF ( Exp < = Termo . ) THEN Comandos ELSE Comandos FI
    (17) Termo -> Termo . * Factor
    (18) Termo -> Termo . / Factor

    )               shift and go to state 84
    *               shift and go to state 32
    /               shift and go to state 33


state 74

    (29) Condition -> IF ( Exp > Termo ) . THEN Comandos ELSE Comandos FI

    THEN            shift and go to state 85


state 75

    (31) Condition -> IF ( Exp > = Termo . ) THEN Comandos ELSE Comandos FI
    (17) Termo -> Termo . * Factor
    (18) Termo -> Termo . / Factor

    )               shift and go to state 86
    *               shift and go to state 32
    /               shift and go to state 33


state 76

    (41) Matriz -> id [ num ] [ num ] . FI
    (42) Matriz -> id [ num ] [ num ] . = num

    FI              shift and go to state 88
    =               shift and go to state 87


state 77

    (38) Cicle -> FOR ( Atrib ; Factor = = . Factor ; Atrib ) Comandos ROF
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Factor                         shift and go to state 89

state 78

    (34) Cicle -> FOR ( Atrib ; Factor < Factor . ; Atrib ) Comandos ROF

    ;               shift and go to state 90


state 79

    (36) Cicle -> FOR ( Atrib ; Factor < = . Factor ; Atrib ) Comandos ROF
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Factor                         shift and go to state 91

state 80

    (35) Cicle -> FOR ( Atrib ; Factor > Factor . ; Atrib ) Comandos ROF

    ;               shift and go to state 92


state 81

    (37) Cicle -> FOR ( Atrib ; Factor > = . Factor ; Atrib ) Comandos ROF
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Factor                         shift and go to state 93

state 82

    (33) Condition -> IF ( Exp = = Termo ) . THEN Comandos ELSE Comandos FI

    THEN            shift and go to state 94


state 83

    (30) Condition -> IF ( Exp < Termo ) THEN . Comandos ELSE Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 95
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 84

    (32) Condition -> IF ( Exp < = Termo ) . THEN Comandos ELSE Comandos FI

    THEN            shift and go to state 96


state 85

    (29) Condition -> IF ( Exp > Termo ) THEN . Comandos ELSE Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 97
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 86

    (31) Condition -> IF ( Exp > = Termo ) . THEN Comandos ELSE Comandos FI

    THEN            shift and go to state 98


state 87

    (42) Matriz -> id [ num ] [ num ] = . num

    num             shift and go to state 99


state 88

    (41) Matriz -> id [ num ] [ num ] FI .

    ROF             reduce using rule 41 (Matriz -> id [ num ] [ num ] FI .)
    READ            reduce using rule 41 (Matriz -> id [ num ] [ num ] FI .)
    WRITE           reduce using rule 41 (Matriz -> id [ num ] [ num ] FI .)
    PRINT           reduce using rule 41 (Matriz -> id [ num ] [ num ] FI .)
    id              reduce using rule 41 (Matriz -> id [ num ] [ num ] FI .)
    START           reduce using rule 41 (Matriz -> id [ num ] [ num ] FI .)
    END             reduce using rule 41 (Matriz -> id [ num ] [ num ] FI .)
    IF              reduce using rule 41 (Matriz -> id [ num ] [ num ] FI .)
    FOR             reduce using rule 41 (Matriz -> id [ num ] [ num ] FI .)
    num             reduce using rule 41 (Matriz -> id [ num ] [ num ] FI .)
    (               reduce using rule 41 (Matriz -> id [ num ] [ num ] FI .)
    ELSE            reduce using rule 41 (Matriz -> id [ num ] [ num ] FI .)
    FI              reduce using rule 41 (Matriz -> id [ num ] [ num ] FI .)
    $end            reduce using rule 41 (Matriz -> id [ num ] [ num ] FI .)


state 89

    (38) Cicle -> FOR ( Atrib ; Factor = = Factor . ; Atrib ) Comandos ROF

    ;               shift and go to state 100


state 90

    (34) Cicle -> FOR ( Atrib ; Factor < Factor ; . Atrib ) Comandos ROF
    (28) Atrib -> . id = Exp

    id              shift and go to state 47

    Atrib                          shift and go to state 101

state 91

    (36) Cicle -> FOR ( Atrib ; Factor < = Factor . ; Atrib ) Comandos ROF

    ;               shift and go to state 102


state 92

    (35) Cicle -> FOR ( Atrib ; Factor > Factor ; . Atrib ) Comandos ROF
    (28) Atrib -> . id = Exp

    id              shift and go to state 47

    Atrib                          shift and go to state 103

state 93

    (37) Cicle -> FOR ( Atrib ; Factor > = Factor . ; Atrib ) Comandos ROF

    ;               shift and go to state 104


state 94

    (33) Condition -> IF ( Exp = = Termo ) THEN . Comandos ELSE Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 105
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 95

    (30) Condition -> IF ( Exp < Termo ) THEN Comandos . ELSE Comandos FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    ELSE            shift and go to state 106
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 96

    (32) Condition -> IF ( Exp < = Termo ) THEN . Comandos ELSE Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 107
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 97

    (29) Condition -> IF ( Exp > Termo ) THEN Comandos . ELSE Comandos FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    ELSE            shift and go to state 108
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 98

    (31) Condition -> IF ( Exp > = Termo ) THEN . Comandos ELSE Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 109
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 99

    (42) Matriz -> id [ num ] [ num ] = num .

    ROF             reduce using rule 42 (Matriz -> id [ num ] [ num ] = num .)
    READ            reduce using rule 42 (Matriz -> id [ num ] [ num ] = num .)
    WRITE           reduce using rule 42 (Matriz -> id [ num ] [ num ] = num .)
    PRINT           reduce using rule 42 (Matriz -> id [ num ] [ num ] = num .)
    id              reduce using rule 42 (Matriz -> id [ num ] [ num ] = num .)
    START           reduce using rule 42 (Matriz -> id [ num ] [ num ] = num .)
    END             reduce using rule 42 (Matriz -> id [ num ] [ num ] = num .)
    IF              reduce using rule 42 (Matriz -> id [ num ] [ num ] = num .)
    FOR             reduce using rule 42 (Matriz -> id [ num ] [ num ] = num .)
    num             reduce using rule 42 (Matriz -> id [ num ] [ num ] = num .)
    (               reduce using rule 42 (Matriz -> id [ num ] [ num ] = num .)
    ELSE            reduce using rule 42 (Matriz -> id [ num ] [ num ] = num .)
    FI              reduce using rule 42 (Matriz -> id [ num ] [ num ] = num .)
    $end            reduce using rule 42 (Matriz -> id [ num ] [ num ] = num .)


state 100

    (38) Cicle -> FOR ( Atrib ; Factor = = Factor ; . Atrib ) Comandos ROF
    (28) Atrib -> . id = Exp

    id              shift and go to state 47

    Atrib                          shift and go to state 110

state 101

    (34) Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib . ) Comandos ROF

    )               shift and go to state 111


state 102

    (36) Cicle -> FOR ( Atrib ; Factor < = Factor ; . Atrib ) Comandos ROF
    (28) Atrib -> . id = Exp

    id              shift and go to state 47

    Atrib                          shift and go to state 112

state 103

    (35) Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib . ) Comandos ROF

    )               shift and go to state 113


state 104

    (37) Cicle -> FOR ( Atrib ; Factor > = Factor ; . Atrib ) Comandos ROF
    (28) Atrib -> . id = Exp

    id              shift and go to state 47

    Atrib                          shift and go to state 114

state 105

    (33) Condition -> IF ( Exp = = Termo ) THEN Comandos . ELSE Comandos FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    ELSE            shift and go to state 115
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 106

    (30) Condition -> IF ( Exp < Termo ) THEN Comandos ELSE . Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 116
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 107

    (32) Condition -> IF ( Exp < = Termo ) THEN Comandos . ELSE Comandos FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    ELSE            shift and go to state 117
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 108

    (29) Condition -> IF ( Exp > Termo ) THEN Comandos ELSE . Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 118
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 109

    (31) Condition -> IF ( Exp > = Termo ) THEN Comandos . ELSE Comandos FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    ELSE            shift and go to state 119
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 110

    (38) Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib . ) Comandos ROF

    )               shift and go to state 120


state 111

    (34) Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) . Comandos ROF
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 121
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 112

    (36) Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib . ) Comandos ROF

    )               shift and go to state 122


state 113

    (35) Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) . Comandos ROF
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 123
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 114

    (37) Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib . ) Comandos ROF

    )               shift and go to state 124


state 115

    (33) Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE . Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 125
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 116

    (30) Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos . FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    FI              shift and go to state 126
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 117

    (32) Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE . Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 127
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 118

    (29) Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos . FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    FI              shift and go to state 128
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 119

    (31) Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE . Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 129
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 120

    (38) Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) . Comandos ROF
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 130
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 121

    (34) Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos . ROF
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    ROF             shift and go to state 131
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 122

    (36) Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) . Comandos ROF
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 132
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 123

    (35) Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos . ROF
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    ROF             shift and go to state 133
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 124

    (37) Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) . Comandos ROF
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 134
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 125

    (33) Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos . FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    FI              shift and go to state 135
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 126

    (30) Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .

    FI              reduce using rule 30 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    READ            reduce using rule 30 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    WRITE           reduce using rule 30 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    PRINT           reduce using rule 30 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    id              reduce using rule 30 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    START           reduce using rule 30 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    END             reduce using rule 30 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    IF              reduce using rule 30 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    FOR             reduce using rule 30 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    num             reduce using rule 30 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    (               reduce using rule 30 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    ELSE            reduce using rule 30 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    ROF             reduce using rule 30 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    $end            reduce using rule 30 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)


state 127

    (32) Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos . FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    FI              shift and go to state 136
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 128

    (29) Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .

    FI              reduce using rule 29 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    READ            reduce using rule 29 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    WRITE           reduce using rule 29 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    PRINT           reduce using rule 29 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    id              reduce using rule 29 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    START           reduce using rule 29 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    END             reduce using rule 29 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    IF              reduce using rule 29 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    FOR             reduce using rule 29 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    num             reduce using rule 29 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    (               reduce using rule 29 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    ELSE            reduce using rule 29 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    ROF             reduce using rule 29 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    $end            reduce using rule 29 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)


state 129

    (31) Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos . FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    FI              shift and go to state 137
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 130

    (38) Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos . ROF
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    ROF             shift and go to state 138
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 131

    (34) Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .

    ROF             reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    READ            reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    WRITE           reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    PRINT           reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    id              reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    START           reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    END             reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    IF              reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    FOR             reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    num             reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    (               reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    ELSE            reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    FI              reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    $end            reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)


state 132

    (36) Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos . ROF
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    ROF             shift and go to state 139
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 133

    (35) Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .

    ROF             reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    READ            reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    WRITE           reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    PRINT           reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    id              reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    START           reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    END             reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    IF              reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    FOR             reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    num             reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    (               reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    ELSE            reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    FI              reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    $end            reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)


state 134

    (37) Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos . ROF
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (12) Comando -> . Array
    (13) Comando -> . Matriz
    (23) Reading -> . READ id
    (24) Writing -> . WRITE id
    (25) Printing -> . PRINT ( frase )
    (28) Atrib -> . id = Exp
    (14) Exp -> . Exp + Termo
    (15) Exp -> . Exp - Termo
    (16) Exp -> . Termo
    (26) Start -> . START
    (27) End -> . END
    (29) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (34) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (39) Array -> . id [ num ] FI
    (40) Array -> . id [ num ] = num
    (41) Matriz -> . id [ num ] [ num ] FI
    (42) Matriz -> . id [ num ] [ num ] = num
    (17) Termo -> . Termo * Factor
    (18) Termo -> . Termo / Factor
    (19) Termo -> . Factor
    (20) Factor -> . id
    (21) Factor -> . num
    (22) Factor -> . ( Exp )

    ROF             shift and go to state 140
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    PRINT           shift and go to state 9
    id              shift and go to state 11
    START           shift and go to state 19
    END             shift and go to state 15
    IF              shift and go to state 23
    FOR             shift and go to state 16
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 135

    (33) Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .

    FI              reduce using rule 33 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    READ            reduce using rule 33 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    WRITE           reduce using rule 33 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    PRINT           reduce using rule 33 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    id              reduce using rule 33 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    START           reduce using rule 33 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    END             reduce using rule 33 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    IF              reduce using rule 33 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    FOR             reduce using rule 33 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    num             reduce using rule 33 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    (               reduce using rule 33 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    ELSE            reduce using rule 33 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    ROF             reduce using rule 33 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    $end            reduce using rule 33 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)


state 136

    (32) Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .

    FI              reduce using rule 32 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    READ            reduce using rule 32 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    WRITE           reduce using rule 32 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    PRINT           reduce using rule 32 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    id              reduce using rule 32 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    START           reduce using rule 32 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    END             reduce using rule 32 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    IF              reduce using rule 32 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    FOR             reduce using rule 32 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    num             reduce using rule 32 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    (               reduce using rule 32 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    ELSE            reduce using rule 32 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    ROF             reduce using rule 32 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    $end            reduce using rule 32 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)


state 137

    (31) Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .

    FI              reduce using rule 31 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    READ            reduce using rule 31 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    WRITE           reduce using rule 31 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    PRINT           reduce using rule 31 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    id              reduce using rule 31 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    START           reduce using rule 31 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    END             reduce using rule 31 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    IF              reduce using rule 31 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    FOR             reduce using rule 31 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    num             reduce using rule 31 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    (               reduce using rule 31 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    ELSE            reduce using rule 31 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    ROF             reduce using rule 31 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    $end            reduce using rule 31 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)


state 138

    (38) Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .

    ROF             reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    READ            reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    WRITE           reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    PRINT           reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    id              reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    START           reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    END             reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    IF              reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    FOR             reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    num             reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    (               reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    ELSE            reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    FI              reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    $end            reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)


state 139

    (36) Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .

    ROF             reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    READ            reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    WRITE           reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    PRINT           reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    id              reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    START           reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    END             reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    IF              reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    FOR             reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    num             reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    (               reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    ELSE            reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    FI              reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    $end            reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)


state 140

    (37) Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .

    ROF             reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    READ            reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    WRITE           reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    PRINT           reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    id              reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    START           reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    END             reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    IF              reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    FOR             reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    num             reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    (               reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    ELSE            reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    FI              reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    $end            reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)

