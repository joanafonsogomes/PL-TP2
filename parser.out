Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Comandos
Rule 1     Comandos -> Comandos Comando
Rule 2     Comandos -> Comando
Rule 3     Comando -> Printing
Rule 4     Comando -> Reading
Rule 5     Comando -> Writing
Rule 6     Comando -> Start
Rule 7     Comando -> Exp
Rule 8     Comando -> Atrib
Rule 9     Comando -> Condition
Rule 10    Comando -> Cicle
Rule 11    Comando -> End
Rule 12    Printing -> PRINT frase
Rule 13    Reading -> READ id
Rule 14    Writing -> WRITE id
Rule 15    Writing -> WRITE id [ num ]
Rule 16    Start -> START
Rule 17    Exp -> Exp + Termo
Rule 18    Exp -> Exp - Termo
Rule 19    Exp -> Termo
Rule 20    Termo -> Termo * Factor
Rule 21    Termo -> Termo / Factor
Rule 22    Termo -> Factor
Rule 23    Factor -> id
Rule 24    Factor -> num
Rule 25    Factor -> ( Exp )
Rule 26    Factor -> Array
Rule 27    Factor -> Matriz
Rule 28    End -> END
Rule 29    Atrib -> id = Exp
Rule 30    Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
Rule 31    Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
Rule 32    Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
Rule 33    Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
Rule 34    Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
Rule 35    Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
Rule 36    Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
Rule 37    Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
Rule 38    Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
Rule 39    Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
Rule 40    Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
Rule 41    Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
Rule 42    Array -> id [ num ]
Rule 43    Atrib -> id [ Termo ] = num
Rule 44    Matriz -> id [ num ] [ num ]
Rule 45    Atrib -> id [ num ] [ num ] = num

Terminals, with rules where they appear

!                    : 35 41
(                    : 25 30 31 32 33 34 35 36 37 38 39 40 41
)                    : 25 30 31 32 33 34 35 36 37 38 39 40 41
*                    : 20
+                    : 17
-                    : 18
/                    : 21
;                    : 36 36 37 37 38 38 39 39 40 40 41 41
<                    : 31 33 36 38
=                    : 29 32 33 34 34 35 38 39 40 40 41 43 45
>                    : 30 32 37 39
ELSE                 : 30 31 32 33 34 35
END                  : 28
FI                   : 30 31 32 33 34 35
FOR                  : 36 37 38 39 40 41
IF                   : 30 31 32 33 34 35
PRINT                : 12
READ                 : 13
ROF                  : 36 37 38 39 40 41
START                : 16
THEN                 : 30 31 32 33 34 35
WRITE                : 14 15
[                    : 15 42 43 44 44 45 45
]                    : 15 42 43 44 44 45 45
error                : 
frase                : 12
id                   : 13 14 15 23 29 42 43 44 45
num                  : 15 24 42 43 44 44 45 45 45

Nonterminals, with rules where they appear

Array                : 26
Atrib                : 8 36 36 37 37 38 38 39 39 40 40 41 41
Cicle                : 10
Comando              : 1 2
Comandos             : 1 30 30 31 31 32 32 33 33 34 34 35 35 36 37 38 39 40 41 0
Condition            : 9
End                  : 11
Exp                  : 7 17 18 25 29 30 31 32 33 34 35
Factor               : 20 21 22 36 36 37 37 38 38 39 39 40 40 41 41
Matriz               : 27
Printing             : 3
Reading              : 4
Start                : 6
Termo                : 17 18 19 20 21 30 31 32 33 34 35 43
Writing              : 5

Parsing method: LALR

state 0

    (0) S' -> . Comandos
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Comandos                       shift and go to state 1
    Comando                        shift and go to state 2
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Exp                            shift and go to state 7
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Termo                          shift and go to state 18
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 1

    (0) S' -> Comandos .
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Comando                        shift and go to state 26
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Exp                            shift and go to state 7
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Termo                          shift and go to state 18
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 2

    (2) Comandos -> Comando .

    PRINT           reduce using rule 2 (Comandos -> Comando .)
    READ            reduce using rule 2 (Comandos -> Comando .)
    WRITE           reduce using rule 2 (Comandos -> Comando .)
    START           reduce using rule 2 (Comandos -> Comando .)
    id              reduce using rule 2 (Comandos -> Comando .)
    IF              reduce using rule 2 (Comandos -> Comando .)
    FOR             reduce using rule 2 (Comandos -> Comando .)
    END             reduce using rule 2 (Comandos -> Comando .)
    num             reduce using rule 2 (Comandos -> Comando .)
    (               reduce using rule 2 (Comandos -> Comando .)
    $end            reduce using rule 2 (Comandos -> Comando .)
    ELSE            reduce using rule 2 (Comandos -> Comando .)
    FI              reduce using rule 2 (Comandos -> Comando .)
    ROF             reduce using rule 2 (Comandos -> Comando .)


state 3

    (3) Comando -> Printing .

    PRINT           reduce using rule 3 (Comando -> Printing .)
    READ            reduce using rule 3 (Comando -> Printing .)
    WRITE           reduce using rule 3 (Comando -> Printing .)
    START           reduce using rule 3 (Comando -> Printing .)
    id              reduce using rule 3 (Comando -> Printing .)
    IF              reduce using rule 3 (Comando -> Printing .)
    FOR             reduce using rule 3 (Comando -> Printing .)
    END             reduce using rule 3 (Comando -> Printing .)
    num             reduce using rule 3 (Comando -> Printing .)
    (               reduce using rule 3 (Comando -> Printing .)
    $end            reduce using rule 3 (Comando -> Printing .)
    ELSE            reduce using rule 3 (Comando -> Printing .)
    FI              reduce using rule 3 (Comando -> Printing .)
    ROF             reduce using rule 3 (Comando -> Printing .)


state 4

    (4) Comando -> Reading .

    PRINT           reduce using rule 4 (Comando -> Reading .)
    READ            reduce using rule 4 (Comando -> Reading .)
    WRITE           reduce using rule 4 (Comando -> Reading .)
    START           reduce using rule 4 (Comando -> Reading .)
    id              reduce using rule 4 (Comando -> Reading .)
    IF              reduce using rule 4 (Comando -> Reading .)
    FOR             reduce using rule 4 (Comando -> Reading .)
    END             reduce using rule 4 (Comando -> Reading .)
    num             reduce using rule 4 (Comando -> Reading .)
    (               reduce using rule 4 (Comando -> Reading .)
    $end            reduce using rule 4 (Comando -> Reading .)
    ELSE            reduce using rule 4 (Comando -> Reading .)
    FI              reduce using rule 4 (Comando -> Reading .)
    ROF             reduce using rule 4 (Comando -> Reading .)


state 5

    (5) Comando -> Writing .

    PRINT           reduce using rule 5 (Comando -> Writing .)
    READ            reduce using rule 5 (Comando -> Writing .)
    WRITE           reduce using rule 5 (Comando -> Writing .)
    START           reduce using rule 5 (Comando -> Writing .)
    id              reduce using rule 5 (Comando -> Writing .)
    IF              reduce using rule 5 (Comando -> Writing .)
    FOR             reduce using rule 5 (Comando -> Writing .)
    END             reduce using rule 5 (Comando -> Writing .)
    num             reduce using rule 5 (Comando -> Writing .)
    (               reduce using rule 5 (Comando -> Writing .)
    $end            reduce using rule 5 (Comando -> Writing .)
    ELSE            reduce using rule 5 (Comando -> Writing .)
    FI              reduce using rule 5 (Comando -> Writing .)
    ROF             reduce using rule 5 (Comando -> Writing .)


state 6

    (6) Comando -> Start .

    PRINT           reduce using rule 6 (Comando -> Start .)
    READ            reduce using rule 6 (Comando -> Start .)
    WRITE           reduce using rule 6 (Comando -> Start .)
    START           reduce using rule 6 (Comando -> Start .)
    id              reduce using rule 6 (Comando -> Start .)
    IF              reduce using rule 6 (Comando -> Start .)
    FOR             reduce using rule 6 (Comando -> Start .)
    END             reduce using rule 6 (Comando -> Start .)
    num             reduce using rule 6 (Comando -> Start .)
    (               reduce using rule 6 (Comando -> Start .)
    $end            reduce using rule 6 (Comando -> Start .)
    ELSE            reduce using rule 6 (Comando -> Start .)
    FI              reduce using rule 6 (Comando -> Start .)
    ROF             reduce using rule 6 (Comando -> Start .)


state 7

    (7) Comando -> Exp .
    (17) Exp -> Exp . + Termo
    (18) Exp -> Exp . - Termo

    PRINT           reduce using rule 7 (Comando -> Exp .)
    READ            reduce using rule 7 (Comando -> Exp .)
    WRITE           reduce using rule 7 (Comando -> Exp .)
    START           reduce using rule 7 (Comando -> Exp .)
    id              reduce using rule 7 (Comando -> Exp .)
    IF              reduce using rule 7 (Comando -> Exp .)
    FOR             reduce using rule 7 (Comando -> Exp .)
    END             reduce using rule 7 (Comando -> Exp .)
    num             reduce using rule 7 (Comando -> Exp .)
    (               reduce using rule 7 (Comando -> Exp .)
    $end            reduce using rule 7 (Comando -> Exp .)
    ELSE            reduce using rule 7 (Comando -> Exp .)
    FI              reduce using rule 7 (Comando -> Exp .)
    ROF             reduce using rule 7 (Comando -> Exp .)
    +               shift and go to state 27
    -               shift and go to state 28


state 8

    (8) Comando -> Atrib .

    PRINT           reduce using rule 8 (Comando -> Atrib .)
    READ            reduce using rule 8 (Comando -> Atrib .)
    WRITE           reduce using rule 8 (Comando -> Atrib .)
    START           reduce using rule 8 (Comando -> Atrib .)
    id              reduce using rule 8 (Comando -> Atrib .)
    IF              reduce using rule 8 (Comando -> Atrib .)
    FOR             reduce using rule 8 (Comando -> Atrib .)
    END             reduce using rule 8 (Comando -> Atrib .)
    num             reduce using rule 8 (Comando -> Atrib .)
    (               reduce using rule 8 (Comando -> Atrib .)
    $end            reduce using rule 8 (Comando -> Atrib .)
    ELSE            reduce using rule 8 (Comando -> Atrib .)
    FI              reduce using rule 8 (Comando -> Atrib .)
    ROF             reduce using rule 8 (Comando -> Atrib .)


state 9

    (9) Comando -> Condition .

    PRINT           reduce using rule 9 (Comando -> Condition .)
    READ            reduce using rule 9 (Comando -> Condition .)
    WRITE           reduce using rule 9 (Comando -> Condition .)
    START           reduce using rule 9 (Comando -> Condition .)
    id              reduce using rule 9 (Comando -> Condition .)
    IF              reduce using rule 9 (Comando -> Condition .)
    FOR             reduce using rule 9 (Comando -> Condition .)
    END             reduce using rule 9 (Comando -> Condition .)
    num             reduce using rule 9 (Comando -> Condition .)
    (               reduce using rule 9 (Comando -> Condition .)
    $end            reduce using rule 9 (Comando -> Condition .)
    ELSE            reduce using rule 9 (Comando -> Condition .)
    FI              reduce using rule 9 (Comando -> Condition .)
    ROF             reduce using rule 9 (Comando -> Condition .)


state 10

    (10) Comando -> Cicle .

    PRINT           reduce using rule 10 (Comando -> Cicle .)
    READ            reduce using rule 10 (Comando -> Cicle .)
    WRITE           reduce using rule 10 (Comando -> Cicle .)
    START           reduce using rule 10 (Comando -> Cicle .)
    id              reduce using rule 10 (Comando -> Cicle .)
    IF              reduce using rule 10 (Comando -> Cicle .)
    FOR             reduce using rule 10 (Comando -> Cicle .)
    END             reduce using rule 10 (Comando -> Cicle .)
    num             reduce using rule 10 (Comando -> Cicle .)
    (               reduce using rule 10 (Comando -> Cicle .)
    $end            reduce using rule 10 (Comando -> Cicle .)
    ELSE            reduce using rule 10 (Comando -> Cicle .)
    FI              reduce using rule 10 (Comando -> Cicle .)
    ROF             reduce using rule 10 (Comando -> Cicle .)


state 11

    (11) Comando -> End .

    PRINT           reduce using rule 11 (Comando -> End .)
    READ            reduce using rule 11 (Comando -> End .)
    WRITE           reduce using rule 11 (Comando -> End .)
    START           reduce using rule 11 (Comando -> End .)
    id              reduce using rule 11 (Comando -> End .)
    IF              reduce using rule 11 (Comando -> End .)
    FOR             reduce using rule 11 (Comando -> End .)
    END             reduce using rule 11 (Comando -> End .)
    num             reduce using rule 11 (Comando -> End .)
    (               reduce using rule 11 (Comando -> End .)
    $end            reduce using rule 11 (Comando -> End .)
    ELSE            reduce using rule 11 (Comando -> End .)
    FI              reduce using rule 11 (Comando -> End .)
    ROF             reduce using rule 11 (Comando -> End .)


state 12

    (12) Printing -> PRINT . frase

    frase           shift and go to state 29


state 13

    (13) Reading -> READ . id

    id              shift and go to state 30


state 14

    (29) Atrib -> id . = Exp
    (43) Atrib -> id . [ Termo ] = num
    (45) Atrib -> id . [ num ] [ num ] = num
    (23) Factor -> id .
    (42) Array -> id . [ num ]
    (44) Matriz -> id . [ num ] [ num ]

    =               shift and go to state 31
    [               shift and go to state 32
    *               reduce using rule 23 (Factor -> id .)
    /               reduce using rule 23 (Factor -> id .)
    +               reduce using rule 23 (Factor -> id .)
    -               reduce using rule 23 (Factor -> id .)
    PRINT           reduce using rule 23 (Factor -> id .)
    READ            reduce using rule 23 (Factor -> id .)
    WRITE           reduce using rule 23 (Factor -> id .)
    START           reduce using rule 23 (Factor -> id .)
    id              reduce using rule 23 (Factor -> id .)
    IF              reduce using rule 23 (Factor -> id .)
    FOR             reduce using rule 23 (Factor -> id .)
    END             reduce using rule 23 (Factor -> id .)
    num             reduce using rule 23 (Factor -> id .)
    (               reduce using rule 23 (Factor -> id .)
    $end            reduce using rule 23 (Factor -> id .)
    ELSE            reduce using rule 23 (Factor -> id .)
    FI              reduce using rule 23 (Factor -> id .)
    ROF             reduce using rule 23 (Factor -> id .)


state 15

    (14) Writing -> WRITE . id
    (15) Writing -> WRITE . id [ num ]

    id              shift and go to state 33


state 16

    (24) Factor -> num .

    *               reduce using rule 24 (Factor -> num .)
    /               reduce using rule 24 (Factor -> num .)
    +               reduce using rule 24 (Factor -> num .)
    -               reduce using rule 24 (Factor -> num .)
    PRINT           reduce using rule 24 (Factor -> num .)
    READ            reduce using rule 24 (Factor -> num .)
    WRITE           reduce using rule 24 (Factor -> num .)
    START           reduce using rule 24 (Factor -> num .)
    id              reduce using rule 24 (Factor -> num .)
    IF              reduce using rule 24 (Factor -> num .)
    FOR             reduce using rule 24 (Factor -> num .)
    END             reduce using rule 24 (Factor -> num .)
    num             reduce using rule 24 (Factor -> num .)
    (               reduce using rule 24 (Factor -> num .)
    $end            reduce using rule 24 (Factor -> num .)
    )               reduce using rule 24 (Factor -> num .)
    ;               reduce using rule 24 (Factor -> num .)
    ELSE            reduce using rule 24 (Factor -> num .)
    FI              reduce using rule 24 (Factor -> num .)
    ROF             reduce using rule 24 (Factor -> num .)
    >               reduce using rule 24 (Factor -> num .)
    <               reduce using rule 24 (Factor -> num .)
    =               reduce using rule 24 (Factor -> num .)
    !               reduce using rule 24 (Factor -> num .)
    ]               reduce using rule 24 (Factor -> num .)


state 17

    (16) Start -> START .

    PRINT           reduce using rule 16 (Start -> START .)
    READ            reduce using rule 16 (Start -> START .)
    WRITE           reduce using rule 16 (Start -> START .)
    START           reduce using rule 16 (Start -> START .)
    id              reduce using rule 16 (Start -> START .)
    IF              reduce using rule 16 (Start -> START .)
    FOR             reduce using rule 16 (Start -> START .)
    END             reduce using rule 16 (Start -> START .)
    num             reduce using rule 16 (Start -> START .)
    (               reduce using rule 16 (Start -> START .)
    $end            reduce using rule 16 (Start -> START .)
    ELSE            reduce using rule 16 (Start -> START .)
    FI              reduce using rule 16 (Start -> START .)
    ROF             reduce using rule 16 (Start -> START .)


state 18

    (19) Exp -> Termo .
    (20) Termo -> Termo . * Factor
    (21) Termo -> Termo . / Factor

    +               reduce using rule 19 (Exp -> Termo .)
    -               reduce using rule 19 (Exp -> Termo .)
    PRINT           reduce using rule 19 (Exp -> Termo .)
    READ            reduce using rule 19 (Exp -> Termo .)
    WRITE           reduce using rule 19 (Exp -> Termo .)
    START           reduce using rule 19 (Exp -> Termo .)
    id              reduce using rule 19 (Exp -> Termo .)
    IF              reduce using rule 19 (Exp -> Termo .)
    FOR             reduce using rule 19 (Exp -> Termo .)
    END             reduce using rule 19 (Exp -> Termo .)
    num             reduce using rule 19 (Exp -> Termo .)
    (               reduce using rule 19 (Exp -> Termo .)
    $end            reduce using rule 19 (Exp -> Termo .)
    )               reduce using rule 19 (Exp -> Termo .)
    ;               reduce using rule 19 (Exp -> Termo .)
    ELSE            reduce using rule 19 (Exp -> Termo .)
    FI              reduce using rule 19 (Exp -> Termo .)
    ROF             reduce using rule 19 (Exp -> Termo .)
    >               reduce using rule 19 (Exp -> Termo .)
    <               reduce using rule 19 (Exp -> Termo .)
    =               reduce using rule 19 (Exp -> Termo .)
    !               reduce using rule 19 (Exp -> Termo .)
    *               shift and go to state 34
    /               shift and go to state 35


state 19

    (30) Condition -> IF . ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> IF . ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> IF . ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> IF . ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> IF . ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> IF . ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI

    (               shift and go to state 36


state 20

    (25) Factor -> ( . Exp )
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 38
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 37
    Termo                          shift and go to state 18
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 21

    (36) Cicle -> FOR . ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> FOR . ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> FOR . ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> FOR . ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> FOR . ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> FOR . ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF

    (               shift and go to state 39


state 22

    (22) Termo -> Factor .

    *               reduce using rule 22 (Termo -> Factor .)
    /               reduce using rule 22 (Termo -> Factor .)
    +               reduce using rule 22 (Termo -> Factor .)
    -               reduce using rule 22 (Termo -> Factor .)
    PRINT           reduce using rule 22 (Termo -> Factor .)
    READ            reduce using rule 22 (Termo -> Factor .)
    WRITE           reduce using rule 22 (Termo -> Factor .)
    START           reduce using rule 22 (Termo -> Factor .)
    id              reduce using rule 22 (Termo -> Factor .)
    IF              reduce using rule 22 (Termo -> Factor .)
    FOR             reduce using rule 22 (Termo -> Factor .)
    END             reduce using rule 22 (Termo -> Factor .)
    num             reduce using rule 22 (Termo -> Factor .)
    (               reduce using rule 22 (Termo -> Factor .)
    $end            reduce using rule 22 (Termo -> Factor .)
    )               reduce using rule 22 (Termo -> Factor .)
    ;               reduce using rule 22 (Termo -> Factor .)
    ELSE            reduce using rule 22 (Termo -> Factor .)
    FI              reduce using rule 22 (Termo -> Factor .)
    ROF             reduce using rule 22 (Termo -> Factor .)
    >               reduce using rule 22 (Termo -> Factor .)
    <               reduce using rule 22 (Termo -> Factor .)
    =               reduce using rule 22 (Termo -> Factor .)
    !               reduce using rule 22 (Termo -> Factor .)
    ]               reduce using rule 22 (Termo -> Factor .)


state 23

    (28) End -> END .

    PRINT           reduce using rule 28 (End -> END .)
    READ            reduce using rule 28 (End -> END .)
    WRITE           reduce using rule 28 (End -> END .)
    START           reduce using rule 28 (End -> END .)
    id              reduce using rule 28 (End -> END .)
    IF              reduce using rule 28 (End -> END .)
    FOR             reduce using rule 28 (End -> END .)
    END             reduce using rule 28 (End -> END .)
    num             reduce using rule 28 (End -> END .)
    (               reduce using rule 28 (End -> END .)
    $end            reduce using rule 28 (End -> END .)
    ELSE            reduce using rule 28 (End -> END .)
    FI              reduce using rule 28 (End -> END .)
    ROF             reduce using rule 28 (End -> END .)


state 24

    (26) Factor -> Array .

    *               reduce using rule 26 (Factor -> Array .)
    /               reduce using rule 26 (Factor -> Array .)
    +               reduce using rule 26 (Factor -> Array .)
    -               reduce using rule 26 (Factor -> Array .)
    PRINT           reduce using rule 26 (Factor -> Array .)
    READ            reduce using rule 26 (Factor -> Array .)
    WRITE           reduce using rule 26 (Factor -> Array .)
    START           reduce using rule 26 (Factor -> Array .)
    id              reduce using rule 26 (Factor -> Array .)
    IF              reduce using rule 26 (Factor -> Array .)
    FOR             reduce using rule 26 (Factor -> Array .)
    END             reduce using rule 26 (Factor -> Array .)
    num             reduce using rule 26 (Factor -> Array .)
    (               reduce using rule 26 (Factor -> Array .)
    $end            reduce using rule 26 (Factor -> Array .)
    )               reduce using rule 26 (Factor -> Array .)
    ;               reduce using rule 26 (Factor -> Array .)
    ELSE            reduce using rule 26 (Factor -> Array .)
    FI              reduce using rule 26 (Factor -> Array .)
    ROF             reduce using rule 26 (Factor -> Array .)
    >               reduce using rule 26 (Factor -> Array .)
    <               reduce using rule 26 (Factor -> Array .)
    =               reduce using rule 26 (Factor -> Array .)
    !               reduce using rule 26 (Factor -> Array .)
    ]               reduce using rule 26 (Factor -> Array .)


state 25

    (27) Factor -> Matriz .

    *               reduce using rule 27 (Factor -> Matriz .)
    /               reduce using rule 27 (Factor -> Matriz .)
    +               reduce using rule 27 (Factor -> Matriz .)
    -               reduce using rule 27 (Factor -> Matriz .)
    PRINT           reduce using rule 27 (Factor -> Matriz .)
    READ            reduce using rule 27 (Factor -> Matriz .)
    WRITE           reduce using rule 27 (Factor -> Matriz .)
    START           reduce using rule 27 (Factor -> Matriz .)
    id              reduce using rule 27 (Factor -> Matriz .)
    IF              reduce using rule 27 (Factor -> Matriz .)
    FOR             reduce using rule 27 (Factor -> Matriz .)
    END             reduce using rule 27 (Factor -> Matriz .)
    num             reduce using rule 27 (Factor -> Matriz .)
    (               reduce using rule 27 (Factor -> Matriz .)
    $end            reduce using rule 27 (Factor -> Matriz .)
    )               reduce using rule 27 (Factor -> Matriz .)
    ;               reduce using rule 27 (Factor -> Matriz .)
    ELSE            reduce using rule 27 (Factor -> Matriz .)
    FI              reduce using rule 27 (Factor -> Matriz .)
    ROF             reduce using rule 27 (Factor -> Matriz .)
    >               reduce using rule 27 (Factor -> Matriz .)
    <               reduce using rule 27 (Factor -> Matriz .)
    =               reduce using rule 27 (Factor -> Matriz .)
    !               reduce using rule 27 (Factor -> Matriz .)
    ]               reduce using rule 27 (Factor -> Matriz .)


state 26

    (1) Comandos -> Comandos Comando .

    PRINT           reduce using rule 1 (Comandos -> Comandos Comando .)
    READ            reduce using rule 1 (Comandos -> Comandos Comando .)
    WRITE           reduce using rule 1 (Comandos -> Comandos Comando .)
    START           reduce using rule 1 (Comandos -> Comandos Comando .)
    id              reduce using rule 1 (Comandos -> Comandos Comando .)
    IF              reduce using rule 1 (Comandos -> Comandos Comando .)
    FOR             reduce using rule 1 (Comandos -> Comandos Comando .)
    END             reduce using rule 1 (Comandos -> Comandos Comando .)
    num             reduce using rule 1 (Comandos -> Comandos Comando .)
    (               reduce using rule 1 (Comandos -> Comandos Comando .)
    $end            reduce using rule 1 (Comandos -> Comandos Comando .)
    ELSE            reduce using rule 1 (Comandos -> Comandos Comando .)
    FI              reduce using rule 1 (Comandos -> Comandos Comando .)
    ROF             reduce using rule 1 (Comandos -> Comandos Comando .)


state 27

    (17) Exp -> Exp + . Termo
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 38
    num             shift and go to state 16
    (               shift and go to state 20

    Termo                          shift and go to state 40
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 28

    (18) Exp -> Exp - . Termo
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 38
    num             shift and go to state 16
    (               shift and go to state 20

    Termo                          shift and go to state 41
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 29

    (12) Printing -> PRINT frase .

    PRINT           reduce using rule 12 (Printing -> PRINT frase .)
    READ            reduce using rule 12 (Printing -> PRINT frase .)
    WRITE           reduce using rule 12 (Printing -> PRINT frase .)
    START           reduce using rule 12 (Printing -> PRINT frase .)
    id              reduce using rule 12 (Printing -> PRINT frase .)
    IF              reduce using rule 12 (Printing -> PRINT frase .)
    FOR             reduce using rule 12 (Printing -> PRINT frase .)
    END             reduce using rule 12 (Printing -> PRINT frase .)
    num             reduce using rule 12 (Printing -> PRINT frase .)
    (               reduce using rule 12 (Printing -> PRINT frase .)
    $end            reduce using rule 12 (Printing -> PRINT frase .)
    ELSE            reduce using rule 12 (Printing -> PRINT frase .)
    FI              reduce using rule 12 (Printing -> PRINT frase .)
    ROF             reduce using rule 12 (Printing -> PRINT frase .)


state 30

    (13) Reading -> READ id .

    PRINT           reduce using rule 13 (Reading -> READ id .)
    READ            reduce using rule 13 (Reading -> READ id .)
    WRITE           reduce using rule 13 (Reading -> READ id .)
    START           reduce using rule 13 (Reading -> READ id .)
    id              reduce using rule 13 (Reading -> READ id .)
    IF              reduce using rule 13 (Reading -> READ id .)
    FOR             reduce using rule 13 (Reading -> READ id .)
    END             reduce using rule 13 (Reading -> READ id .)
    num             reduce using rule 13 (Reading -> READ id .)
    (               reduce using rule 13 (Reading -> READ id .)
    $end            reduce using rule 13 (Reading -> READ id .)
    ELSE            reduce using rule 13 (Reading -> READ id .)
    FI              reduce using rule 13 (Reading -> READ id .)
    ROF             reduce using rule 13 (Reading -> READ id .)


state 31

    (29) Atrib -> id = . Exp
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 38
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 42
    Termo                          shift and go to state 18
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 32

    (43) Atrib -> id [ . Termo ] = num
    (45) Atrib -> id [ . num ] [ num ] = num
    (42) Array -> id [ . num ]
    (44) Matriz -> id [ . num ] [ num ]
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    num             shift and go to state 44
    id              shift and go to state 38
    (               shift and go to state 20

    Termo                          shift and go to state 43
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 33

    (14) Writing -> WRITE id .
    (15) Writing -> WRITE id . [ num ]

    PRINT           reduce using rule 14 (Writing -> WRITE id .)
    READ            reduce using rule 14 (Writing -> WRITE id .)
    WRITE           reduce using rule 14 (Writing -> WRITE id .)
    START           reduce using rule 14 (Writing -> WRITE id .)
    id              reduce using rule 14 (Writing -> WRITE id .)
    IF              reduce using rule 14 (Writing -> WRITE id .)
    FOR             reduce using rule 14 (Writing -> WRITE id .)
    END             reduce using rule 14 (Writing -> WRITE id .)
    num             reduce using rule 14 (Writing -> WRITE id .)
    (               reduce using rule 14 (Writing -> WRITE id .)
    $end            reduce using rule 14 (Writing -> WRITE id .)
    ELSE            reduce using rule 14 (Writing -> WRITE id .)
    FI              reduce using rule 14 (Writing -> WRITE id .)
    ROF             reduce using rule 14 (Writing -> WRITE id .)
    [               shift and go to state 45


state 34

    (20) Termo -> Termo * . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 38
    num             shift and go to state 16
    (               shift and go to state 20

    Factor                         shift and go to state 46
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 35

    (21) Termo -> Termo / . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 38
    num             shift and go to state 16
    (               shift and go to state 20

    Factor                         shift and go to state 47
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 36

    (30) Condition -> IF ( . Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> IF ( . Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> IF ( . Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> IF ( . Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> IF ( . Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> IF ( . Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 38
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 48
    Termo                          shift and go to state 18
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 37

    (25) Factor -> ( Exp . )
    (17) Exp -> Exp . + Termo
    (18) Exp -> Exp . - Termo

    )               shift and go to state 49
    +               shift and go to state 27
    -               shift and go to state 28


state 38

    (23) Factor -> id .
    (42) Array -> id . [ num ]
    (44) Matriz -> id . [ num ] [ num ]

    *               reduce using rule 23 (Factor -> id .)
    /               reduce using rule 23 (Factor -> id .)
    )               reduce using rule 23 (Factor -> id .)
    +               reduce using rule 23 (Factor -> id .)
    -               reduce using rule 23 (Factor -> id .)
    PRINT           reduce using rule 23 (Factor -> id .)
    READ            reduce using rule 23 (Factor -> id .)
    WRITE           reduce using rule 23 (Factor -> id .)
    START           reduce using rule 23 (Factor -> id .)
    id              reduce using rule 23 (Factor -> id .)
    IF              reduce using rule 23 (Factor -> id .)
    FOR             reduce using rule 23 (Factor -> id .)
    END             reduce using rule 23 (Factor -> id .)
    num             reduce using rule 23 (Factor -> id .)
    (               reduce using rule 23 (Factor -> id .)
    $end            reduce using rule 23 (Factor -> id .)
    ;               reduce using rule 23 (Factor -> id .)
    ELSE            reduce using rule 23 (Factor -> id .)
    FI              reduce using rule 23 (Factor -> id .)
    ROF             reduce using rule 23 (Factor -> id .)
    >               reduce using rule 23 (Factor -> id .)
    <               reduce using rule 23 (Factor -> id .)
    =               reduce using rule 23 (Factor -> id .)
    !               reduce using rule 23 (Factor -> id .)
    ]               reduce using rule 23 (Factor -> id .)
    [               shift and go to state 50


state 39

    (36) Cicle -> FOR ( . Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> FOR ( . Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> FOR ( . Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> FOR ( . Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> FOR ( . Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> FOR ( . Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num

    id              shift and go to state 52

    Atrib                          shift and go to state 51

state 40

    (17) Exp -> Exp + Termo .
    (20) Termo -> Termo . * Factor
    (21) Termo -> Termo . / Factor

    +               reduce using rule 17 (Exp -> Exp + Termo .)
    -               reduce using rule 17 (Exp -> Exp + Termo .)
    PRINT           reduce using rule 17 (Exp -> Exp + Termo .)
    READ            reduce using rule 17 (Exp -> Exp + Termo .)
    WRITE           reduce using rule 17 (Exp -> Exp + Termo .)
    START           reduce using rule 17 (Exp -> Exp + Termo .)
    id              reduce using rule 17 (Exp -> Exp + Termo .)
    IF              reduce using rule 17 (Exp -> Exp + Termo .)
    FOR             reduce using rule 17 (Exp -> Exp + Termo .)
    END             reduce using rule 17 (Exp -> Exp + Termo .)
    num             reduce using rule 17 (Exp -> Exp + Termo .)
    (               reduce using rule 17 (Exp -> Exp + Termo .)
    $end            reduce using rule 17 (Exp -> Exp + Termo .)
    )               reduce using rule 17 (Exp -> Exp + Termo .)
    ;               reduce using rule 17 (Exp -> Exp + Termo .)
    ELSE            reduce using rule 17 (Exp -> Exp + Termo .)
    FI              reduce using rule 17 (Exp -> Exp + Termo .)
    ROF             reduce using rule 17 (Exp -> Exp + Termo .)
    >               reduce using rule 17 (Exp -> Exp + Termo .)
    <               reduce using rule 17 (Exp -> Exp + Termo .)
    =               reduce using rule 17 (Exp -> Exp + Termo .)
    !               reduce using rule 17 (Exp -> Exp + Termo .)
    *               shift and go to state 34
    /               shift and go to state 35


state 41

    (18) Exp -> Exp - Termo .
    (20) Termo -> Termo . * Factor
    (21) Termo -> Termo . / Factor

    +               reduce using rule 18 (Exp -> Exp - Termo .)
    -               reduce using rule 18 (Exp -> Exp - Termo .)
    PRINT           reduce using rule 18 (Exp -> Exp - Termo .)
    READ            reduce using rule 18 (Exp -> Exp - Termo .)
    WRITE           reduce using rule 18 (Exp -> Exp - Termo .)
    START           reduce using rule 18 (Exp -> Exp - Termo .)
    id              reduce using rule 18 (Exp -> Exp - Termo .)
    IF              reduce using rule 18 (Exp -> Exp - Termo .)
    FOR             reduce using rule 18 (Exp -> Exp - Termo .)
    END             reduce using rule 18 (Exp -> Exp - Termo .)
    num             reduce using rule 18 (Exp -> Exp - Termo .)
    (               reduce using rule 18 (Exp -> Exp - Termo .)
    $end            reduce using rule 18 (Exp -> Exp - Termo .)
    )               reduce using rule 18 (Exp -> Exp - Termo .)
    ;               reduce using rule 18 (Exp -> Exp - Termo .)
    ELSE            reduce using rule 18 (Exp -> Exp - Termo .)
    FI              reduce using rule 18 (Exp -> Exp - Termo .)
    ROF             reduce using rule 18 (Exp -> Exp - Termo .)
    >               reduce using rule 18 (Exp -> Exp - Termo .)
    <               reduce using rule 18 (Exp -> Exp - Termo .)
    =               reduce using rule 18 (Exp -> Exp - Termo .)
    !               reduce using rule 18 (Exp -> Exp - Termo .)
    *               shift and go to state 34
    /               shift and go to state 35


state 42

    (29) Atrib -> id = Exp .
    (17) Exp -> Exp . + Termo
    (18) Exp -> Exp . - Termo

    PRINT           reduce using rule 29 (Atrib -> id = Exp .)
    READ            reduce using rule 29 (Atrib -> id = Exp .)
    WRITE           reduce using rule 29 (Atrib -> id = Exp .)
    START           reduce using rule 29 (Atrib -> id = Exp .)
    id              reduce using rule 29 (Atrib -> id = Exp .)
    IF              reduce using rule 29 (Atrib -> id = Exp .)
    FOR             reduce using rule 29 (Atrib -> id = Exp .)
    END             reduce using rule 29 (Atrib -> id = Exp .)
    num             reduce using rule 29 (Atrib -> id = Exp .)
    (               reduce using rule 29 (Atrib -> id = Exp .)
    $end            reduce using rule 29 (Atrib -> id = Exp .)
    ;               reduce using rule 29 (Atrib -> id = Exp .)
    ELSE            reduce using rule 29 (Atrib -> id = Exp .)
    )               reduce using rule 29 (Atrib -> id = Exp .)
    FI              reduce using rule 29 (Atrib -> id = Exp .)
    ROF             reduce using rule 29 (Atrib -> id = Exp .)
    +               shift and go to state 27
    -               shift and go to state 28


state 43

    (43) Atrib -> id [ Termo . ] = num
    (20) Termo -> Termo . * Factor
    (21) Termo -> Termo . / Factor

    ]               shift and go to state 53
    *               shift and go to state 34
    /               shift and go to state 35


state 44

    (45) Atrib -> id [ num . ] [ num ] = num
    (42) Array -> id [ num . ]
    (44) Matriz -> id [ num . ] [ num ]
    (24) Factor -> num .

  ! shift/reduce conflict for ] resolved as shift
    ]               shift and go to state 54
    *               reduce using rule 24 (Factor -> num .)
    /               reduce using rule 24 (Factor -> num .)

  ! ]               [ reduce using rule 24 (Factor -> num .) ]


state 45

    (15) Writing -> WRITE id [ . num ]

    num             shift and go to state 55


state 46

    (20) Termo -> Termo * Factor .

    *               reduce using rule 20 (Termo -> Termo * Factor .)
    /               reduce using rule 20 (Termo -> Termo * Factor .)
    +               reduce using rule 20 (Termo -> Termo * Factor .)
    -               reduce using rule 20 (Termo -> Termo * Factor .)
    PRINT           reduce using rule 20 (Termo -> Termo * Factor .)
    READ            reduce using rule 20 (Termo -> Termo * Factor .)
    WRITE           reduce using rule 20 (Termo -> Termo * Factor .)
    START           reduce using rule 20 (Termo -> Termo * Factor .)
    id              reduce using rule 20 (Termo -> Termo * Factor .)
    IF              reduce using rule 20 (Termo -> Termo * Factor .)
    FOR             reduce using rule 20 (Termo -> Termo * Factor .)
    END             reduce using rule 20 (Termo -> Termo * Factor .)
    num             reduce using rule 20 (Termo -> Termo * Factor .)
    (               reduce using rule 20 (Termo -> Termo * Factor .)
    $end            reduce using rule 20 (Termo -> Termo * Factor .)
    )               reduce using rule 20 (Termo -> Termo * Factor .)
    ;               reduce using rule 20 (Termo -> Termo * Factor .)
    ELSE            reduce using rule 20 (Termo -> Termo * Factor .)
    FI              reduce using rule 20 (Termo -> Termo * Factor .)
    ROF             reduce using rule 20 (Termo -> Termo * Factor .)
    >               reduce using rule 20 (Termo -> Termo * Factor .)
    <               reduce using rule 20 (Termo -> Termo * Factor .)
    =               reduce using rule 20 (Termo -> Termo * Factor .)
    !               reduce using rule 20 (Termo -> Termo * Factor .)
    ]               reduce using rule 20 (Termo -> Termo * Factor .)


state 47

    (21) Termo -> Termo / Factor .

    *               reduce using rule 21 (Termo -> Termo / Factor .)
    /               reduce using rule 21 (Termo -> Termo / Factor .)
    +               reduce using rule 21 (Termo -> Termo / Factor .)
    -               reduce using rule 21 (Termo -> Termo / Factor .)
    PRINT           reduce using rule 21 (Termo -> Termo / Factor .)
    READ            reduce using rule 21 (Termo -> Termo / Factor .)
    WRITE           reduce using rule 21 (Termo -> Termo / Factor .)
    START           reduce using rule 21 (Termo -> Termo / Factor .)
    id              reduce using rule 21 (Termo -> Termo / Factor .)
    IF              reduce using rule 21 (Termo -> Termo / Factor .)
    FOR             reduce using rule 21 (Termo -> Termo / Factor .)
    END             reduce using rule 21 (Termo -> Termo / Factor .)
    num             reduce using rule 21 (Termo -> Termo / Factor .)
    (               reduce using rule 21 (Termo -> Termo / Factor .)
    $end            reduce using rule 21 (Termo -> Termo / Factor .)
    )               reduce using rule 21 (Termo -> Termo / Factor .)
    ;               reduce using rule 21 (Termo -> Termo / Factor .)
    ELSE            reduce using rule 21 (Termo -> Termo / Factor .)
    FI              reduce using rule 21 (Termo -> Termo / Factor .)
    ROF             reduce using rule 21 (Termo -> Termo / Factor .)
    >               reduce using rule 21 (Termo -> Termo / Factor .)
    <               reduce using rule 21 (Termo -> Termo / Factor .)
    =               reduce using rule 21 (Termo -> Termo / Factor .)
    !               reduce using rule 21 (Termo -> Termo / Factor .)
    ]               reduce using rule 21 (Termo -> Termo / Factor .)


state 48

    (30) Condition -> IF ( Exp . > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> IF ( Exp . < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> IF ( Exp . > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> IF ( Exp . < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> IF ( Exp . = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> IF ( Exp . ! = Termo ) THEN Comandos ELSE Comandos FI
    (17) Exp -> Exp . + Termo
    (18) Exp -> Exp . - Termo

    >               shift and go to state 56
    <               shift and go to state 57
    =               shift and go to state 58
    !               shift and go to state 59
    +               shift and go to state 27
    -               shift and go to state 28


state 49

    (25) Factor -> ( Exp ) .

    *               reduce using rule 25 (Factor -> ( Exp ) .)
    /               reduce using rule 25 (Factor -> ( Exp ) .)
    +               reduce using rule 25 (Factor -> ( Exp ) .)
    -               reduce using rule 25 (Factor -> ( Exp ) .)
    PRINT           reduce using rule 25 (Factor -> ( Exp ) .)
    READ            reduce using rule 25 (Factor -> ( Exp ) .)
    WRITE           reduce using rule 25 (Factor -> ( Exp ) .)
    START           reduce using rule 25 (Factor -> ( Exp ) .)
    id              reduce using rule 25 (Factor -> ( Exp ) .)
    IF              reduce using rule 25 (Factor -> ( Exp ) .)
    FOR             reduce using rule 25 (Factor -> ( Exp ) .)
    END             reduce using rule 25 (Factor -> ( Exp ) .)
    num             reduce using rule 25 (Factor -> ( Exp ) .)
    (               reduce using rule 25 (Factor -> ( Exp ) .)
    $end            reduce using rule 25 (Factor -> ( Exp ) .)
    )               reduce using rule 25 (Factor -> ( Exp ) .)
    ;               reduce using rule 25 (Factor -> ( Exp ) .)
    ELSE            reduce using rule 25 (Factor -> ( Exp ) .)
    FI              reduce using rule 25 (Factor -> ( Exp ) .)
    ROF             reduce using rule 25 (Factor -> ( Exp ) .)
    >               reduce using rule 25 (Factor -> ( Exp ) .)
    <               reduce using rule 25 (Factor -> ( Exp ) .)
    =               reduce using rule 25 (Factor -> ( Exp ) .)
    !               reduce using rule 25 (Factor -> ( Exp ) .)
    ]               reduce using rule 25 (Factor -> ( Exp ) .)


state 50

    (42) Array -> id [ . num ]
    (44) Matriz -> id [ . num ] [ num ]

    num             shift and go to state 60


state 51

    (36) Cicle -> FOR ( Atrib . ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> FOR ( Atrib . ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> FOR ( Atrib . ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> FOR ( Atrib . ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> FOR ( Atrib . ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> FOR ( Atrib . ; Factor ! = Factor ; Atrib ) Comandos ROF

    ;               shift and go to state 61


state 52

    (29) Atrib -> id . = Exp
    (43) Atrib -> id . [ Termo ] = num
    (45) Atrib -> id . [ num ] [ num ] = num

    =               shift and go to state 31
    [               shift and go to state 62


state 53

    (43) Atrib -> id [ Termo ] . = num

    =               shift and go to state 63


state 54

    (45) Atrib -> id [ num ] . [ num ] = num
    (42) Array -> id [ num ] .
    (44) Matriz -> id [ num ] . [ num ]

    [               shift and go to state 64
    *               reduce using rule 42 (Array -> id [ num ] .)
    /               reduce using rule 42 (Array -> id [ num ] .)
    +               reduce using rule 42 (Array -> id [ num ] .)
    -               reduce using rule 42 (Array -> id [ num ] .)
    PRINT           reduce using rule 42 (Array -> id [ num ] .)
    READ            reduce using rule 42 (Array -> id [ num ] .)
    WRITE           reduce using rule 42 (Array -> id [ num ] .)
    START           reduce using rule 42 (Array -> id [ num ] .)
    id              reduce using rule 42 (Array -> id [ num ] .)
    IF              reduce using rule 42 (Array -> id [ num ] .)
    FOR             reduce using rule 42 (Array -> id [ num ] .)
    END             reduce using rule 42 (Array -> id [ num ] .)
    num             reduce using rule 42 (Array -> id [ num ] .)
    (               reduce using rule 42 (Array -> id [ num ] .)
    $end            reduce using rule 42 (Array -> id [ num ] .)
    ELSE            reduce using rule 42 (Array -> id [ num ] .)
    FI              reduce using rule 42 (Array -> id [ num ] .)
    ROF             reduce using rule 42 (Array -> id [ num ] .)


state 55

    (15) Writing -> WRITE id [ num . ]

    ]               shift and go to state 65


state 56

    (30) Condition -> IF ( Exp > . Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> IF ( Exp > . = Termo ) THEN Comandos ELSE Comandos FI
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    =               shift and go to state 67
    id              shift and go to state 38
    num             shift and go to state 16
    (               shift and go to state 20

    Termo                          shift and go to state 66
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 57

    (31) Condition -> IF ( Exp < . Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> IF ( Exp < . = Termo ) THEN Comandos ELSE Comandos FI
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    =               shift and go to state 69
    id              shift and go to state 38
    num             shift and go to state 16
    (               shift and go to state 20

    Termo                          shift and go to state 68
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 58

    (34) Condition -> IF ( Exp = . = Termo ) THEN Comandos ELSE Comandos FI

    =               shift and go to state 70


state 59

    (35) Condition -> IF ( Exp ! . = Termo ) THEN Comandos ELSE Comandos FI

    =               shift and go to state 71


state 60

    (42) Array -> id [ num . ]
    (44) Matriz -> id [ num . ] [ num ]

    ]               shift and go to state 72


state 61

    (36) Cicle -> FOR ( Atrib ; . Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> FOR ( Atrib ; . Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> FOR ( Atrib ; . Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> FOR ( Atrib ; . Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> FOR ( Atrib ; . Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> FOR ( Atrib ; . Factor ! = Factor ; Atrib ) Comandos ROF
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 38
    num             shift and go to state 16
    (               shift and go to state 20

    Factor                         shift and go to state 73
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 62

    (43) Atrib -> id [ . Termo ] = num
    (45) Atrib -> id [ . num ] [ num ] = num
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    num             shift and go to state 74
    id              shift and go to state 38
    (               shift and go to state 20

    Termo                          shift and go to state 43
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 63

    (43) Atrib -> id [ Termo ] = . num

    num             shift and go to state 75


state 64

    (45) Atrib -> id [ num ] [ . num ] = num
    (44) Matriz -> id [ num ] [ . num ]

    num             shift and go to state 76


state 65

    (15) Writing -> WRITE id [ num ] .

    PRINT           reduce using rule 15 (Writing -> WRITE id [ num ] .)
    READ            reduce using rule 15 (Writing -> WRITE id [ num ] .)
    WRITE           reduce using rule 15 (Writing -> WRITE id [ num ] .)
    START           reduce using rule 15 (Writing -> WRITE id [ num ] .)
    id              reduce using rule 15 (Writing -> WRITE id [ num ] .)
    IF              reduce using rule 15 (Writing -> WRITE id [ num ] .)
    FOR             reduce using rule 15 (Writing -> WRITE id [ num ] .)
    END             reduce using rule 15 (Writing -> WRITE id [ num ] .)
    num             reduce using rule 15 (Writing -> WRITE id [ num ] .)
    (               reduce using rule 15 (Writing -> WRITE id [ num ] .)
    $end            reduce using rule 15 (Writing -> WRITE id [ num ] .)
    ELSE            reduce using rule 15 (Writing -> WRITE id [ num ] .)
    FI              reduce using rule 15 (Writing -> WRITE id [ num ] .)
    ROF             reduce using rule 15 (Writing -> WRITE id [ num ] .)


state 66

    (30) Condition -> IF ( Exp > Termo . ) THEN Comandos ELSE Comandos FI
    (20) Termo -> Termo . * Factor
    (21) Termo -> Termo . / Factor

    )               shift and go to state 77
    *               shift and go to state 34
    /               shift and go to state 35


state 67

    (32) Condition -> IF ( Exp > = . Termo ) THEN Comandos ELSE Comandos FI
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 38
    num             shift and go to state 16
    (               shift and go to state 20

    Termo                          shift and go to state 78
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 68

    (31) Condition -> IF ( Exp < Termo . ) THEN Comandos ELSE Comandos FI
    (20) Termo -> Termo . * Factor
    (21) Termo -> Termo . / Factor

    )               shift and go to state 79
    *               shift and go to state 34
    /               shift and go to state 35


state 69

    (33) Condition -> IF ( Exp < = . Termo ) THEN Comandos ELSE Comandos FI
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 38
    num             shift and go to state 16
    (               shift and go to state 20

    Termo                          shift and go to state 80
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 70

    (34) Condition -> IF ( Exp = = . Termo ) THEN Comandos ELSE Comandos FI
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 38
    num             shift and go to state 16
    (               shift and go to state 20

    Termo                          shift and go to state 81
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 71

    (35) Condition -> IF ( Exp ! = . Termo ) THEN Comandos ELSE Comandos FI
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 38
    num             shift and go to state 16
    (               shift and go to state 20

    Termo                          shift and go to state 82
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 72

    (42) Array -> id [ num ] .
    (44) Matriz -> id [ num ] . [ num ]

    *               reduce using rule 42 (Array -> id [ num ] .)
    /               reduce using rule 42 (Array -> id [ num ] .)
    )               reduce using rule 42 (Array -> id [ num ] .)
    +               reduce using rule 42 (Array -> id [ num ] .)
    -               reduce using rule 42 (Array -> id [ num ] .)
    PRINT           reduce using rule 42 (Array -> id [ num ] .)
    READ            reduce using rule 42 (Array -> id [ num ] .)
    WRITE           reduce using rule 42 (Array -> id [ num ] .)
    START           reduce using rule 42 (Array -> id [ num ] .)
    id              reduce using rule 42 (Array -> id [ num ] .)
    IF              reduce using rule 42 (Array -> id [ num ] .)
    FOR             reduce using rule 42 (Array -> id [ num ] .)
    END             reduce using rule 42 (Array -> id [ num ] .)
    num             reduce using rule 42 (Array -> id [ num ] .)
    (               reduce using rule 42 (Array -> id [ num ] .)
    $end            reduce using rule 42 (Array -> id [ num ] .)
    ;               reduce using rule 42 (Array -> id [ num ] .)
    ELSE            reduce using rule 42 (Array -> id [ num ] .)
    FI              reduce using rule 42 (Array -> id [ num ] .)
    ROF             reduce using rule 42 (Array -> id [ num ] .)
    >               reduce using rule 42 (Array -> id [ num ] .)
    <               reduce using rule 42 (Array -> id [ num ] .)
    =               reduce using rule 42 (Array -> id [ num ] .)
    !               reduce using rule 42 (Array -> id [ num ] .)
    ]               reduce using rule 42 (Array -> id [ num ] .)
    [               shift and go to state 83


state 73

    (36) Cicle -> FOR ( Atrib ; Factor . < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> FOR ( Atrib ; Factor . > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> FOR ( Atrib ; Factor . < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> FOR ( Atrib ; Factor . > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> FOR ( Atrib ; Factor . = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> FOR ( Atrib ; Factor . ! = Factor ; Atrib ) Comandos ROF

    <               shift and go to state 84
    >               shift and go to state 85
    =               shift and go to state 86
    !               shift and go to state 87


state 74

    (45) Atrib -> id [ num . ] [ num ] = num
    (24) Factor -> num .

  ! shift/reduce conflict for ] resolved as shift
    ]               shift and go to state 88
    *               reduce using rule 24 (Factor -> num .)
    /               reduce using rule 24 (Factor -> num .)

  ! ]               [ reduce using rule 24 (Factor -> num .) ]


state 75

    (43) Atrib -> id [ Termo ] = num .

    PRINT           reduce using rule 43 (Atrib -> id [ Termo ] = num .)
    READ            reduce using rule 43 (Atrib -> id [ Termo ] = num .)
    WRITE           reduce using rule 43 (Atrib -> id [ Termo ] = num .)
    START           reduce using rule 43 (Atrib -> id [ Termo ] = num .)
    id              reduce using rule 43 (Atrib -> id [ Termo ] = num .)
    IF              reduce using rule 43 (Atrib -> id [ Termo ] = num .)
    FOR             reduce using rule 43 (Atrib -> id [ Termo ] = num .)
    END             reduce using rule 43 (Atrib -> id [ Termo ] = num .)
    num             reduce using rule 43 (Atrib -> id [ Termo ] = num .)
    (               reduce using rule 43 (Atrib -> id [ Termo ] = num .)
    $end            reduce using rule 43 (Atrib -> id [ Termo ] = num .)
    ;               reduce using rule 43 (Atrib -> id [ Termo ] = num .)
    ELSE            reduce using rule 43 (Atrib -> id [ Termo ] = num .)
    )               reduce using rule 43 (Atrib -> id [ Termo ] = num .)
    FI              reduce using rule 43 (Atrib -> id [ Termo ] = num .)
    ROF             reduce using rule 43 (Atrib -> id [ Termo ] = num .)


state 76

    (45) Atrib -> id [ num ] [ num . ] = num
    (44) Matriz -> id [ num ] [ num . ]

    ]               shift and go to state 89


state 77

    (30) Condition -> IF ( Exp > Termo ) . THEN Comandos ELSE Comandos FI

    THEN            shift and go to state 90


state 78

    (32) Condition -> IF ( Exp > = Termo . ) THEN Comandos ELSE Comandos FI
    (20) Termo -> Termo . * Factor
    (21) Termo -> Termo . / Factor

    )               shift and go to state 91
    *               shift and go to state 34
    /               shift and go to state 35


state 79

    (31) Condition -> IF ( Exp < Termo ) . THEN Comandos ELSE Comandos FI

    THEN            shift and go to state 92


state 80

    (33) Condition -> IF ( Exp < = Termo . ) THEN Comandos ELSE Comandos FI
    (20) Termo -> Termo . * Factor
    (21) Termo -> Termo . / Factor

    )               shift and go to state 93
    *               shift and go to state 34
    /               shift and go to state 35


state 81

    (34) Condition -> IF ( Exp = = Termo . ) THEN Comandos ELSE Comandos FI
    (20) Termo -> Termo . * Factor
    (21) Termo -> Termo . / Factor

    )               shift and go to state 94
    *               shift and go to state 34
    /               shift and go to state 35


state 82

    (35) Condition -> IF ( Exp ! = Termo . ) THEN Comandos ELSE Comandos FI
    (20) Termo -> Termo . * Factor
    (21) Termo -> Termo . / Factor

    )               shift and go to state 95
    *               shift and go to state 34
    /               shift and go to state 35


state 83

    (44) Matriz -> id [ num ] [ . num ]

    num             shift and go to state 96


state 84

    (36) Cicle -> FOR ( Atrib ; Factor < . Factor ; Atrib ) Comandos ROF
    (38) Cicle -> FOR ( Atrib ; Factor < . = Factor ; Atrib ) Comandos ROF
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    =               shift and go to state 98
    id              shift and go to state 38
    num             shift and go to state 16
    (               shift and go to state 20

    Factor                         shift and go to state 97
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 85

    (37) Cicle -> FOR ( Atrib ; Factor > . Factor ; Atrib ) Comandos ROF
    (39) Cicle -> FOR ( Atrib ; Factor > . = Factor ; Atrib ) Comandos ROF
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    =               shift and go to state 100
    id              shift and go to state 38
    num             shift and go to state 16
    (               shift and go to state 20

    Factor                         shift and go to state 99
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 86

    (40) Cicle -> FOR ( Atrib ; Factor = . = Factor ; Atrib ) Comandos ROF

    =               shift and go to state 101


state 87

    (41) Cicle -> FOR ( Atrib ; Factor ! . = Factor ; Atrib ) Comandos ROF

    =               shift and go to state 102


state 88

    (45) Atrib -> id [ num ] . [ num ] = num

    [               shift and go to state 103


state 89

    (45) Atrib -> id [ num ] [ num ] . = num
    (44) Matriz -> id [ num ] [ num ] .

    =               shift and go to state 104
    *               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    /               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    +               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    -               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    PRINT           reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    READ            reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    WRITE           reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    START           reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    id              reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    IF              reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    FOR             reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    END             reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    num             reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    (               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    $end            reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    ELSE            reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    FI              reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    ROF             reduce using rule 44 (Matriz -> id [ num ] [ num ] .)


state 90

    (30) Condition -> IF ( Exp > Termo ) THEN . Comandos ELSE Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comandos                       shift and go to state 105
    Comando                        shift and go to state 2
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 91

    (32) Condition -> IF ( Exp > = Termo ) . THEN Comandos ELSE Comandos FI

    THEN            shift and go to state 106


state 92

    (31) Condition -> IF ( Exp < Termo ) THEN . Comandos ELSE Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comandos                       shift and go to state 107
    Comando                        shift and go to state 2
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 93

    (33) Condition -> IF ( Exp < = Termo ) . THEN Comandos ELSE Comandos FI

    THEN            shift and go to state 108


state 94

    (34) Condition -> IF ( Exp = = Termo ) . THEN Comandos ELSE Comandos FI

    THEN            shift and go to state 109


state 95

    (35) Condition -> IF ( Exp ! = Termo ) . THEN Comandos ELSE Comandos FI

    THEN            shift and go to state 110


state 96

    (44) Matriz -> id [ num ] [ num . ]

    ]               shift and go to state 111


state 97

    (36) Cicle -> FOR ( Atrib ; Factor < Factor . ; Atrib ) Comandos ROF

    ;               shift and go to state 112


state 98

    (38) Cicle -> FOR ( Atrib ; Factor < = . Factor ; Atrib ) Comandos ROF
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 38
    num             shift and go to state 16
    (               shift and go to state 20

    Factor                         shift and go to state 113
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 99

    (37) Cicle -> FOR ( Atrib ; Factor > Factor . ; Atrib ) Comandos ROF

    ;               shift and go to state 114


state 100

    (39) Cicle -> FOR ( Atrib ; Factor > = . Factor ; Atrib ) Comandos ROF
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 38
    num             shift and go to state 16
    (               shift and go to state 20

    Factor                         shift and go to state 115
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 101

    (40) Cicle -> FOR ( Atrib ; Factor = = . Factor ; Atrib ) Comandos ROF
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 38
    num             shift and go to state 16
    (               shift and go to state 20

    Factor                         shift and go to state 116
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 102

    (41) Cicle -> FOR ( Atrib ; Factor ! = . Factor ; Atrib ) Comandos ROF
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 38
    num             shift and go to state 16
    (               shift and go to state 20

    Factor                         shift and go to state 117
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 103

    (45) Atrib -> id [ num ] [ . num ] = num

    num             shift and go to state 118


state 104

    (45) Atrib -> id [ num ] [ num ] = . num

    num             shift and go to state 119


state 105

    (30) Condition -> IF ( Exp > Termo ) THEN Comandos . ELSE Comandos FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ELSE            shift and go to state 120
    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comando                        shift and go to state 26
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 106

    (32) Condition -> IF ( Exp > = Termo ) THEN . Comandos ELSE Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comandos                       shift and go to state 121
    Comando                        shift and go to state 2
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 107

    (31) Condition -> IF ( Exp < Termo ) THEN Comandos . ELSE Comandos FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ELSE            shift and go to state 122
    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comando                        shift and go to state 26
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 108

    (33) Condition -> IF ( Exp < = Termo ) THEN . Comandos ELSE Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comandos                       shift and go to state 123
    Comando                        shift and go to state 2
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 109

    (34) Condition -> IF ( Exp = = Termo ) THEN . Comandos ELSE Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comandos                       shift and go to state 124
    Comando                        shift and go to state 2
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 110

    (35) Condition -> IF ( Exp ! = Termo ) THEN . Comandos ELSE Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comandos                       shift and go to state 125
    Comando                        shift and go to state 2
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 111

    (44) Matriz -> id [ num ] [ num ] .

    *               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    /               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    )               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    +               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    -               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    PRINT           reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    READ            reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    WRITE           reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    START           reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    id              reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    IF              reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    FOR             reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    END             reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    num             reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    (               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    $end            reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    ;               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    ELSE            reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    FI              reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    ROF             reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    >               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    <               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    =               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    !               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    ]               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)


state 112

    (36) Cicle -> FOR ( Atrib ; Factor < Factor ; . Atrib ) Comandos ROF
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num

    id              shift and go to state 52

    Atrib                          shift and go to state 126

state 113

    (38) Cicle -> FOR ( Atrib ; Factor < = Factor . ; Atrib ) Comandos ROF

    ;               shift and go to state 127


state 114

    (37) Cicle -> FOR ( Atrib ; Factor > Factor ; . Atrib ) Comandos ROF
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num

    id              shift and go to state 52

    Atrib                          shift and go to state 128

state 115

    (39) Cicle -> FOR ( Atrib ; Factor > = Factor . ; Atrib ) Comandos ROF

    ;               shift and go to state 129


state 116

    (40) Cicle -> FOR ( Atrib ; Factor = = Factor . ; Atrib ) Comandos ROF

    ;               shift and go to state 130


state 117

    (41) Cicle -> FOR ( Atrib ; Factor ! = Factor . ; Atrib ) Comandos ROF

    ;               shift and go to state 131


state 118

    (45) Atrib -> id [ num ] [ num . ] = num

    ]               shift and go to state 132


state 119

    (45) Atrib -> id [ num ] [ num ] = num .

    PRINT           reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    READ            reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    WRITE           reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    START           reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    id              reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    IF              reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    FOR             reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    END             reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    num             reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    (               reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    $end            reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    ;               reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    ELSE            reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    )               reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    FI              reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    ROF             reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)


state 120

    (30) Condition -> IF ( Exp > Termo ) THEN Comandos ELSE . Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comandos                       shift and go to state 133
    Comando                        shift and go to state 2
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 121

    (32) Condition -> IF ( Exp > = Termo ) THEN Comandos . ELSE Comandos FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ELSE            shift and go to state 134
    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comando                        shift and go to state 26
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 122

    (31) Condition -> IF ( Exp < Termo ) THEN Comandos ELSE . Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comandos                       shift and go to state 135
    Comando                        shift and go to state 2
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 123

    (33) Condition -> IF ( Exp < = Termo ) THEN Comandos . ELSE Comandos FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ELSE            shift and go to state 136
    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comando                        shift and go to state 26
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 124

    (34) Condition -> IF ( Exp = = Termo ) THEN Comandos . ELSE Comandos FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ELSE            shift and go to state 137
    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comando                        shift and go to state 26
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 125

    (35) Condition -> IF ( Exp ! = Termo ) THEN Comandos . ELSE Comandos FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ELSE            shift and go to state 138
    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comando                        shift and go to state 26
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 126

    (36) Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib . ) Comandos ROF

    )               shift and go to state 139


state 127

    (38) Cicle -> FOR ( Atrib ; Factor < = Factor ; . Atrib ) Comandos ROF
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num

    id              shift and go to state 52

    Atrib                          shift and go to state 140

state 128

    (37) Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib . ) Comandos ROF

    )               shift and go to state 141


state 129

    (39) Cicle -> FOR ( Atrib ; Factor > = Factor ; . Atrib ) Comandos ROF
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num

    id              shift and go to state 52

    Atrib                          shift and go to state 142

state 130

    (40) Cicle -> FOR ( Atrib ; Factor = = Factor ; . Atrib ) Comandos ROF
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num

    id              shift and go to state 52

    Atrib                          shift and go to state 143

state 131

    (41) Cicle -> FOR ( Atrib ; Factor ! = Factor ; . Atrib ) Comandos ROF
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num

    id              shift and go to state 52

    Atrib                          shift and go to state 144

state 132

    (45) Atrib -> id [ num ] [ num ] . = num

    =               shift and go to state 104


state 133

    (30) Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos . FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    FI              shift and go to state 145
    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comando                        shift and go to state 26
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 134

    (32) Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE . Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comandos                       shift and go to state 146
    Comando                        shift and go to state 2
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 135

    (31) Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos . FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    FI              shift and go to state 147
    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comando                        shift and go to state 26
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 136

    (33) Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE . Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comandos                       shift and go to state 148
    Comando                        shift and go to state 2
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 137

    (34) Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE . Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comandos                       shift and go to state 149
    Comando                        shift and go to state 2
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 138

    (35) Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE . Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comandos                       shift and go to state 150
    Comando                        shift and go to state 2
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 139

    (36) Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) . Comandos ROF
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Atrib                          shift and go to state 8
    Factor                         shift and go to state 22
    Comandos                       shift and go to state 151
    Comando                        shift and go to state 2
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Exp                            shift and go to state 7
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Termo                          shift and go to state 18
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 140

    (38) Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib . ) Comandos ROF

    )               shift and go to state 152


state 141

    (37) Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) . Comandos ROF
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Atrib                          shift and go to state 8
    Factor                         shift and go to state 22
    Comandos                       shift and go to state 153
    Comando                        shift and go to state 2
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Exp                            shift and go to state 7
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Termo                          shift and go to state 18
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 142

    (39) Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib . ) Comandos ROF

    )               shift and go to state 154


state 143

    (40) Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib . ) Comandos ROF

    )               shift and go to state 155


state 144

    (41) Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib . ) Comandos ROF

    )               shift and go to state 156


state 145

    (30) Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .

    PRINT           reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    READ            reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    WRITE           reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    START           reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    id              reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    IF              reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    FOR             reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    END             reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    num             reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    (               reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    $end            reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    ELSE            reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    FI              reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    ROF             reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)


state 146

    (32) Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos . FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    FI              shift and go to state 157
    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comando                        shift and go to state 26
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 147

    (31) Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .

    PRINT           reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    READ            reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    WRITE           reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    START           reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    id              reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    IF              reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    FOR             reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    END             reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    num             reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    (               reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    $end            reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    ELSE            reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    FI              reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    ROF             reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)


state 148

    (33) Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos . FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    FI              shift and go to state 158
    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comando                        shift and go to state 26
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 149

    (34) Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos . FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    FI              shift and go to state 159
    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comando                        shift and go to state 26
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 150

    (35) Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos . FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    FI              shift and go to state 160
    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Exp                            shift and go to state 7
    Termo                          shift and go to state 18
    Comando                        shift and go to state 26
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Atrib                          shift and go to state 8
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Factor                         shift and go to state 22
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 151

    (36) Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos . ROF
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ROF             shift and go to state 161
    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Atrib                          shift and go to state 8
    Factor                         shift and go to state 22
    Comando                        shift and go to state 26
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Exp                            shift and go to state 7
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Termo                          shift and go to state 18
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 152

    (38) Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) . Comandos ROF
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Atrib                          shift and go to state 8
    Factor                         shift and go to state 22
    Comandos                       shift and go to state 162
    Comando                        shift and go to state 2
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Exp                            shift and go to state 7
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Termo                          shift and go to state 18
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 153

    (37) Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos . ROF
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ROF             shift and go to state 163
    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Atrib                          shift and go to state 8
    Factor                         shift and go to state 22
    Comando                        shift and go to state 26
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Exp                            shift and go to state 7
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Termo                          shift and go to state 18
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 154

    (39) Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) . Comandos ROF
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Atrib                          shift and go to state 8
    Factor                         shift and go to state 22
    Comandos                       shift and go to state 164
    Comando                        shift and go to state 2
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Exp                            shift and go to state 7
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Termo                          shift and go to state 18
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 155

    (40) Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) . Comandos ROF
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Atrib                          shift and go to state 8
    Factor                         shift and go to state 22
    Comandos                       shift and go to state 165
    Comando                        shift and go to state 2
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Exp                            shift and go to state 7
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Termo                          shift and go to state 18
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 156

    (41) Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) . Comandos ROF
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Atrib                          shift and go to state 8
    Factor                         shift and go to state 22
    Comandos                       shift and go to state 166
    Comando                        shift and go to state 2
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Exp                            shift and go to state 7
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Termo                          shift and go to state 18
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 157

    (32) Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .

    PRINT           reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    READ            reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    WRITE           reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    START           reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    id              reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    IF              reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    FOR             reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    END             reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    num             reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    (               reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    $end            reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    ELSE            reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    FI              reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    ROF             reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)


state 158

    (33) Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .

    PRINT           reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    READ            reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    WRITE           reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    START           reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    id              reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    IF              reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    FOR             reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    END             reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    num             reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    (               reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    $end            reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    ELSE            reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    FI              reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    ROF             reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)


state 159

    (34) Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .

    PRINT           reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    READ            reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    WRITE           reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    START           reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    id              reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    IF              reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    FOR             reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    END             reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    num             reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    (               reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    $end            reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    ELSE            reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    FI              reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    ROF             reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)


state 160

    (35) Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .

    PRINT           reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    READ            reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    WRITE           reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    START           reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    id              reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    IF              reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    FOR             reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    END             reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    num             reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    (               reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    $end            reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    ELSE            reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    FI              reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    ROF             reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)


state 161

    (36) Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .

    PRINT           reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    READ            reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    WRITE           reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    START           reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    id              reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    IF              reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    FOR             reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    END             reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    num             reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    (               reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    $end            reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    ELSE            reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    FI              reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    ROF             reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)


state 162

    (38) Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos . ROF
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ROF             shift and go to state 167
    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Atrib                          shift and go to state 8
    Factor                         shift and go to state 22
    Comando                        shift and go to state 26
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Exp                            shift and go to state 7
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Termo                          shift and go to state 18
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 163

    (37) Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .

    PRINT           reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    READ            reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    WRITE           reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    START           reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    id              reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    IF              reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    FOR             reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    END             reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    num             reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    (               reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    $end            reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    ELSE            reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    FI              reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    ROF             reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)


state 164

    (39) Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos . ROF
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ROF             shift and go to state 168
    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Atrib                          shift and go to state 8
    Factor                         shift and go to state 22
    Comando                        shift and go to state 26
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Exp                            shift and go to state 7
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Termo                          shift and go to state 18
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 165

    (40) Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos . ROF
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ROF             shift and go to state 169
    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Atrib                          shift and go to state 8
    Factor                         shift and go to state 22
    Comando                        shift and go to state 26
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Exp                            shift and go to state 7
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Termo                          shift and go to state 18
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 166

    (41) Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos . ROF
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (13) Reading -> . READ id
    (14) Writing -> . WRITE id
    (15) Writing -> . WRITE id [ num ]
    (16) Start -> . START
    (17) Exp -> . Exp + Termo
    (18) Exp -> . Exp - Termo
    (19) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ Termo ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (20) Termo -> . Termo * Factor
    (21) Termo -> . Termo / Factor
    (22) Termo -> . Factor
    (23) Factor -> . id
    (24) Factor -> . num
    (25) Factor -> . ( Exp )
    (26) Factor -> . Array
    (27) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ROF             shift and go to state 170
    PRINT           shift and go to state 12
    READ            shift and go to state 13
    WRITE           shift and go to state 15
    START           shift and go to state 17
    id              shift and go to state 14
    IF              shift and go to state 19
    FOR             shift and go to state 21
    END             shift and go to state 23
    num             shift and go to state 16
    (               shift and go to state 20

    Atrib                          shift and go to state 8
    Factor                         shift and go to state 22
    Comando                        shift and go to state 26
    Printing                       shift and go to state 3
    Reading                        shift and go to state 4
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Exp                            shift and go to state 7
    Condition                      shift and go to state 9
    Cicle                          shift and go to state 10
    End                            shift and go to state 11
    Termo                          shift and go to state 18
    Array                          shift and go to state 24
    Matriz                         shift and go to state 25

state 167

    (38) Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .

    PRINT           reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    READ            reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    WRITE           reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    START           reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    id              reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    IF              reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    FOR             reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    END             reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    num             reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    (               reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    $end            reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    ELSE            reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    FI              reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    ROF             reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)


state 168

    (39) Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .

    PRINT           reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    READ            reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    WRITE           reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    START           reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    id              reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    IF              reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    FOR             reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    END             reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    num             reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    (               reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    $end            reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    ELSE            reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    FI              reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    ROF             reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)


state 169

    (40) Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .

    PRINT           reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    READ            reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    WRITE           reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    START           reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    id              reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    IF              reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    FOR             reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    END             reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    num             reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    (               reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    $end            reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    ELSE            reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    FI              reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    ROF             reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)


state 170

    (41) Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .

    PRINT           reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    READ            reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    WRITE           reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    START           reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    id              reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    IF              reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    FOR             reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    END             reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    num             reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    (               reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    $end            reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    ELSE            reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    FI              reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    ROF             reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ] in state 44 resolved as shift
WARNING: shift/reduce conflict for ] in state 74 resolved as shift
