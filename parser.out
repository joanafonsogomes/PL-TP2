Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Comandos
Rule 1     Comandos -> Comandos Comando
Rule 2     Comandos -> Comando
Rule 3     Comando -> Reading
Rule 4     Comando -> Writing
Rule 5     Comando -> Printing
Rule 6     Comando -> Atrib
Rule 7     Comando -> Exp
Rule 8     Comando -> Start
Rule 9     Comando -> End
Rule 10    Comando -> Condition
Rule 11    Comando -> Cicle
Rule 12    Exp -> Exp + Termo
Rule 13    Exp -> Exp - Termo
Rule 14    Exp -> Termo
Rule 15    Termo -> Termo * Factor
Rule 16    Termo -> Termo / Factor
Rule 17    Termo -> Factor
Rule 18    Factor -> id
Rule 19    Factor -> num
Rule 20    Factor -> ( Exp )
Rule 21    Reading -> READ id
Rule 22    Writing -> WRITE id
Rule 23    Printing -> PRINT ( frase )
Rule 24    Start -> START
Rule 25    End -> END
Rule 26    Atrib -> id = Exp
Rule 27    Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
Rule 28    Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
Rule 29    Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
Rule 30    Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
Rule 31    Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
Rule 32    Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
Rule 33    Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
Rule 34    Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
Rule 35    Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
Rule 36    Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF

Terminals, with rules where they appear

(                    : 20 23 27 28 29 30 31 32 33 34 35 36
)                    : 20 23 27 28 29 30 31 32 33 34 35 36
*                    : 15
+                    : 12
-                    : 13
/                    : 16
;                    : 32 32 33 33 34 34 35 35 36 36
<                    : 28 30 32 34
=                    : 26 29 30 31 31 34 35 36 36
>                    : 27 29 33 35
ELSE                 : 27 28 29 30 31
END                  : 25
FI                   : 27 28 29 30 31
FOR                  : 32 33 34 35 36
IF                   : 27 28 29 30 31
PRINT                : 23
READ                 : 21
ROF                  : 32 33 34 35 36
START                : 24
THEN                 : 27 28 29 30 31
WRITE                : 22
error                : 
frase                : 23
id                   : 18 21 22 26
num                  : 19

Nonterminals, with rules where they appear

Atrib                : 6 32 32 33 33 34 34 35 35 36 36
Cicle                : 11
Comando              : 1 2
Comandos             : 1 27 27 28 28 29 29 30 30 31 31 32 33 34 35 36 0
Condition            : 10
End                  : 9
Exp                  : 7 12 13 20 26 27 28 29 30 31
Factor               : 15 16 17 32 32 33 33 34 34 35 35 36 36
Printing             : 5
Reading              : 3
Start                : 8
Termo                : 12 13 14 15 16 27 28 29 30 31
Writing              : 4

Parsing method: LALR

state 0

    (0) S' -> . Comandos
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Comandos                       shift and go to state 16
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 2
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 1

    (9) Comando -> End .

    ROF             reduce using rule 9 (Comando -> End .)
    READ            reduce using rule 9 (Comando -> End .)
    WRITE           reduce using rule 9 (Comando -> End .)
    PRINT           reduce using rule 9 (Comando -> End .)
    id              reduce using rule 9 (Comando -> End .)
    START           reduce using rule 9 (Comando -> End .)
    END             reduce using rule 9 (Comando -> End .)
    IF              reduce using rule 9 (Comando -> End .)
    FOR             reduce using rule 9 (Comando -> End .)
    num             reduce using rule 9 (Comando -> End .)
    (               reduce using rule 9 (Comando -> End .)
    FI              reduce using rule 9 (Comando -> End .)
    $end            reduce using rule 9 (Comando -> End .)
    ELSE            reduce using rule 9 (Comando -> End .)


state 2

    (2) Comandos -> Comando .

    FI              reduce using rule 2 (Comandos -> Comando .)
    READ            reduce using rule 2 (Comandos -> Comando .)
    WRITE           reduce using rule 2 (Comandos -> Comando .)
    PRINT           reduce using rule 2 (Comandos -> Comando .)
    id              reduce using rule 2 (Comandos -> Comando .)
    START           reduce using rule 2 (Comandos -> Comando .)
    END             reduce using rule 2 (Comandos -> Comando .)
    IF              reduce using rule 2 (Comandos -> Comando .)
    FOR             reduce using rule 2 (Comandos -> Comando .)
    num             reduce using rule 2 (Comandos -> Comando .)
    (               reduce using rule 2 (Comandos -> Comando .)
    $end            reduce using rule 2 (Comandos -> Comando .)
    ELSE            reduce using rule 2 (Comandos -> Comando .)
    ROF             reduce using rule 2 (Comandos -> Comando .)


state 3

    (21) Reading -> READ . id

    id              shift and go to state 24


state 4

    (4) Comando -> Writing .

    ROF             reduce using rule 4 (Comando -> Writing .)
    READ            reduce using rule 4 (Comando -> Writing .)
    WRITE           reduce using rule 4 (Comando -> Writing .)
    PRINT           reduce using rule 4 (Comando -> Writing .)
    id              reduce using rule 4 (Comando -> Writing .)
    START           reduce using rule 4 (Comando -> Writing .)
    END             reduce using rule 4 (Comando -> Writing .)
    IF              reduce using rule 4 (Comando -> Writing .)
    FOR             reduce using rule 4 (Comando -> Writing .)
    num             reduce using rule 4 (Comando -> Writing .)
    (               reduce using rule 4 (Comando -> Writing .)
    FI              reduce using rule 4 (Comando -> Writing .)
    $end            reduce using rule 4 (Comando -> Writing .)
    ELSE            reduce using rule 4 (Comando -> Writing .)


state 5

    (8) Comando -> Start .

    ROF             reduce using rule 8 (Comando -> Start .)
    READ            reduce using rule 8 (Comando -> Start .)
    WRITE           reduce using rule 8 (Comando -> Start .)
    PRINT           reduce using rule 8 (Comando -> Start .)
    id              reduce using rule 8 (Comando -> Start .)
    START           reduce using rule 8 (Comando -> Start .)
    END             reduce using rule 8 (Comando -> Start .)
    IF              reduce using rule 8 (Comando -> Start .)
    FOR             reduce using rule 8 (Comando -> Start .)
    num             reduce using rule 8 (Comando -> Start .)
    (               reduce using rule 8 (Comando -> Start .)
    FI              reduce using rule 8 (Comando -> Start .)
    $end            reduce using rule 8 (Comando -> Start .)
    ELSE            reduce using rule 8 (Comando -> Start .)


state 6

    (19) Factor -> num .

    *               reduce using rule 19 (Factor -> num .)
    /               reduce using rule 19 (Factor -> num .)
    +               reduce using rule 19 (Factor -> num .)
    -               reduce using rule 19 (Factor -> num .)
    READ            reduce using rule 19 (Factor -> num .)
    WRITE           reduce using rule 19 (Factor -> num .)
    PRINT           reduce using rule 19 (Factor -> num .)
    id              reduce using rule 19 (Factor -> num .)
    START           reduce using rule 19 (Factor -> num .)
    END             reduce using rule 19 (Factor -> num .)
    IF              reduce using rule 19 (Factor -> num .)
    FOR             reduce using rule 19 (Factor -> num .)
    num             reduce using rule 19 (Factor -> num .)
    (               reduce using rule 19 (Factor -> num .)
    $end            reduce using rule 19 (Factor -> num .)
    ;               reduce using rule 19 (Factor -> num .)
    ELSE            reduce using rule 19 (Factor -> num .)
    )               reduce using rule 19 (Factor -> num .)
    FI              reduce using rule 19 (Factor -> num .)
    ROF             reduce using rule 19 (Factor -> num .)
    >               reduce using rule 19 (Factor -> num .)
    <               reduce using rule 19 (Factor -> num .)
    =               reduce using rule 19 (Factor -> num .)


state 7

    (17) Termo -> Factor .

    *               reduce using rule 17 (Termo -> Factor .)
    /               reduce using rule 17 (Termo -> Factor .)
    +               reduce using rule 17 (Termo -> Factor .)
    -               reduce using rule 17 (Termo -> Factor .)
    ROF             reduce using rule 17 (Termo -> Factor .)
    READ            reduce using rule 17 (Termo -> Factor .)
    WRITE           reduce using rule 17 (Termo -> Factor .)
    PRINT           reduce using rule 17 (Termo -> Factor .)
    id              reduce using rule 17 (Termo -> Factor .)
    START           reduce using rule 17 (Termo -> Factor .)
    END             reduce using rule 17 (Termo -> Factor .)
    IF              reduce using rule 17 (Termo -> Factor .)
    FOR             reduce using rule 17 (Termo -> Factor .)
    num             reduce using rule 17 (Termo -> Factor .)
    (               reduce using rule 17 (Termo -> Factor .)
    FI              reduce using rule 17 (Termo -> Factor .)
    ELSE            reduce using rule 17 (Termo -> Factor .)
    )               reduce using rule 17 (Termo -> Factor .)
    $end            reduce using rule 17 (Termo -> Factor .)
    ;               reduce using rule 17 (Termo -> Factor .)
    >               reduce using rule 17 (Termo -> Factor .)
    <               reduce using rule 17 (Termo -> Factor .)
    =               reduce using rule 17 (Termo -> Factor .)


state 8

    (23) Printing -> PRINT . ( frase )

    (               shift and go to state 25


state 9

    (3) Comando -> Reading .

    ROF             reduce using rule 3 (Comando -> Reading .)
    READ            reduce using rule 3 (Comando -> Reading .)
    WRITE           reduce using rule 3 (Comando -> Reading .)
    PRINT           reduce using rule 3 (Comando -> Reading .)
    id              reduce using rule 3 (Comando -> Reading .)
    START           reduce using rule 3 (Comando -> Reading .)
    END             reduce using rule 3 (Comando -> Reading .)
    IF              reduce using rule 3 (Comando -> Reading .)
    FOR             reduce using rule 3 (Comando -> Reading .)
    num             reduce using rule 3 (Comando -> Reading .)
    (               reduce using rule 3 (Comando -> Reading .)
    FI              reduce using rule 3 (Comando -> Reading .)
    $end            reduce using rule 3 (Comando -> Reading .)
    ELSE            reduce using rule 3 (Comando -> Reading .)


state 10

    (26) Atrib -> id . = Exp
    (18) Factor -> id .

    =               shift and go to state 26
    *               reduce using rule 18 (Factor -> id .)
    /               reduce using rule 18 (Factor -> id .)
    +               reduce using rule 18 (Factor -> id .)
    -               reduce using rule 18 (Factor -> id .)
    ROF             reduce using rule 18 (Factor -> id .)
    READ            reduce using rule 18 (Factor -> id .)
    WRITE           reduce using rule 18 (Factor -> id .)
    PRINT           reduce using rule 18 (Factor -> id .)
    id              reduce using rule 18 (Factor -> id .)
    START           reduce using rule 18 (Factor -> id .)
    END             reduce using rule 18 (Factor -> id .)
    IF              reduce using rule 18 (Factor -> id .)
    FOR             reduce using rule 18 (Factor -> id .)
    num             reduce using rule 18 (Factor -> id .)
    (               reduce using rule 18 (Factor -> id .)
    ELSE            reduce using rule 18 (Factor -> id .)
    FI              reduce using rule 18 (Factor -> id .)
    $end            reduce using rule 18 (Factor -> id .)


state 11

    (20) Factor -> ( . Exp )
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    id              shift and go to state 28
    num             shift and go to state 6
    (               shift and go to state 11

    Termo                          shift and go to state 12
    Exp                            shift and go to state 27
    Factor                         shift and go to state 7

state 12

    (14) Exp -> Termo .
    (15) Termo -> Termo . * Factor
    (16) Termo -> Termo . / Factor

    +               reduce using rule 14 (Exp -> Termo .)
    -               reduce using rule 14 (Exp -> Termo .)
    ROF             reduce using rule 14 (Exp -> Termo .)
    READ            reduce using rule 14 (Exp -> Termo .)
    WRITE           reduce using rule 14 (Exp -> Termo .)
    PRINT           reduce using rule 14 (Exp -> Termo .)
    id              reduce using rule 14 (Exp -> Termo .)
    START           reduce using rule 14 (Exp -> Termo .)
    END             reduce using rule 14 (Exp -> Termo .)
    IF              reduce using rule 14 (Exp -> Termo .)
    FOR             reduce using rule 14 (Exp -> Termo .)
    num             reduce using rule 14 (Exp -> Termo .)
    (               reduce using rule 14 (Exp -> Termo .)
    FI              reduce using rule 14 (Exp -> Termo .)
    ELSE            reduce using rule 14 (Exp -> Termo .)
    $end            reduce using rule 14 (Exp -> Termo .)
    ;               reduce using rule 14 (Exp -> Termo .)
    )               reduce using rule 14 (Exp -> Termo .)
    >               reduce using rule 14 (Exp -> Termo .)
    <               reduce using rule 14 (Exp -> Termo .)
    =               reduce using rule 14 (Exp -> Termo .)
    *               shift and go to state 29
    /               shift and go to state 30


state 13

    (10) Comando -> Condition .

    ROF             reduce using rule 10 (Comando -> Condition .)
    READ            reduce using rule 10 (Comando -> Condition .)
    WRITE           reduce using rule 10 (Comando -> Condition .)
    PRINT           reduce using rule 10 (Comando -> Condition .)
    id              reduce using rule 10 (Comando -> Condition .)
    START           reduce using rule 10 (Comando -> Condition .)
    END             reduce using rule 10 (Comando -> Condition .)
    IF              reduce using rule 10 (Comando -> Condition .)
    FOR             reduce using rule 10 (Comando -> Condition .)
    num             reduce using rule 10 (Comando -> Condition .)
    (               reduce using rule 10 (Comando -> Condition .)
    FI              reduce using rule 10 (Comando -> Condition .)
    $end            reduce using rule 10 (Comando -> Condition .)
    ELSE            reduce using rule 10 (Comando -> Condition .)


state 14

    (25) End -> END .

    ROF             reduce using rule 25 (End -> END .)
    READ            reduce using rule 25 (End -> END .)
    WRITE           reduce using rule 25 (End -> END .)
    PRINT           reduce using rule 25 (End -> END .)
    id              reduce using rule 25 (End -> END .)
    START           reduce using rule 25 (End -> END .)
    END             reduce using rule 25 (End -> END .)
    IF              reduce using rule 25 (End -> END .)
    FOR             reduce using rule 25 (End -> END .)
    num             reduce using rule 25 (End -> END .)
    (               reduce using rule 25 (End -> END .)
    FI              reduce using rule 25 (End -> END .)
    ELSE            reduce using rule 25 (End -> END .)
    $end            reduce using rule 25 (End -> END .)


state 15

    (32) Cicle -> FOR . ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> FOR . ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> FOR . ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> FOR . ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> FOR . ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF

    (               shift and go to state 31


state 16

    (0) S' -> Comandos .
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 32
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 17

    (22) Writing -> WRITE . id

    id              shift and go to state 33


state 18

    (24) Start -> START .

    ELSE            reduce using rule 24 (Start -> START .)
    READ            reduce using rule 24 (Start -> START .)
    WRITE           reduce using rule 24 (Start -> START .)
    PRINT           reduce using rule 24 (Start -> START .)
    id              reduce using rule 24 (Start -> START .)
    START           reduce using rule 24 (Start -> START .)
    END             reduce using rule 24 (Start -> START .)
    IF              reduce using rule 24 (Start -> START .)
    FOR             reduce using rule 24 (Start -> START .)
    num             reduce using rule 24 (Start -> START .)
    (               reduce using rule 24 (Start -> START .)
    FI              reduce using rule 24 (Start -> START .)
    $end            reduce using rule 24 (Start -> START .)
    ROF             reduce using rule 24 (Start -> START .)


state 19

    (5) Comando -> Printing .

    ROF             reduce using rule 5 (Comando -> Printing .)
    READ            reduce using rule 5 (Comando -> Printing .)
    WRITE           reduce using rule 5 (Comando -> Printing .)
    PRINT           reduce using rule 5 (Comando -> Printing .)
    id              reduce using rule 5 (Comando -> Printing .)
    START           reduce using rule 5 (Comando -> Printing .)
    END             reduce using rule 5 (Comando -> Printing .)
    IF              reduce using rule 5 (Comando -> Printing .)
    FOR             reduce using rule 5 (Comando -> Printing .)
    num             reduce using rule 5 (Comando -> Printing .)
    (               reduce using rule 5 (Comando -> Printing .)
    FI              reduce using rule 5 (Comando -> Printing .)
    $end            reduce using rule 5 (Comando -> Printing .)
    ELSE            reduce using rule 5 (Comando -> Printing .)


state 20

    (7) Comando -> Exp .
    (12) Exp -> Exp . + Termo
    (13) Exp -> Exp . - Termo

    ROF             reduce using rule 7 (Comando -> Exp .)
    READ            reduce using rule 7 (Comando -> Exp .)
    WRITE           reduce using rule 7 (Comando -> Exp .)
    PRINT           reduce using rule 7 (Comando -> Exp .)
    id              reduce using rule 7 (Comando -> Exp .)
    START           reduce using rule 7 (Comando -> Exp .)
    END             reduce using rule 7 (Comando -> Exp .)
    IF              reduce using rule 7 (Comando -> Exp .)
    FOR             reduce using rule 7 (Comando -> Exp .)
    num             reduce using rule 7 (Comando -> Exp .)
    (               reduce using rule 7 (Comando -> Exp .)
    FI              reduce using rule 7 (Comando -> Exp .)
    $end            reduce using rule 7 (Comando -> Exp .)
    ELSE            reduce using rule 7 (Comando -> Exp .)
    +               shift and go to state 34
    -               shift and go to state 35


state 21

    (11) Comando -> Cicle .

    ROF             reduce using rule 11 (Comando -> Cicle .)
    READ            reduce using rule 11 (Comando -> Cicle .)
    WRITE           reduce using rule 11 (Comando -> Cicle .)
    PRINT           reduce using rule 11 (Comando -> Cicle .)
    id              reduce using rule 11 (Comando -> Cicle .)
    START           reduce using rule 11 (Comando -> Cicle .)
    END             reduce using rule 11 (Comando -> Cicle .)
    IF              reduce using rule 11 (Comando -> Cicle .)
    FOR             reduce using rule 11 (Comando -> Cicle .)
    num             reduce using rule 11 (Comando -> Cicle .)
    (               reduce using rule 11 (Comando -> Cicle .)
    FI              reduce using rule 11 (Comando -> Cicle .)
    $end            reduce using rule 11 (Comando -> Cicle .)
    ELSE            reduce using rule 11 (Comando -> Cicle .)


state 22

    (27) Condition -> IF . ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> IF . ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> IF . ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> IF . ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> IF . ( Exp = = Termo ) THEN Comandos ELSE Comandos FI

    (               shift and go to state 36


state 23

    (6) Comando -> Atrib .

    ROF             reduce using rule 6 (Comando -> Atrib .)
    READ            reduce using rule 6 (Comando -> Atrib .)
    WRITE           reduce using rule 6 (Comando -> Atrib .)
    PRINT           reduce using rule 6 (Comando -> Atrib .)
    id              reduce using rule 6 (Comando -> Atrib .)
    START           reduce using rule 6 (Comando -> Atrib .)
    END             reduce using rule 6 (Comando -> Atrib .)
    IF              reduce using rule 6 (Comando -> Atrib .)
    FOR             reduce using rule 6 (Comando -> Atrib .)
    num             reduce using rule 6 (Comando -> Atrib .)
    (               reduce using rule 6 (Comando -> Atrib .)
    FI              reduce using rule 6 (Comando -> Atrib .)
    $end            reduce using rule 6 (Comando -> Atrib .)
    ELSE            reduce using rule 6 (Comando -> Atrib .)


state 24

    (21) Reading -> READ id .

    ROF             reduce using rule 21 (Reading -> READ id .)
    READ            reduce using rule 21 (Reading -> READ id .)
    WRITE           reduce using rule 21 (Reading -> READ id .)
    PRINT           reduce using rule 21 (Reading -> READ id .)
    id              reduce using rule 21 (Reading -> READ id .)
    START           reduce using rule 21 (Reading -> READ id .)
    END             reduce using rule 21 (Reading -> READ id .)
    IF              reduce using rule 21 (Reading -> READ id .)
    FOR             reduce using rule 21 (Reading -> READ id .)
    num             reduce using rule 21 (Reading -> READ id .)
    (               reduce using rule 21 (Reading -> READ id .)
    ELSE            reduce using rule 21 (Reading -> READ id .)
    FI              reduce using rule 21 (Reading -> READ id .)
    $end            reduce using rule 21 (Reading -> READ id .)


state 25

    (23) Printing -> PRINT ( . frase )

    frase           shift and go to state 37


state 26

    (26) Atrib -> id = . Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    id              shift and go to state 28
    num             shift and go to state 6
    (               shift and go to state 11

    Termo                          shift and go to state 12
    Exp                            shift and go to state 38
    Factor                         shift and go to state 7

state 27

    (20) Factor -> ( Exp . )
    (12) Exp -> Exp . + Termo
    (13) Exp -> Exp . - Termo

    )               shift and go to state 39
    +               shift and go to state 34
    -               shift and go to state 35


state 28

    (18) Factor -> id .

    *               reduce using rule 18 (Factor -> id .)
    /               reduce using rule 18 (Factor -> id .)
    +               reduce using rule 18 (Factor -> id .)
    -               reduce using rule 18 (Factor -> id .)
    READ            reduce using rule 18 (Factor -> id .)
    WRITE           reduce using rule 18 (Factor -> id .)
    PRINT           reduce using rule 18 (Factor -> id .)
    id              reduce using rule 18 (Factor -> id .)
    START           reduce using rule 18 (Factor -> id .)
    END             reduce using rule 18 (Factor -> id .)
    IF              reduce using rule 18 (Factor -> id .)
    FOR             reduce using rule 18 (Factor -> id .)
    num             reduce using rule 18 (Factor -> id .)
    (               reduce using rule 18 (Factor -> id .)
    $end            reduce using rule 18 (Factor -> id .)
    ;               reduce using rule 18 (Factor -> id .)
    ELSE            reduce using rule 18 (Factor -> id .)
    )               reduce using rule 18 (Factor -> id .)
    FI              reduce using rule 18 (Factor -> id .)
    ROF             reduce using rule 18 (Factor -> id .)
    >               reduce using rule 18 (Factor -> id .)
    <               reduce using rule 18 (Factor -> id .)
    =               reduce using rule 18 (Factor -> id .)


state 29

    (15) Termo -> Termo * . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    id              shift and go to state 28
    num             shift and go to state 6
    (               shift and go to state 11

    Factor                         shift and go to state 40

state 30

    (16) Termo -> Termo / . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    id              shift and go to state 28
    num             shift and go to state 6
    (               shift and go to state 11

    Factor                         shift and go to state 41

state 31

    (32) Cicle -> FOR ( . Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> FOR ( . Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> FOR ( . Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> FOR ( . Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> FOR ( . Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (26) Atrib -> . id = Exp

    id              shift and go to state 43

    Atrib                          shift and go to state 42

state 32

    (1) Comandos -> Comandos Comando .

    FI              reduce using rule 1 (Comandos -> Comandos Comando .)
    READ            reduce using rule 1 (Comandos -> Comandos Comando .)
    WRITE           reduce using rule 1 (Comandos -> Comandos Comando .)
    PRINT           reduce using rule 1 (Comandos -> Comandos Comando .)
    id              reduce using rule 1 (Comandos -> Comandos Comando .)
    START           reduce using rule 1 (Comandos -> Comandos Comando .)
    END             reduce using rule 1 (Comandos -> Comandos Comando .)
    IF              reduce using rule 1 (Comandos -> Comandos Comando .)
    FOR             reduce using rule 1 (Comandos -> Comandos Comando .)
    num             reduce using rule 1 (Comandos -> Comandos Comando .)
    (               reduce using rule 1 (Comandos -> Comandos Comando .)
    $end            reduce using rule 1 (Comandos -> Comandos Comando .)
    ELSE            reduce using rule 1 (Comandos -> Comandos Comando .)
    ROF             reduce using rule 1 (Comandos -> Comandos Comando .)


state 33

    (22) Writing -> WRITE id .

    FI              reduce using rule 22 (Writing -> WRITE id .)
    READ            reduce using rule 22 (Writing -> WRITE id .)
    WRITE           reduce using rule 22 (Writing -> WRITE id .)
    PRINT           reduce using rule 22 (Writing -> WRITE id .)
    id              reduce using rule 22 (Writing -> WRITE id .)
    START           reduce using rule 22 (Writing -> WRITE id .)
    END             reduce using rule 22 (Writing -> WRITE id .)
    IF              reduce using rule 22 (Writing -> WRITE id .)
    FOR             reduce using rule 22 (Writing -> WRITE id .)
    num             reduce using rule 22 (Writing -> WRITE id .)
    (               reduce using rule 22 (Writing -> WRITE id .)
    ELSE            reduce using rule 22 (Writing -> WRITE id .)
    ROF             reduce using rule 22 (Writing -> WRITE id .)
    $end            reduce using rule 22 (Writing -> WRITE id .)


state 34

    (12) Exp -> Exp + . Termo
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    id              shift and go to state 28
    num             shift and go to state 6
    (               shift and go to state 11

    Termo                          shift and go to state 44
    Factor                         shift and go to state 7

state 35

    (13) Exp -> Exp - . Termo
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    id              shift and go to state 28
    num             shift and go to state 6
    (               shift and go to state 11

    Termo                          shift and go to state 45
    Factor                         shift and go to state 7

state 36

    (27) Condition -> IF ( . Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> IF ( . Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> IF ( . Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> IF ( . Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> IF ( . Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    id              shift and go to state 28
    num             shift and go to state 6
    (               shift and go to state 11

    Termo                          shift and go to state 12
    Exp                            shift and go to state 46
    Factor                         shift and go to state 7

state 37

    (23) Printing -> PRINT ( frase . )

    )               shift and go to state 47


state 38

    (26) Atrib -> id = Exp .
    (12) Exp -> Exp . + Termo
    (13) Exp -> Exp . - Termo

    FI              reduce using rule 26 (Atrib -> id = Exp .)
    READ            reduce using rule 26 (Atrib -> id = Exp .)
    WRITE           reduce using rule 26 (Atrib -> id = Exp .)
    PRINT           reduce using rule 26 (Atrib -> id = Exp .)
    id              reduce using rule 26 (Atrib -> id = Exp .)
    START           reduce using rule 26 (Atrib -> id = Exp .)
    END             reduce using rule 26 (Atrib -> id = Exp .)
    IF              reduce using rule 26 (Atrib -> id = Exp .)
    FOR             reduce using rule 26 (Atrib -> id = Exp .)
    num             reduce using rule 26 (Atrib -> id = Exp .)
    (               reduce using rule 26 (Atrib -> id = Exp .)
    ROF             reduce using rule 26 (Atrib -> id = Exp .)
    $end            reduce using rule 26 (Atrib -> id = Exp .)
    ELSE            reduce using rule 26 (Atrib -> id = Exp .)
    )               reduce using rule 26 (Atrib -> id = Exp .)
    ;               reduce using rule 26 (Atrib -> id = Exp .)
    +               shift and go to state 34
    -               shift and go to state 35


state 39

    (20) Factor -> ( Exp ) .

    *               reduce using rule 20 (Factor -> ( Exp ) .)
    /               reduce using rule 20 (Factor -> ( Exp ) .)
    +               reduce using rule 20 (Factor -> ( Exp ) .)
    -               reduce using rule 20 (Factor -> ( Exp ) .)
    READ            reduce using rule 20 (Factor -> ( Exp ) .)
    WRITE           reduce using rule 20 (Factor -> ( Exp ) .)
    PRINT           reduce using rule 20 (Factor -> ( Exp ) .)
    id              reduce using rule 20 (Factor -> ( Exp ) .)
    START           reduce using rule 20 (Factor -> ( Exp ) .)
    END             reduce using rule 20 (Factor -> ( Exp ) .)
    IF              reduce using rule 20 (Factor -> ( Exp ) .)
    FOR             reduce using rule 20 (Factor -> ( Exp ) .)
    num             reduce using rule 20 (Factor -> ( Exp ) .)
    (               reduce using rule 20 (Factor -> ( Exp ) .)
    $end            reduce using rule 20 (Factor -> ( Exp ) .)
    ;               reduce using rule 20 (Factor -> ( Exp ) .)
    ELSE            reduce using rule 20 (Factor -> ( Exp ) .)
    )               reduce using rule 20 (Factor -> ( Exp ) .)
    FI              reduce using rule 20 (Factor -> ( Exp ) .)
    ROF             reduce using rule 20 (Factor -> ( Exp ) .)
    >               reduce using rule 20 (Factor -> ( Exp ) .)
    <               reduce using rule 20 (Factor -> ( Exp ) .)
    =               reduce using rule 20 (Factor -> ( Exp ) .)


state 40

    (15) Termo -> Termo * Factor .

    *               reduce using rule 15 (Termo -> Termo * Factor .)
    /               reduce using rule 15 (Termo -> Termo * Factor .)
    +               reduce using rule 15 (Termo -> Termo * Factor .)
    -               reduce using rule 15 (Termo -> Termo * Factor .)
    ROF             reduce using rule 15 (Termo -> Termo * Factor .)
    READ            reduce using rule 15 (Termo -> Termo * Factor .)
    WRITE           reduce using rule 15 (Termo -> Termo * Factor .)
    PRINT           reduce using rule 15 (Termo -> Termo * Factor .)
    id              reduce using rule 15 (Termo -> Termo * Factor .)
    START           reduce using rule 15 (Termo -> Termo * Factor .)
    END             reduce using rule 15 (Termo -> Termo * Factor .)
    IF              reduce using rule 15 (Termo -> Termo * Factor .)
    FOR             reduce using rule 15 (Termo -> Termo * Factor .)
    num             reduce using rule 15 (Termo -> Termo * Factor .)
    (               reduce using rule 15 (Termo -> Termo * Factor .)
    FI              reduce using rule 15 (Termo -> Termo * Factor .)
    ELSE            reduce using rule 15 (Termo -> Termo * Factor .)
    )               reduce using rule 15 (Termo -> Termo * Factor .)
    $end            reduce using rule 15 (Termo -> Termo * Factor .)
    ;               reduce using rule 15 (Termo -> Termo * Factor .)
    >               reduce using rule 15 (Termo -> Termo * Factor .)
    <               reduce using rule 15 (Termo -> Termo * Factor .)
    =               reduce using rule 15 (Termo -> Termo * Factor .)


state 41

    (16) Termo -> Termo / Factor .

    *               reduce using rule 16 (Termo -> Termo / Factor .)
    /               reduce using rule 16 (Termo -> Termo / Factor .)
    +               reduce using rule 16 (Termo -> Termo / Factor .)
    -               reduce using rule 16 (Termo -> Termo / Factor .)
    ROF             reduce using rule 16 (Termo -> Termo / Factor .)
    READ            reduce using rule 16 (Termo -> Termo / Factor .)
    WRITE           reduce using rule 16 (Termo -> Termo / Factor .)
    PRINT           reduce using rule 16 (Termo -> Termo / Factor .)
    id              reduce using rule 16 (Termo -> Termo / Factor .)
    START           reduce using rule 16 (Termo -> Termo / Factor .)
    END             reduce using rule 16 (Termo -> Termo / Factor .)
    IF              reduce using rule 16 (Termo -> Termo / Factor .)
    FOR             reduce using rule 16 (Termo -> Termo / Factor .)
    num             reduce using rule 16 (Termo -> Termo / Factor .)
    (               reduce using rule 16 (Termo -> Termo / Factor .)
    FI              reduce using rule 16 (Termo -> Termo / Factor .)
    ELSE            reduce using rule 16 (Termo -> Termo / Factor .)
    )               reduce using rule 16 (Termo -> Termo / Factor .)
    $end            reduce using rule 16 (Termo -> Termo / Factor .)
    ;               reduce using rule 16 (Termo -> Termo / Factor .)
    >               reduce using rule 16 (Termo -> Termo / Factor .)
    <               reduce using rule 16 (Termo -> Termo / Factor .)
    =               reduce using rule 16 (Termo -> Termo / Factor .)


state 42

    (32) Cicle -> FOR ( Atrib . ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> FOR ( Atrib . ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> FOR ( Atrib . ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> FOR ( Atrib . ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> FOR ( Atrib . ; Factor = = Factor ; Atrib ) Comandos ROF

    ;               shift and go to state 48


state 43

    (26) Atrib -> id . = Exp

    =               shift and go to state 26


state 44

    (12) Exp -> Exp + Termo .
    (15) Termo -> Termo . * Factor
    (16) Termo -> Termo . / Factor

    +               reduce using rule 12 (Exp -> Exp + Termo .)
    -               reduce using rule 12 (Exp -> Exp + Termo .)
    ROF             reduce using rule 12 (Exp -> Exp + Termo .)
    READ            reduce using rule 12 (Exp -> Exp + Termo .)
    WRITE           reduce using rule 12 (Exp -> Exp + Termo .)
    PRINT           reduce using rule 12 (Exp -> Exp + Termo .)
    id              reduce using rule 12 (Exp -> Exp + Termo .)
    START           reduce using rule 12 (Exp -> Exp + Termo .)
    END             reduce using rule 12 (Exp -> Exp + Termo .)
    IF              reduce using rule 12 (Exp -> Exp + Termo .)
    FOR             reduce using rule 12 (Exp -> Exp + Termo .)
    num             reduce using rule 12 (Exp -> Exp + Termo .)
    (               reduce using rule 12 (Exp -> Exp + Termo .)
    FI              reduce using rule 12 (Exp -> Exp + Termo .)
    ELSE            reduce using rule 12 (Exp -> Exp + Termo .)
    $end            reduce using rule 12 (Exp -> Exp + Termo .)
    ;               reduce using rule 12 (Exp -> Exp + Termo .)
    )               reduce using rule 12 (Exp -> Exp + Termo .)
    >               reduce using rule 12 (Exp -> Exp + Termo .)
    <               reduce using rule 12 (Exp -> Exp + Termo .)
    =               reduce using rule 12 (Exp -> Exp + Termo .)
    *               shift and go to state 29
    /               shift and go to state 30


state 45

    (13) Exp -> Exp - Termo .
    (15) Termo -> Termo . * Factor
    (16) Termo -> Termo . / Factor

    +               reduce using rule 13 (Exp -> Exp - Termo .)
    -               reduce using rule 13 (Exp -> Exp - Termo .)
    ROF             reduce using rule 13 (Exp -> Exp - Termo .)
    READ            reduce using rule 13 (Exp -> Exp - Termo .)
    WRITE           reduce using rule 13 (Exp -> Exp - Termo .)
    PRINT           reduce using rule 13 (Exp -> Exp - Termo .)
    id              reduce using rule 13 (Exp -> Exp - Termo .)
    START           reduce using rule 13 (Exp -> Exp - Termo .)
    END             reduce using rule 13 (Exp -> Exp - Termo .)
    IF              reduce using rule 13 (Exp -> Exp - Termo .)
    FOR             reduce using rule 13 (Exp -> Exp - Termo .)
    num             reduce using rule 13 (Exp -> Exp - Termo .)
    (               reduce using rule 13 (Exp -> Exp - Termo .)
    FI              reduce using rule 13 (Exp -> Exp - Termo .)
    ELSE            reduce using rule 13 (Exp -> Exp - Termo .)
    $end            reduce using rule 13 (Exp -> Exp - Termo .)
    ;               reduce using rule 13 (Exp -> Exp - Termo .)
    )               reduce using rule 13 (Exp -> Exp - Termo .)
    >               reduce using rule 13 (Exp -> Exp - Termo .)
    <               reduce using rule 13 (Exp -> Exp - Termo .)
    =               reduce using rule 13 (Exp -> Exp - Termo .)
    *               shift and go to state 29
    /               shift and go to state 30


state 46

    (27) Condition -> IF ( Exp . > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> IF ( Exp . < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> IF ( Exp . > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> IF ( Exp . < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> IF ( Exp . = = Termo ) THEN Comandos ELSE Comandos FI
    (12) Exp -> Exp . + Termo
    (13) Exp -> Exp . - Termo

    >               shift and go to state 51
    <               shift and go to state 50
    =               shift and go to state 49
    +               shift and go to state 34
    -               shift and go to state 35


state 47

    (23) Printing -> PRINT ( frase ) .

    ELSE            reduce using rule 23 (Printing -> PRINT ( frase ) .)
    READ            reduce using rule 23 (Printing -> PRINT ( frase ) .)
    WRITE           reduce using rule 23 (Printing -> PRINT ( frase ) .)
    PRINT           reduce using rule 23 (Printing -> PRINT ( frase ) .)
    id              reduce using rule 23 (Printing -> PRINT ( frase ) .)
    START           reduce using rule 23 (Printing -> PRINT ( frase ) .)
    END             reduce using rule 23 (Printing -> PRINT ( frase ) .)
    IF              reduce using rule 23 (Printing -> PRINT ( frase ) .)
    FOR             reduce using rule 23 (Printing -> PRINT ( frase ) .)
    num             reduce using rule 23 (Printing -> PRINT ( frase ) .)
    (               reduce using rule 23 (Printing -> PRINT ( frase ) .)
    FI              reduce using rule 23 (Printing -> PRINT ( frase ) .)
    ROF             reduce using rule 23 (Printing -> PRINT ( frase ) .)
    $end            reduce using rule 23 (Printing -> PRINT ( frase ) .)


state 48

    (32) Cicle -> FOR ( Atrib ; . Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> FOR ( Atrib ; . Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> FOR ( Atrib ; . Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> FOR ( Atrib ; . Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> FOR ( Atrib ; . Factor = = Factor ; Atrib ) Comandos ROF
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    id              shift and go to state 28
    num             shift and go to state 6
    (               shift and go to state 11

    Factor                         shift and go to state 52

state 49

    (31) Condition -> IF ( Exp = . = Termo ) THEN Comandos ELSE Comandos FI

    =               shift and go to state 53


state 50

    (28) Condition -> IF ( Exp < . Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> IF ( Exp < . = Termo ) THEN Comandos ELSE Comandos FI
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    =               shift and go to state 55
    id              shift and go to state 28
    num             shift and go to state 6
    (               shift and go to state 11

    Termo                          shift and go to state 54
    Factor                         shift and go to state 7

state 51

    (27) Condition -> IF ( Exp > . Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> IF ( Exp > . = Termo ) THEN Comandos ELSE Comandos FI
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    =               shift and go to state 57
    id              shift and go to state 28
    num             shift and go to state 6
    (               shift and go to state 11

    Termo                          shift and go to state 56
    Factor                         shift and go to state 7

state 52

    (32) Cicle -> FOR ( Atrib ; Factor . < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> FOR ( Atrib ; Factor . > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> FOR ( Atrib ; Factor . < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> FOR ( Atrib ; Factor . > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> FOR ( Atrib ; Factor . = = Factor ; Atrib ) Comandos ROF

    <               shift and go to state 59
    >               shift and go to state 60
    =               shift and go to state 58


state 53

    (31) Condition -> IF ( Exp = = . Termo ) THEN Comandos ELSE Comandos FI
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    id              shift and go to state 28
    num             shift and go to state 6
    (               shift and go to state 11

    Termo                          shift and go to state 61
    Factor                         shift and go to state 7

state 54

    (28) Condition -> IF ( Exp < Termo . ) THEN Comandos ELSE Comandos FI
    (15) Termo -> Termo . * Factor
    (16) Termo -> Termo . / Factor

    )               shift and go to state 62
    *               shift and go to state 29
    /               shift and go to state 30


state 55

    (30) Condition -> IF ( Exp < = . Termo ) THEN Comandos ELSE Comandos FI
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    id              shift and go to state 28
    num             shift and go to state 6
    (               shift and go to state 11

    Termo                          shift and go to state 63
    Factor                         shift and go to state 7

state 56

    (27) Condition -> IF ( Exp > Termo . ) THEN Comandos ELSE Comandos FI
    (15) Termo -> Termo . * Factor
    (16) Termo -> Termo . / Factor

    )               shift and go to state 64
    *               shift and go to state 29
    /               shift and go to state 30


state 57

    (29) Condition -> IF ( Exp > = . Termo ) THEN Comandos ELSE Comandos FI
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    id              shift and go to state 28
    num             shift and go to state 6
    (               shift and go to state 11

    Termo                          shift and go to state 65
    Factor                         shift and go to state 7

state 58

    (36) Cicle -> FOR ( Atrib ; Factor = . = Factor ; Atrib ) Comandos ROF

    =               shift and go to state 66


state 59

    (32) Cicle -> FOR ( Atrib ; Factor < . Factor ; Atrib ) Comandos ROF
    (34) Cicle -> FOR ( Atrib ; Factor < . = Factor ; Atrib ) Comandos ROF
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    =               shift and go to state 68
    id              shift and go to state 28
    num             shift and go to state 6
    (               shift and go to state 11

    Factor                         shift and go to state 67

state 60

    (33) Cicle -> FOR ( Atrib ; Factor > . Factor ; Atrib ) Comandos ROF
    (35) Cicle -> FOR ( Atrib ; Factor > . = Factor ; Atrib ) Comandos ROF
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    =               shift and go to state 70
    id              shift and go to state 28
    num             shift and go to state 6
    (               shift and go to state 11

    Factor                         shift and go to state 69

state 61

    (31) Condition -> IF ( Exp = = Termo . ) THEN Comandos ELSE Comandos FI
    (15) Termo -> Termo . * Factor
    (16) Termo -> Termo . / Factor

    )               shift and go to state 71
    *               shift and go to state 29
    /               shift and go to state 30


state 62

    (28) Condition -> IF ( Exp < Termo ) . THEN Comandos ELSE Comandos FI

    THEN            shift and go to state 72


state 63

    (30) Condition -> IF ( Exp < = Termo . ) THEN Comandos ELSE Comandos FI
    (15) Termo -> Termo . * Factor
    (16) Termo -> Termo . / Factor

    )               shift and go to state 73
    *               shift and go to state 29
    /               shift and go to state 30


state 64

    (27) Condition -> IF ( Exp > Termo ) . THEN Comandos ELSE Comandos FI

    THEN            shift and go to state 74


state 65

    (29) Condition -> IF ( Exp > = Termo . ) THEN Comandos ELSE Comandos FI
    (15) Termo -> Termo . * Factor
    (16) Termo -> Termo . / Factor

    )               shift and go to state 75
    *               shift and go to state 29
    /               shift and go to state 30


state 66

    (36) Cicle -> FOR ( Atrib ; Factor = = . Factor ; Atrib ) Comandos ROF
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    id              shift and go to state 28
    num             shift and go to state 6
    (               shift and go to state 11

    Factor                         shift and go to state 76

state 67

    (32) Cicle -> FOR ( Atrib ; Factor < Factor . ; Atrib ) Comandos ROF

    ;               shift and go to state 77


state 68

    (34) Cicle -> FOR ( Atrib ; Factor < = . Factor ; Atrib ) Comandos ROF
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    id              shift and go to state 28
    num             shift and go to state 6
    (               shift and go to state 11

    Factor                         shift and go to state 78

state 69

    (33) Cicle -> FOR ( Atrib ; Factor > Factor . ; Atrib ) Comandos ROF

    ;               shift and go to state 79


state 70

    (35) Cicle -> FOR ( Atrib ; Factor > = . Factor ; Atrib ) Comandos ROF
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    id              shift and go to state 28
    num             shift and go to state 6
    (               shift and go to state 11

    Factor                         shift and go to state 80

state 71

    (31) Condition -> IF ( Exp = = Termo ) . THEN Comandos ELSE Comandos FI

    THEN            shift and go to state 81


state 72

    (28) Condition -> IF ( Exp < Termo ) THEN . Comandos ELSE Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Comandos                       shift and go to state 82
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 2
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 73

    (30) Condition -> IF ( Exp < = Termo ) . THEN Comandos ELSE Comandos FI

    THEN            shift and go to state 83


state 74

    (27) Condition -> IF ( Exp > Termo ) THEN . Comandos ELSE Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Comandos                       shift and go to state 84
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 2
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 75

    (29) Condition -> IF ( Exp > = Termo ) . THEN Comandos ELSE Comandos FI

    THEN            shift and go to state 85


state 76

    (36) Cicle -> FOR ( Atrib ; Factor = = Factor . ; Atrib ) Comandos ROF

    ;               shift and go to state 86


state 77

    (32) Cicle -> FOR ( Atrib ; Factor < Factor ; . Atrib ) Comandos ROF
    (26) Atrib -> . id = Exp

    id              shift and go to state 43

    Atrib                          shift and go to state 87

state 78

    (34) Cicle -> FOR ( Atrib ; Factor < = Factor . ; Atrib ) Comandos ROF

    ;               shift and go to state 88


state 79

    (33) Cicle -> FOR ( Atrib ; Factor > Factor ; . Atrib ) Comandos ROF
    (26) Atrib -> . id = Exp

    id              shift and go to state 43

    Atrib                          shift and go to state 89

state 80

    (35) Cicle -> FOR ( Atrib ; Factor > = Factor . ; Atrib ) Comandos ROF

    ;               shift and go to state 90


state 81

    (31) Condition -> IF ( Exp = = Termo ) THEN . Comandos ELSE Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Comandos                       shift and go to state 91
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 2
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 82

    (28) Condition -> IF ( Exp < Termo ) THEN Comandos . ELSE Comandos FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    ELSE            shift and go to state 92
    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 32
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 83

    (30) Condition -> IF ( Exp < = Termo ) THEN . Comandos ELSE Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Comandos                       shift and go to state 93
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 2
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 84

    (27) Condition -> IF ( Exp > Termo ) THEN Comandos . ELSE Comandos FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    ELSE            shift and go to state 94
    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 32
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 85

    (29) Condition -> IF ( Exp > = Termo ) THEN . Comandos ELSE Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Comandos                       shift and go to state 95
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 2
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 86

    (36) Cicle -> FOR ( Atrib ; Factor = = Factor ; . Atrib ) Comandos ROF
    (26) Atrib -> . id = Exp

    id              shift and go to state 43

    Atrib                          shift and go to state 96

state 87

    (32) Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib . ) Comandos ROF

    )               shift and go to state 97


state 88

    (34) Cicle -> FOR ( Atrib ; Factor < = Factor ; . Atrib ) Comandos ROF
    (26) Atrib -> . id = Exp

    id              shift and go to state 43

    Atrib                          shift and go to state 98

state 89

    (33) Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib . ) Comandos ROF

    )               shift and go to state 99


state 90

    (35) Cicle -> FOR ( Atrib ; Factor > = Factor ; . Atrib ) Comandos ROF
    (26) Atrib -> . id = Exp

    id              shift and go to state 43

    Atrib                          shift and go to state 100

state 91

    (31) Condition -> IF ( Exp = = Termo ) THEN Comandos . ELSE Comandos FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    ELSE            shift and go to state 101
    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 32
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 92

    (28) Condition -> IF ( Exp < Termo ) THEN Comandos ELSE . Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Comandos                       shift and go to state 102
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 2
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 93

    (30) Condition -> IF ( Exp < = Termo ) THEN Comandos . ELSE Comandos FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    ELSE            shift and go to state 103
    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 32
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 94

    (27) Condition -> IF ( Exp > Termo ) THEN Comandos ELSE . Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Comandos                       shift and go to state 104
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 2
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 95

    (29) Condition -> IF ( Exp > = Termo ) THEN Comandos . ELSE Comandos FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    ELSE            shift and go to state 105
    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 32
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 96

    (36) Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib . ) Comandos ROF

    )               shift and go to state 106


state 97

    (32) Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) . Comandos ROF
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Comandos                       shift and go to state 107
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 2
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 98

    (34) Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib . ) Comandos ROF

    )               shift and go to state 108


state 99

    (33) Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) . Comandos ROF
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Comandos                       shift and go to state 109
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 2
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 100

    (35) Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib . ) Comandos ROF

    )               shift and go to state 110


state 101

    (31) Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE . Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Comandos                       shift and go to state 111
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 2
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 102

    (28) Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos . FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    FI              shift and go to state 112
    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 32
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 103

    (30) Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE . Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Comandos                       shift and go to state 113
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 2
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 104

    (27) Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos . FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    FI              shift and go to state 114
    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 32
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 105

    (29) Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE . Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Comandos                       shift and go to state 115
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 2
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 106

    (36) Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) . Comandos ROF
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Comandos                       shift and go to state 116
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 2
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 107

    (32) Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos . ROF
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    ROF             shift and go to state 117
    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 32
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 108

    (34) Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) . Comandos ROF
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Comandos                       shift and go to state 118
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 2
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 109

    (33) Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos . ROF
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    ROF             shift and go to state 119
    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 32
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 110

    (35) Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) . Comandos ROF
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Comandos                       shift and go to state 120
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 2
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 111

    (31) Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos . FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    FI              shift and go to state 121
    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 32
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 112

    (28) Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .

    ELSE            reduce using rule 28 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    READ            reduce using rule 28 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    WRITE           reduce using rule 28 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    PRINT           reduce using rule 28 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    id              reduce using rule 28 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    START           reduce using rule 28 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    END             reduce using rule 28 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    IF              reduce using rule 28 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    FOR             reduce using rule 28 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    num             reduce using rule 28 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    (               reduce using rule 28 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    ROF             reduce using rule 28 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    FI              reduce using rule 28 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    $end            reduce using rule 28 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)


state 113

    (30) Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos . FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    FI              shift and go to state 122
    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 32
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 114

    (27) Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .

    ELSE            reduce using rule 27 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    READ            reduce using rule 27 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    WRITE           reduce using rule 27 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    PRINT           reduce using rule 27 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    id              reduce using rule 27 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    START           reduce using rule 27 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    END             reduce using rule 27 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    IF              reduce using rule 27 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    FOR             reduce using rule 27 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    num             reduce using rule 27 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    (               reduce using rule 27 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    ROF             reduce using rule 27 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    FI              reduce using rule 27 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    $end            reduce using rule 27 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)


state 115

    (29) Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos . FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    FI              shift and go to state 123
    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 32
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 116

    (36) Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos . ROF
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    ROF             shift and go to state 124
    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 32
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 117

    (32) Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .

    FI              reduce using rule 32 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    READ            reduce using rule 32 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    WRITE           reduce using rule 32 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    PRINT           reduce using rule 32 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    id              reduce using rule 32 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    START           reduce using rule 32 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    END             reduce using rule 32 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    IF              reduce using rule 32 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    FOR             reduce using rule 32 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    num             reduce using rule 32 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    (               reduce using rule 32 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    ELSE            reduce using rule 32 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    ROF             reduce using rule 32 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    $end            reduce using rule 32 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)


state 118

    (34) Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos . ROF
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    ROF             shift and go to state 125
    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 32
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 119

    (33) Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .

    FI              reduce using rule 33 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    READ            reduce using rule 33 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    WRITE           reduce using rule 33 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    PRINT           reduce using rule 33 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    id              reduce using rule 33 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    START           reduce using rule 33 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    END             reduce using rule 33 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    IF              reduce using rule 33 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    FOR             reduce using rule 33 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    num             reduce using rule 33 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    (               reduce using rule 33 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    ELSE            reduce using rule 33 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    ROF             reduce using rule 33 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    $end            reduce using rule 33 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)


state 120

    (35) Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos . ROF
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Reading
    (4) Comando -> . Writing
    (5) Comando -> . Printing
    (6) Comando -> . Atrib
    (7) Comando -> . Exp
    (8) Comando -> . Start
    (9) Comando -> . End
    (10) Comando -> . Condition
    (11) Comando -> . Cicle
    (21) Reading -> . READ id
    (22) Writing -> . WRITE id
    (23) Printing -> . PRINT ( frase )
    (26) Atrib -> . id = Exp
    (12) Exp -> . Exp + Termo
    (13) Exp -> . Exp - Termo
    (14) Exp -> . Termo
    (24) Start -> . START
    (25) End -> . END
    (27) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (28) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (29) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (30) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (32) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (33) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (34) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (35) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (36) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (15) Termo -> . Termo * Factor
    (16) Termo -> . Termo / Factor
    (17) Termo -> . Factor
    (18) Factor -> . id
    (19) Factor -> . num
    (20) Factor -> . ( Exp )

    ROF             shift and go to state 126
    READ            shift and go to state 3
    WRITE           shift and go to state 17
    PRINT           shift and go to state 8
    id              shift and go to state 10
    START           shift and go to state 18
    END             shift and go to state 14
    IF              shift and go to state 22
    FOR             shift and go to state 15
    num             shift and go to state 6
    (               shift and go to state 11

    Atrib                          shift and go to state 23
    End                            shift and go to state 1
    Exp                            shift and go to state 20
    Writing                        shift and go to state 4
    Start                          shift and go to state 5
    Printing                       shift and go to state 19
    Comando                        shift and go to state 32
    Factor                         shift and go to state 7
    Termo                          shift and go to state 12
    Reading                        shift and go to state 9
    Cicle                          shift and go to state 21
    Condition                      shift and go to state 13

state 121

    (31) Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .

    ELSE            reduce using rule 31 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    READ            reduce using rule 31 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    WRITE           reduce using rule 31 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    PRINT           reduce using rule 31 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    id              reduce using rule 31 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    START           reduce using rule 31 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    END             reduce using rule 31 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    IF              reduce using rule 31 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    FOR             reduce using rule 31 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    num             reduce using rule 31 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    (               reduce using rule 31 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    ROF             reduce using rule 31 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    FI              reduce using rule 31 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    $end            reduce using rule 31 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)


state 122

    (30) Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .

    ELSE            reduce using rule 30 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    READ            reduce using rule 30 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    WRITE           reduce using rule 30 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    PRINT           reduce using rule 30 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    id              reduce using rule 30 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    START           reduce using rule 30 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    END             reduce using rule 30 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    IF              reduce using rule 30 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    FOR             reduce using rule 30 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    num             reduce using rule 30 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    (               reduce using rule 30 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    ROF             reduce using rule 30 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    FI              reduce using rule 30 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    $end            reduce using rule 30 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)


state 123

    (29) Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .

    ELSE            reduce using rule 29 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    READ            reduce using rule 29 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    WRITE           reduce using rule 29 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    PRINT           reduce using rule 29 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    id              reduce using rule 29 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    START           reduce using rule 29 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    END             reduce using rule 29 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    IF              reduce using rule 29 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    FOR             reduce using rule 29 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    num             reduce using rule 29 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    (               reduce using rule 29 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    ROF             reduce using rule 29 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    FI              reduce using rule 29 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    $end            reduce using rule 29 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)


state 124

    (36) Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .

    FI              reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    READ            reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    WRITE           reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    PRINT           reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    id              reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    START           reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    END             reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    IF              reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    FOR             reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    num             reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    (               reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    ELSE            reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    ROF             reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    $end            reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)


state 125

    (34) Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .

    FI              reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    READ            reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    WRITE           reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    PRINT           reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    id              reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    START           reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    END             reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    IF              reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    FOR             reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    num             reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    (               reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    ELSE            reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    ROF             reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    $end            reduce using rule 34 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)


state 126

    (35) Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .

    FI              reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    READ            reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    WRITE           reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    PRINT           reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    id              reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    START           reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    END             reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    IF              reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    FOR             reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    num             reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    (               reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    ELSE            reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    ROF             reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    $end            reduce using rule 35 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)

