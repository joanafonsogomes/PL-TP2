Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Comandos
Rule 1     Comandos -> Comandos Comando
Rule 2     Comandos -> Comando
Rule 3     Comando -> Printing
Rule 4     Comando -> Reading
Rule 5     Comando -> Writing
Rule 6     Comando -> Start
Rule 7     Comando -> Exp
Rule 8     Comando -> Atrib
Rule 9     Comando -> Condition
Rule 10    Comando -> Cicle
Rule 11    Comando -> End
Rule 12    Printing -> PRINT frase
Rule 13    Exp -> Exp + Termo
Rule 14    Exp -> Exp - Termo
Rule 15    Exp -> Termo
Rule 16    Termo -> Termo * Factor
Rule 17    Termo -> Termo / Factor
Rule 18    Termo -> Factor
Rule 19    Factor -> id
Rule 20    Factor -> num
Rule 21    Factor -> ( Exp )
Rule 22    Factor -> Array
Rule 23    Factor -> Matriz
Rule 24    Reading -> READ id
Rule 25    Writing -> WRITE id
Rule 26    Writing -> WRITE id [ num ]
Rule 27    Start -> START
Rule 28    End -> END
Rule 29    Atrib -> id = Exp
Rule 30    Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
Rule 31    Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
Rule 32    Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
Rule 33    Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
Rule 34    Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
Rule 35    Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
Rule 36    Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
Rule 37    Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
Rule 38    Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
Rule 39    Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
Rule 40    Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
Rule 41    Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
Rule 42    Array -> id [ num ]
Rule 43    Atrib -> id [ num ] = num
Rule 44    Matriz -> id [ num ] [ num ]
Rule 45    Atrib -> id [ num ] [ num ] = num

Terminals, with rules where they appear

!                    : 35 41
(                    : 21 30 31 32 33 34 35 36 37 38 39 40 41
)                    : 21 30 31 32 33 34 35 36 37 38 39 40 41
*                    : 16
+                    : 13
-                    : 14
/                    : 17
;                    : 36 36 37 37 38 38 39 39 40 40 41 41
<                    : 31 33 36 38
=                    : 29 32 33 34 34 35 38 39 40 40 41 43 45
>                    : 30 32 37 39
ELSE                 : 30 31 32 33 34 35
END                  : 28
FI                   : 30 31 32 33 34 35
FOR                  : 36 37 38 39 40 41
IF                   : 30 31 32 33 34 35
PRINT                : 12
READ                 : 24
ROF                  : 36 37 38 39 40 41
START                : 27
THEN                 : 30 31 32 33 34 35
WRITE                : 25 26
[                    : 26 42 43 44 44 45 45
]                    : 26 42 43 44 44 45 45
error                : 
frase                : 12
id                   : 19 24 25 26 29 42 43 44 45
num                  : 20 26 42 43 43 44 44 45 45 45

Nonterminals, with rules where they appear

Array                : 22
Atrib                : 8 36 36 37 37 38 38 39 39 40 40 41 41
Cicle                : 10
Comando              : 1 2
Comandos             : 1 30 30 31 31 32 32 33 33 34 34 35 35 36 37 38 39 40 41 0
Condition            : 9
End                  : 11
Exp                  : 7 13 14 21 29 30 31 32 33 34 35
Factor               : 16 17 18 36 36 37 37 38 38 39 39 40 40 41 41
Matriz               : 23
Printing             : 3
Reading              : 4
Start                : 6
Termo                : 13 14 15 16 17 30 31 32 33 34 35
Writing              : 5

Parsing method: LALR

state 0

    (0) S' -> . Comandos
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 17
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 1

    (11) Comando -> End .

    ROF             reduce using rule 11 (Comando -> End .)
    PRINT           reduce using rule 11 (Comando -> End .)
    READ            reduce using rule 11 (Comando -> End .)
    WRITE           reduce using rule 11 (Comando -> End .)
    START           reduce using rule 11 (Comando -> End .)
    id              reduce using rule 11 (Comando -> End .)
    IF              reduce using rule 11 (Comando -> End .)
    FOR             reduce using rule 11 (Comando -> End .)
    END             reduce using rule 11 (Comando -> End .)
    num             reduce using rule 11 (Comando -> End .)
    (               reduce using rule 11 (Comando -> End .)
    FI              reduce using rule 11 (Comando -> End .)
    $end            reduce using rule 11 (Comando -> End .)
    ELSE            reduce using rule 11 (Comando -> End .)


state 2

    (2) Comandos -> Comando .

    FI              reduce using rule 2 (Comandos -> Comando .)
    PRINT           reduce using rule 2 (Comandos -> Comando .)
    READ            reduce using rule 2 (Comandos -> Comando .)
    WRITE           reduce using rule 2 (Comandos -> Comando .)
    START           reduce using rule 2 (Comandos -> Comando .)
    id              reduce using rule 2 (Comandos -> Comando .)
    IF              reduce using rule 2 (Comandos -> Comando .)
    FOR             reduce using rule 2 (Comandos -> Comando .)
    END             reduce using rule 2 (Comandos -> Comando .)
    num             reduce using rule 2 (Comandos -> Comando .)
    (               reduce using rule 2 (Comandos -> Comando .)
    ROF             reduce using rule 2 (Comandos -> Comando .)
    $end            reduce using rule 2 (Comandos -> Comando .)
    ELSE            reduce using rule 2 (Comandos -> Comando .)


state 3

    (23) Factor -> Matriz .

    *               reduce using rule 23 (Factor -> Matriz .)
    /               reduce using rule 23 (Factor -> Matriz .)
    +               reduce using rule 23 (Factor -> Matriz .)
    -               reduce using rule 23 (Factor -> Matriz .)
    ROF             reduce using rule 23 (Factor -> Matriz .)
    PRINT           reduce using rule 23 (Factor -> Matriz .)
    READ            reduce using rule 23 (Factor -> Matriz .)
    WRITE           reduce using rule 23 (Factor -> Matriz .)
    START           reduce using rule 23 (Factor -> Matriz .)
    id              reduce using rule 23 (Factor -> Matriz .)
    IF              reduce using rule 23 (Factor -> Matriz .)
    FOR             reduce using rule 23 (Factor -> Matriz .)
    END             reduce using rule 23 (Factor -> Matriz .)
    num             reduce using rule 23 (Factor -> Matriz .)
    (               reduce using rule 23 (Factor -> Matriz .)
    ELSE            reduce using rule 23 (Factor -> Matriz .)
    $end            reduce using rule 23 (Factor -> Matriz .)
    )               reduce using rule 23 (Factor -> Matriz .)
    ;               reduce using rule 23 (Factor -> Matriz .)
    FI              reduce using rule 23 (Factor -> Matriz .)
    >               reduce using rule 23 (Factor -> Matriz .)
    <               reduce using rule 23 (Factor -> Matriz .)
    =               reduce using rule 23 (Factor -> Matriz .)
    !               reduce using rule 23 (Factor -> Matriz .)


state 4

    (24) Reading -> READ . id

    id              shift and go to state 26


state 5

    (5) Comando -> Writing .

    ROF             reduce using rule 5 (Comando -> Writing .)
    PRINT           reduce using rule 5 (Comando -> Writing .)
    READ            reduce using rule 5 (Comando -> Writing .)
    WRITE           reduce using rule 5 (Comando -> Writing .)
    START           reduce using rule 5 (Comando -> Writing .)
    id              reduce using rule 5 (Comando -> Writing .)
    IF              reduce using rule 5 (Comando -> Writing .)
    FOR             reduce using rule 5 (Comando -> Writing .)
    END             reduce using rule 5 (Comando -> Writing .)
    num             reduce using rule 5 (Comando -> Writing .)
    (               reduce using rule 5 (Comando -> Writing .)
    FI              reduce using rule 5 (Comando -> Writing .)
    $end            reduce using rule 5 (Comando -> Writing .)
    ELSE            reduce using rule 5 (Comando -> Writing .)


state 6

    (6) Comando -> Start .

    ROF             reduce using rule 6 (Comando -> Start .)
    PRINT           reduce using rule 6 (Comando -> Start .)
    READ            reduce using rule 6 (Comando -> Start .)
    WRITE           reduce using rule 6 (Comando -> Start .)
    START           reduce using rule 6 (Comando -> Start .)
    id              reduce using rule 6 (Comando -> Start .)
    IF              reduce using rule 6 (Comando -> Start .)
    FOR             reduce using rule 6 (Comando -> Start .)
    END             reduce using rule 6 (Comando -> Start .)
    num             reduce using rule 6 (Comando -> Start .)
    (               reduce using rule 6 (Comando -> Start .)
    FI              reduce using rule 6 (Comando -> Start .)
    $end            reduce using rule 6 (Comando -> Start .)
    ELSE            reduce using rule 6 (Comando -> Start .)


state 7

    (20) Factor -> num .

    *               reduce using rule 20 (Factor -> num .)
    /               reduce using rule 20 (Factor -> num .)
    +               reduce using rule 20 (Factor -> num .)
    -               reduce using rule 20 (Factor -> num .)
    ROF             reduce using rule 20 (Factor -> num .)
    PRINT           reduce using rule 20 (Factor -> num .)
    READ            reduce using rule 20 (Factor -> num .)
    WRITE           reduce using rule 20 (Factor -> num .)
    START           reduce using rule 20 (Factor -> num .)
    id              reduce using rule 20 (Factor -> num .)
    IF              reduce using rule 20 (Factor -> num .)
    FOR             reduce using rule 20 (Factor -> num .)
    END             reduce using rule 20 (Factor -> num .)
    num             reduce using rule 20 (Factor -> num .)
    (               reduce using rule 20 (Factor -> num .)
    ELSE            reduce using rule 20 (Factor -> num .)
    $end            reduce using rule 20 (Factor -> num .)
    )               reduce using rule 20 (Factor -> num .)
    ;               reduce using rule 20 (Factor -> num .)
    FI              reduce using rule 20 (Factor -> num .)
    >               reduce using rule 20 (Factor -> num .)
    <               reduce using rule 20 (Factor -> num .)
    =               reduce using rule 20 (Factor -> num .)
    !               reduce using rule 20 (Factor -> num .)


state 8

    (18) Termo -> Factor .

    *               reduce using rule 18 (Termo -> Factor .)
    /               reduce using rule 18 (Termo -> Factor .)
    +               reduce using rule 18 (Termo -> Factor .)
    -               reduce using rule 18 (Termo -> Factor .)
    ELSE            reduce using rule 18 (Termo -> Factor .)
    PRINT           reduce using rule 18 (Termo -> Factor .)
    READ            reduce using rule 18 (Termo -> Factor .)
    WRITE           reduce using rule 18 (Termo -> Factor .)
    START           reduce using rule 18 (Termo -> Factor .)
    id              reduce using rule 18 (Termo -> Factor .)
    IF              reduce using rule 18 (Termo -> Factor .)
    FOR             reduce using rule 18 (Termo -> Factor .)
    END             reduce using rule 18 (Termo -> Factor .)
    num             reduce using rule 18 (Termo -> Factor .)
    (               reduce using rule 18 (Termo -> Factor .)
    FI              reduce using rule 18 (Termo -> Factor .)
    )               reduce using rule 18 (Termo -> Factor .)
    $end            reduce using rule 18 (Termo -> Factor .)
    ;               reduce using rule 18 (Termo -> Factor .)
    ROF             reduce using rule 18 (Termo -> Factor .)
    >               reduce using rule 18 (Termo -> Factor .)
    <               reduce using rule 18 (Termo -> Factor .)
    =               reduce using rule 18 (Termo -> Factor .)
    !               reduce using rule 18 (Termo -> Factor .)


state 9

    (12) Printing -> PRINT . frase

    frase           shift and go to state 27


state 10

    (4) Comando -> Reading .

    ROF             reduce using rule 4 (Comando -> Reading .)
    PRINT           reduce using rule 4 (Comando -> Reading .)
    READ            reduce using rule 4 (Comando -> Reading .)
    WRITE           reduce using rule 4 (Comando -> Reading .)
    START           reduce using rule 4 (Comando -> Reading .)
    id              reduce using rule 4 (Comando -> Reading .)
    IF              reduce using rule 4 (Comando -> Reading .)
    FOR             reduce using rule 4 (Comando -> Reading .)
    END             reduce using rule 4 (Comando -> Reading .)
    num             reduce using rule 4 (Comando -> Reading .)
    (               reduce using rule 4 (Comando -> Reading .)
    FI              reduce using rule 4 (Comando -> Reading .)
    $end            reduce using rule 4 (Comando -> Reading .)
    ELSE            reduce using rule 4 (Comando -> Reading .)


state 11

    (29) Atrib -> id . = Exp
    (43) Atrib -> id . [ num ] = num
    (45) Atrib -> id . [ num ] [ num ] = num
    (19) Factor -> id .
    (42) Array -> id . [ num ]
    (44) Matriz -> id . [ num ] [ num ]

    =               shift and go to state 28
    [               shift and go to state 29
    *               reduce using rule 19 (Factor -> id .)
    /               reduce using rule 19 (Factor -> id .)
    +               reduce using rule 19 (Factor -> id .)
    -               reduce using rule 19 (Factor -> id .)
    ROF             reduce using rule 19 (Factor -> id .)
    PRINT           reduce using rule 19 (Factor -> id .)
    READ            reduce using rule 19 (Factor -> id .)
    WRITE           reduce using rule 19 (Factor -> id .)
    START           reduce using rule 19 (Factor -> id .)
    id              reduce using rule 19 (Factor -> id .)
    IF              reduce using rule 19 (Factor -> id .)
    FOR             reduce using rule 19 (Factor -> id .)
    END             reduce using rule 19 (Factor -> id .)
    num             reduce using rule 19 (Factor -> id .)
    (               reduce using rule 19 (Factor -> id .)
    ELSE            reduce using rule 19 (Factor -> id .)
    FI              reduce using rule 19 (Factor -> id .)
    $end            reduce using rule 19 (Factor -> id .)


state 12

    (21) Factor -> ( . Exp )
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Matriz                         shift and go to state 3
    Exp                            shift and go to state 30
    Factor                         shift and go to state 8

state 13

    (15) Exp -> Termo .
    (16) Termo -> Termo . * Factor
    (17) Termo -> Termo . / Factor

    +               reduce using rule 15 (Exp -> Termo .)
    -               reduce using rule 15 (Exp -> Termo .)
    FI              reduce using rule 15 (Exp -> Termo .)
    PRINT           reduce using rule 15 (Exp -> Termo .)
    READ            reduce using rule 15 (Exp -> Termo .)
    WRITE           reduce using rule 15 (Exp -> Termo .)
    START           reduce using rule 15 (Exp -> Termo .)
    id              reduce using rule 15 (Exp -> Termo .)
    IF              reduce using rule 15 (Exp -> Termo .)
    FOR             reduce using rule 15 (Exp -> Termo .)
    END             reduce using rule 15 (Exp -> Termo .)
    num             reduce using rule 15 (Exp -> Termo .)
    (               reduce using rule 15 (Exp -> Termo .)
    ROF             reduce using rule 15 (Exp -> Termo .)
    ELSE            reduce using rule 15 (Exp -> Termo .)
    $end            reduce using rule 15 (Exp -> Termo .)
    >               reduce using rule 15 (Exp -> Termo .)
    <               reduce using rule 15 (Exp -> Termo .)
    =               reduce using rule 15 (Exp -> Termo .)
    !               reduce using rule 15 (Exp -> Termo .)
    )               reduce using rule 15 (Exp -> Termo .)
    ;               reduce using rule 15 (Exp -> Termo .)
    *               shift and go to state 32
    /               shift and go to state 33


state 14

    (9) Comando -> Condition .

    ROF             reduce using rule 9 (Comando -> Condition .)
    PRINT           reduce using rule 9 (Comando -> Condition .)
    READ            reduce using rule 9 (Comando -> Condition .)
    WRITE           reduce using rule 9 (Comando -> Condition .)
    START           reduce using rule 9 (Comando -> Condition .)
    id              reduce using rule 9 (Comando -> Condition .)
    IF              reduce using rule 9 (Comando -> Condition .)
    FOR             reduce using rule 9 (Comando -> Condition .)
    END             reduce using rule 9 (Comando -> Condition .)
    num             reduce using rule 9 (Comando -> Condition .)
    (               reduce using rule 9 (Comando -> Condition .)
    FI              reduce using rule 9 (Comando -> Condition .)
    $end            reduce using rule 9 (Comando -> Condition .)
    ELSE            reduce using rule 9 (Comando -> Condition .)


state 15

    (28) End -> END .

    ELSE            reduce using rule 28 (End -> END .)
    PRINT           reduce using rule 28 (End -> END .)
    READ            reduce using rule 28 (End -> END .)
    WRITE           reduce using rule 28 (End -> END .)
    START           reduce using rule 28 (End -> END .)
    id              reduce using rule 28 (End -> END .)
    IF              reduce using rule 28 (End -> END .)
    FOR             reduce using rule 28 (End -> END .)
    END             reduce using rule 28 (End -> END .)
    num             reduce using rule 28 (End -> END .)
    (               reduce using rule 28 (End -> END .)
    FI              reduce using rule 28 (End -> END .)
    ROF             reduce using rule 28 (End -> END .)
    $end            reduce using rule 28 (End -> END .)


state 16

    (36) Cicle -> FOR . ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> FOR . ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> FOR . ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> FOR . ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> FOR . ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> FOR . ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF

    (               shift and go to state 34


state 17

    (0) S' -> Comandos .
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 18

    (25) Writing -> WRITE . id
    (26) Writing -> WRITE . id [ num ]

    id              shift and go to state 36


state 19

    (27) Start -> START .

    FI              reduce using rule 27 (Start -> START .)
    PRINT           reduce using rule 27 (Start -> START .)
    READ            reduce using rule 27 (Start -> START .)
    WRITE           reduce using rule 27 (Start -> START .)
    START           reduce using rule 27 (Start -> START .)
    id              reduce using rule 27 (Start -> START .)
    IF              reduce using rule 27 (Start -> START .)
    FOR             reduce using rule 27 (Start -> START .)
    END             reduce using rule 27 (Start -> START .)
    num             reduce using rule 27 (Start -> START .)
    (               reduce using rule 27 (Start -> START .)
    ELSE            reduce using rule 27 (Start -> START .)
    ROF             reduce using rule 27 (Start -> START .)
    $end            reduce using rule 27 (Start -> START .)


state 20

    (3) Comando -> Printing .

    ROF             reduce using rule 3 (Comando -> Printing .)
    PRINT           reduce using rule 3 (Comando -> Printing .)
    READ            reduce using rule 3 (Comando -> Printing .)
    WRITE           reduce using rule 3 (Comando -> Printing .)
    START           reduce using rule 3 (Comando -> Printing .)
    id              reduce using rule 3 (Comando -> Printing .)
    IF              reduce using rule 3 (Comando -> Printing .)
    FOR             reduce using rule 3 (Comando -> Printing .)
    END             reduce using rule 3 (Comando -> Printing .)
    num             reduce using rule 3 (Comando -> Printing .)
    (               reduce using rule 3 (Comando -> Printing .)
    FI              reduce using rule 3 (Comando -> Printing .)
    $end            reduce using rule 3 (Comando -> Printing .)
    ELSE            reduce using rule 3 (Comando -> Printing .)


state 21

    (7) Comando -> Exp .
    (13) Exp -> Exp . + Termo
    (14) Exp -> Exp . - Termo

    ROF             reduce using rule 7 (Comando -> Exp .)
    PRINT           reduce using rule 7 (Comando -> Exp .)
    READ            reduce using rule 7 (Comando -> Exp .)
    WRITE           reduce using rule 7 (Comando -> Exp .)
    START           reduce using rule 7 (Comando -> Exp .)
    id              reduce using rule 7 (Comando -> Exp .)
    IF              reduce using rule 7 (Comando -> Exp .)
    FOR             reduce using rule 7 (Comando -> Exp .)
    END             reduce using rule 7 (Comando -> Exp .)
    num             reduce using rule 7 (Comando -> Exp .)
    (               reduce using rule 7 (Comando -> Exp .)
    FI              reduce using rule 7 (Comando -> Exp .)
    $end            reduce using rule 7 (Comando -> Exp .)
    ELSE            reduce using rule 7 (Comando -> Exp .)
    +               shift and go to state 37
    -               shift and go to state 38


state 22

    (10) Comando -> Cicle .

    ROF             reduce using rule 10 (Comando -> Cicle .)
    PRINT           reduce using rule 10 (Comando -> Cicle .)
    READ            reduce using rule 10 (Comando -> Cicle .)
    WRITE           reduce using rule 10 (Comando -> Cicle .)
    START           reduce using rule 10 (Comando -> Cicle .)
    id              reduce using rule 10 (Comando -> Cicle .)
    IF              reduce using rule 10 (Comando -> Cicle .)
    FOR             reduce using rule 10 (Comando -> Cicle .)
    END             reduce using rule 10 (Comando -> Cicle .)
    num             reduce using rule 10 (Comando -> Cicle .)
    (               reduce using rule 10 (Comando -> Cicle .)
    FI              reduce using rule 10 (Comando -> Cicle .)
    $end            reduce using rule 10 (Comando -> Cicle .)
    ELSE            reduce using rule 10 (Comando -> Cicle .)


state 23

    (30) Condition -> IF . ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> IF . ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> IF . ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> IF . ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> IF . ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> IF . ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI

    (               shift and go to state 39


state 24

    (8) Comando -> Atrib .

    ROF             reduce using rule 8 (Comando -> Atrib .)
    PRINT           reduce using rule 8 (Comando -> Atrib .)
    READ            reduce using rule 8 (Comando -> Atrib .)
    WRITE           reduce using rule 8 (Comando -> Atrib .)
    START           reduce using rule 8 (Comando -> Atrib .)
    id              reduce using rule 8 (Comando -> Atrib .)
    IF              reduce using rule 8 (Comando -> Atrib .)
    FOR             reduce using rule 8 (Comando -> Atrib .)
    END             reduce using rule 8 (Comando -> Atrib .)
    num             reduce using rule 8 (Comando -> Atrib .)
    (               reduce using rule 8 (Comando -> Atrib .)
    FI              reduce using rule 8 (Comando -> Atrib .)
    $end            reduce using rule 8 (Comando -> Atrib .)
    ELSE            reduce using rule 8 (Comando -> Atrib .)


state 25

    (22) Factor -> Array .

    *               reduce using rule 22 (Factor -> Array .)
    /               reduce using rule 22 (Factor -> Array .)
    +               reduce using rule 22 (Factor -> Array .)
    -               reduce using rule 22 (Factor -> Array .)
    ROF             reduce using rule 22 (Factor -> Array .)
    PRINT           reduce using rule 22 (Factor -> Array .)
    READ            reduce using rule 22 (Factor -> Array .)
    WRITE           reduce using rule 22 (Factor -> Array .)
    START           reduce using rule 22 (Factor -> Array .)
    id              reduce using rule 22 (Factor -> Array .)
    IF              reduce using rule 22 (Factor -> Array .)
    FOR             reduce using rule 22 (Factor -> Array .)
    END             reduce using rule 22 (Factor -> Array .)
    num             reduce using rule 22 (Factor -> Array .)
    (               reduce using rule 22 (Factor -> Array .)
    ELSE            reduce using rule 22 (Factor -> Array .)
    $end            reduce using rule 22 (Factor -> Array .)
    )               reduce using rule 22 (Factor -> Array .)
    ;               reduce using rule 22 (Factor -> Array .)
    FI              reduce using rule 22 (Factor -> Array .)
    >               reduce using rule 22 (Factor -> Array .)
    <               reduce using rule 22 (Factor -> Array .)
    =               reduce using rule 22 (Factor -> Array .)
    !               reduce using rule 22 (Factor -> Array .)


state 26

    (24) Reading -> READ id .

    ELSE            reduce using rule 24 (Reading -> READ id .)
    PRINT           reduce using rule 24 (Reading -> READ id .)
    READ            reduce using rule 24 (Reading -> READ id .)
    WRITE           reduce using rule 24 (Reading -> READ id .)
    START           reduce using rule 24 (Reading -> READ id .)
    id              reduce using rule 24 (Reading -> READ id .)
    IF              reduce using rule 24 (Reading -> READ id .)
    FOR             reduce using rule 24 (Reading -> READ id .)
    END             reduce using rule 24 (Reading -> READ id .)
    num             reduce using rule 24 (Reading -> READ id .)
    (               reduce using rule 24 (Reading -> READ id .)
    ROF             reduce using rule 24 (Reading -> READ id .)
    FI              reduce using rule 24 (Reading -> READ id .)
    $end            reduce using rule 24 (Reading -> READ id .)


state 27

    (12) Printing -> PRINT frase .

    PRINT           reduce using rule 12 (Printing -> PRINT frase .)
    READ            reduce using rule 12 (Printing -> PRINT frase .)
    WRITE           reduce using rule 12 (Printing -> PRINT frase .)
    START           reduce using rule 12 (Printing -> PRINT frase .)
    id              reduce using rule 12 (Printing -> PRINT frase .)
    IF              reduce using rule 12 (Printing -> PRINT frase .)
    FOR             reduce using rule 12 (Printing -> PRINT frase .)
    END             reduce using rule 12 (Printing -> PRINT frase .)
    num             reduce using rule 12 (Printing -> PRINT frase .)
    (               reduce using rule 12 (Printing -> PRINT frase .)
    $end            reduce using rule 12 (Printing -> PRINT frase .)
    ELSE            reduce using rule 12 (Printing -> PRINT frase .)
    FI              reduce using rule 12 (Printing -> PRINT frase .)
    ROF             reduce using rule 12 (Printing -> PRINT frase .)


state 28

    (29) Atrib -> id = . Exp
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Matriz                         shift and go to state 3
    Exp                            shift and go to state 40
    Factor                         shift and go to state 8

state 29

    (43) Atrib -> id [ . num ] = num
    (45) Atrib -> id [ . num ] [ num ] = num
    (42) Array -> id [ . num ]
    (44) Matriz -> id [ . num ] [ num ]

    num             shift and go to state 41


state 30

    (21) Factor -> ( Exp . )
    (13) Exp -> Exp . + Termo
    (14) Exp -> Exp . - Termo

    )               shift and go to state 42
    +               shift and go to state 37
    -               shift and go to state 38


state 31

    (19) Factor -> id .
    (42) Array -> id . [ num ]
    (44) Matriz -> id . [ num ] [ num ]

    *               reduce using rule 19 (Factor -> id .)
    /               reduce using rule 19 (Factor -> id .)
    +               reduce using rule 19 (Factor -> id .)
    -               reduce using rule 19 (Factor -> id .)
    PRINT           reduce using rule 19 (Factor -> id .)
    READ            reduce using rule 19 (Factor -> id .)
    WRITE           reduce using rule 19 (Factor -> id .)
    START           reduce using rule 19 (Factor -> id .)
    id              reduce using rule 19 (Factor -> id .)
    IF              reduce using rule 19 (Factor -> id .)
    FOR             reduce using rule 19 (Factor -> id .)
    END             reduce using rule 19 (Factor -> id .)
    num             reduce using rule 19 (Factor -> id .)
    (               reduce using rule 19 (Factor -> id .)
    $end            reduce using rule 19 (Factor -> id .)
    )               reduce using rule 19 (Factor -> id .)
    ;               reduce using rule 19 (Factor -> id .)
    ELSE            reduce using rule 19 (Factor -> id .)
    FI              reduce using rule 19 (Factor -> id .)
    ROF             reduce using rule 19 (Factor -> id .)
    >               reduce using rule 19 (Factor -> id .)
    <               reduce using rule 19 (Factor -> id .)
    =               reduce using rule 19 (Factor -> id .)
    !               reduce using rule 19 (Factor -> id .)
    [               shift and go to state 43


state 32

    (16) Termo -> Termo * . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Array                          shift and go to state 25
    Matriz                         shift and go to state 3
    Factor                         shift and go to state 44

state 33

    (17) Termo -> Termo / . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Array                          shift and go to state 25
    Matriz                         shift and go to state 3
    Factor                         shift and go to state 45

state 34

    (36) Cicle -> FOR ( . Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> FOR ( . Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> FOR ( . Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> FOR ( . Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> FOR ( . Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> FOR ( . Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num

    id              shift and go to state 47

    Atrib                          shift and go to state 46

state 35

    (1) Comandos -> Comandos Comando .

    FI              reduce using rule 1 (Comandos -> Comandos Comando .)
    PRINT           reduce using rule 1 (Comandos -> Comandos Comando .)
    READ            reduce using rule 1 (Comandos -> Comandos Comando .)
    WRITE           reduce using rule 1 (Comandos -> Comandos Comando .)
    START           reduce using rule 1 (Comandos -> Comandos Comando .)
    id              reduce using rule 1 (Comandos -> Comandos Comando .)
    IF              reduce using rule 1 (Comandos -> Comandos Comando .)
    FOR             reduce using rule 1 (Comandos -> Comandos Comando .)
    END             reduce using rule 1 (Comandos -> Comandos Comando .)
    num             reduce using rule 1 (Comandos -> Comandos Comando .)
    (               reduce using rule 1 (Comandos -> Comandos Comando .)
    ROF             reduce using rule 1 (Comandos -> Comandos Comando .)
    $end            reduce using rule 1 (Comandos -> Comandos Comando .)
    ELSE            reduce using rule 1 (Comandos -> Comandos Comando .)


state 36

    (25) Writing -> WRITE id .
    (26) Writing -> WRITE id . [ num ]

    ELSE            reduce using rule 25 (Writing -> WRITE id .)
    PRINT           reduce using rule 25 (Writing -> WRITE id .)
    READ            reduce using rule 25 (Writing -> WRITE id .)
    WRITE           reduce using rule 25 (Writing -> WRITE id .)
    START           reduce using rule 25 (Writing -> WRITE id .)
    id              reduce using rule 25 (Writing -> WRITE id .)
    IF              reduce using rule 25 (Writing -> WRITE id .)
    FOR             reduce using rule 25 (Writing -> WRITE id .)
    END             reduce using rule 25 (Writing -> WRITE id .)
    num             reduce using rule 25 (Writing -> WRITE id .)
    (               reduce using rule 25 (Writing -> WRITE id .)
    FI              reduce using rule 25 (Writing -> WRITE id .)
    ROF             reduce using rule 25 (Writing -> WRITE id .)
    $end            reduce using rule 25 (Writing -> WRITE id .)
    [               shift and go to state 48


state 37

    (13) Exp -> Exp + . Termo
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Termo                          shift and go to state 49
    Array                          shift and go to state 25
    Matriz                         shift and go to state 3
    Factor                         shift and go to state 8

state 38

    (14) Exp -> Exp - . Termo
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Termo                          shift and go to state 50
    Array                          shift and go to state 25
    Matriz                         shift and go to state 3
    Factor                         shift and go to state 8

state 39

    (30) Condition -> IF ( . Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> IF ( . Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> IF ( . Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> IF ( . Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> IF ( . Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> IF ( . Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Matriz                         shift and go to state 3
    Exp                            shift and go to state 51
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25

state 40

    (29) Atrib -> id = Exp .
    (13) Exp -> Exp . + Termo
    (14) Exp -> Exp . - Termo

    ELSE            reduce using rule 29 (Atrib -> id = Exp .)
    PRINT           reduce using rule 29 (Atrib -> id = Exp .)
    READ            reduce using rule 29 (Atrib -> id = Exp .)
    WRITE           reduce using rule 29 (Atrib -> id = Exp .)
    START           reduce using rule 29 (Atrib -> id = Exp .)
    id              reduce using rule 29 (Atrib -> id = Exp .)
    IF              reduce using rule 29 (Atrib -> id = Exp .)
    FOR             reduce using rule 29 (Atrib -> id = Exp .)
    END             reduce using rule 29 (Atrib -> id = Exp .)
    num             reduce using rule 29 (Atrib -> id = Exp .)
    (               reduce using rule 29 (Atrib -> id = Exp .)
    ROF             reduce using rule 29 (Atrib -> id = Exp .)
    FI              reduce using rule 29 (Atrib -> id = Exp .)
    )               reduce using rule 29 (Atrib -> id = Exp .)
    $end            reduce using rule 29 (Atrib -> id = Exp .)
    ;               reduce using rule 29 (Atrib -> id = Exp .)
    +               shift and go to state 37
    -               shift and go to state 38


state 41

    (43) Atrib -> id [ num . ] = num
    (45) Atrib -> id [ num . ] [ num ] = num
    (42) Array -> id [ num . ]
    (44) Matriz -> id [ num . ] [ num ]

    ]               shift and go to state 52


state 42

    (21) Factor -> ( Exp ) .

    *               reduce using rule 21 (Factor -> ( Exp ) .)
    /               reduce using rule 21 (Factor -> ( Exp ) .)
    +               reduce using rule 21 (Factor -> ( Exp ) .)
    -               reduce using rule 21 (Factor -> ( Exp ) .)
    ROF             reduce using rule 21 (Factor -> ( Exp ) .)
    PRINT           reduce using rule 21 (Factor -> ( Exp ) .)
    READ            reduce using rule 21 (Factor -> ( Exp ) .)
    WRITE           reduce using rule 21 (Factor -> ( Exp ) .)
    START           reduce using rule 21 (Factor -> ( Exp ) .)
    id              reduce using rule 21 (Factor -> ( Exp ) .)
    IF              reduce using rule 21 (Factor -> ( Exp ) .)
    FOR             reduce using rule 21 (Factor -> ( Exp ) .)
    END             reduce using rule 21 (Factor -> ( Exp ) .)
    num             reduce using rule 21 (Factor -> ( Exp ) .)
    (               reduce using rule 21 (Factor -> ( Exp ) .)
    ELSE            reduce using rule 21 (Factor -> ( Exp ) .)
    $end            reduce using rule 21 (Factor -> ( Exp ) .)
    )               reduce using rule 21 (Factor -> ( Exp ) .)
    ;               reduce using rule 21 (Factor -> ( Exp ) .)
    FI              reduce using rule 21 (Factor -> ( Exp ) .)
    >               reduce using rule 21 (Factor -> ( Exp ) .)
    <               reduce using rule 21 (Factor -> ( Exp ) .)
    =               reduce using rule 21 (Factor -> ( Exp ) .)
    !               reduce using rule 21 (Factor -> ( Exp ) .)


state 43

    (42) Array -> id [ . num ]
    (44) Matriz -> id [ . num ] [ num ]

    num             shift and go to state 53


state 44

    (16) Termo -> Termo * Factor .

    *               reduce using rule 16 (Termo -> Termo * Factor .)
    /               reduce using rule 16 (Termo -> Termo * Factor .)
    +               reduce using rule 16 (Termo -> Termo * Factor .)
    -               reduce using rule 16 (Termo -> Termo * Factor .)
    ELSE            reduce using rule 16 (Termo -> Termo * Factor .)
    PRINT           reduce using rule 16 (Termo -> Termo * Factor .)
    READ            reduce using rule 16 (Termo -> Termo * Factor .)
    WRITE           reduce using rule 16 (Termo -> Termo * Factor .)
    START           reduce using rule 16 (Termo -> Termo * Factor .)
    id              reduce using rule 16 (Termo -> Termo * Factor .)
    IF              reduce using rule 16 (Termo -> Termo * Factor .)
    FOR             reduce using rule 16 (Termo -> Termo * Factor .)
    END             reduce using rule 16 (Termo -> Termo * Factor .)
    num             reduce using rule 16 (Termo -> Termo * Factor .)
    (               reduce using rule 16 (Termo -> Termo * Factor .)
    FI              reduce using rule 16 (Termo -> Termo * Factor .)
    )               reduce using rule 16 (Termo -> Termo * Factor .)
    $end            reduce using rule 16 (Termo -> Termo * Factor .)
    ;               reduce using rule 16 (Termo -> Termo * Factor .)
    ROF             reduce using rule 16 (Termo -> Termo * Factor .)
    >               reduce using rule 16 (Termo -> Termo * Factor .)
    <               reduce using rule 16 (Termo -> Termo * Factor .)
    =               reduce using rule 16 (Termo -> Termo * Factor .)
    !               reduce using rule 16 (Termo -> Termo * Factor .)


state 45

    (17) Termo -> Termo / Factor .

    *               reduce using rule 17 (Termo -> Termo / Factor .)
    /               reduce using rule 17 (Termo -> Termo / Factor .)
    +               reduce using rule 17 (Termo -> Termo / Factor .)
    -               reduce using rule 17 (Termo -> Termo / Factor .)
    ELSE            reduce using rule 17 (Termo -> Termo / Factor .)
    PRINT           reduce using rule 17 (Termo -> Termo / Factor .)
    READ            reduce using rule 17 (Termo -> Termo / Factor .)
    WRITE           reduce using rule 17 (Termo -> Termo / Factor .)
    START           reduce using rule 17 (Termo -> Termo / Factor .)
    id              reduce using rule 17 (Termo -> Termo / Factor .)
    IF              reduce using rule 17 (Termo -> Termo / Factor .)
    FOR             reduce using rule 17 (Termo -> Termo / Factor .)
    END             reduce using rule 17 (Termo -> Termo / Factor .)
    num             reduce using rule 17 (Termo -> Termo / Factor .)
    (               reduce using rule 17 (Termo -> Termo / Factor .)
    FI              reduce using rule 17 (Termo -> Termo / Factor .)
    )               reduce using rule 17 (Termo -> Termo / Factor .)
    $end            reduce using rule 17 (Termo -> Termo / Factor .)
    ;               reduce using rule 17 (Termo -> Termo / Factor .)
    ROF             reduce using rule 17 (Termo -> Termo / Factor .)
    >               reduce using rule 17 (Termo -> Termo / Factor .)
    <               reduce using rule 17 (Termo -> Termo / Factor .)
    =               reduce using rule 17 (Termo -> Termo / Factor .)
    !               reduce using rule 17 (Termo -> Termo / Factor .)


state 46

    (36) Cicle -> FOR ( Atrib . ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> FOR ( Atrib . ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> FOR ( Atrib . ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> FOR ( Atrib . ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> FOR ( Atrib . ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> FOR ( Atrib . ; Factor ! = Factor ; Atrib ) Comandos ROF

    ;               shift and go to state 54


state 47

    (29) Atrib -> id . = Exp
    (43) Atrib -> id . [ num ] = num
    (45) Atrib -> id . [ num ] [ num ] = num

    =               shift and go to state 28
    [               shift and go to state 55


state 48

    (26) Writing -> WRITE id [ . num ]

    num             shift and go to state 56


state 49

    (13) Exp -> Exp + Termo .
    (16) Termo -> Termo . * Factor
    (17) Termo -> Termo . / Factor

    +               reduce using rule 13 (Exp -> Exp + Termo .)
    -               reduce using rule 13 (Exp -> Exp + Termo .)
    FI              reduce using rule 13 (Exp -> Exp + Termo .)
    PRINT           reduce using rule 13 (Exp -> Exp + Termo .)
    READ            reduce using rule 13 (Exp -> Exp + Termo .)
    WRITE           reduce using rule 13 (Exp -> Exp + Termo .)
    START           reduce using rule 13 (Exp -> Exp + Termo .)
    id              reduce using rule 13 (Exp -> Exp + Termo .)
    IF              reduce using rule 13 (Exp -> Exp + Termo .)
    FOR             reduce using rule 13 (Exp -> Exp + Termo .)
    END             reduce using rule 13 (Exp -> Exp + Termo .)
    num             reduce using rule 13 (Exp -> Exp + Termo .)
    (               reduce using rule 13 (Exp -> Exp + Termo .)
    ROF             reduce using rule 13 (Exp -> Exp + Termo .)
    ELSE            reduce using rule 13 (Exp -> Exp + Termo .)
    $end            reduce using rule 13 (Exp -> Exp + Termo .)
    >               reduce using rule 13 (Exp -> Exp + Termo .)
    <               reduce using rule 13 (Exp -> Exp + Termo .)
    =               reduce using rule 13 (Exp -> Exp + Termo .)
    !               reduce using rule 13 (Exp -> Exp + Termo .)
    )               reduce using rule 13 (Exp -> Exp + Termo .)
    ;               reduce using rule 13 (Exp -> Exp + Termo .)
    *               shift and go to state 32
    /               shift and go to state 33


state 50

    (14) Exp -> Exp - Termo .
    (16) Termo -> Termo . * Factor
    (17) Termo -> Termo . / Factor

    +               reduce using rule 14 (Exp -> Exp - Termo .)
    -               reduce using rule 14 (Exp -> Exp - Termo .)
    FI              reduce using rule 14 (Exp -> Exp - Termo .)
    PRINT           reduce using rule 14 (Exp -> Exp - Termo .)
    READ            reduce using rule 14 (Exp -> Exp - Termo .)
    WRITE           reduce using rule 14 (Exp -> Exp - Termo .)
    START           reduce using rule 14 (Exp -> Exp - Termo .)
    id              reduce using rule 14 (Exp -> Exp - Termo .)
    IF              reduce using rule 14 (Exp -> Exp - Termo .)
    FOR             reduce using rule 14 (Exp -> Exp - Termo .)
    END             reduce using rule 14 (Exp -> Exp - Termo .)
    num             reduce using rule 14 (Exp -> Exp - Termo .)
    (               reduce using rule 14 (Exp -> Exp - Termo .)
    ROF             reduce using rule 14 (Exp -> Exp - Termo .)
    ELSE            reduce using rule 14 (Exp -> Exp - Termo .)
    $end            reduce using rule 14 (Exp -> Exp - Termo .)
    >               reduce using rule 14 (Exp -> Exp - Termo .)
    <               reduce using rule 14 (Exp -> Exp - Termo .)
    =               reduce using rule 14 (Exp -> Exp - Termo .)
    !               reduce using rule 14 (Exp -> Exp - Termo .)
    )               reduce using rule 14 (Exp -> Exp - Termo .)
    ;               reduce using rule 14 (Exp -> Exp - Termo .)
    *               shift and go to state 32
    /               shift and go to state 33


state 51

    (30) Condition -> IF ( Exp . > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> IF ( Exp . < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> IF ( Exp . > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> IF ( Exp . < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> IF ( Exp . = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> IF ( Exp . ! = Termo ) THEN Comandos ELSE Comandos FI
    (13) Exp -> Exp . + Termo
    (14) Exp -> Exp . - Termo

    >               shift and go to state 60
    <               shift and go to state 59
    =               shift and go to state 58
    !               shift and go to state 57
    +               shift and go to state 37
    -               shift and go to state 38


state 52

    (43) Atrib -> id [ num ] . = num
    (45) Atrib -> id [ num ] . [ num ] = num
    (42) Array -> id [ num ] .
    (44) Matriz -> id [ num ] . [ num ]

    =               shift and go to state 61
    [               shift and go to state 62
    *               reduce using rule 42 (Array -> id [ num ] .)
    /               reduce using rule 42 (Array -> id [ num ] .)
    +               reduce using rule 42 (Array -> id [ num ] .)
    -               reduce using rule 42 (Array -> id [ num ] .)
    ROF             reduce using rule 42 (Array -> id [ num ] .)
    PRINT           reduce using rule 42 (Array -> id [ num ] .)
    READ            reduce using rule 42 (Array -> id [ num ] .)
    WRITE           reduce using rule 42 (Array -> id [ num ] .)
    START           reduce using rule 42 (Array -> id [ num ] .)
    id              reduce using rule 42 (Array -> id [ num ] .)
    IF              reduce using rule 42 (Array -> id [ num ] .)
    FOR             reduce using rule 42 (Array -> id [ num ] .)
    END             reduce using rule 42 (Array -> id [ num ] .)
    num             reduce using rule 42 (Array -> id [ num ] .)
    (               reduce using rule 42 (Array -> id [ num ] .)
    FI              reduce using rule 42 (Array -> id [ num ] .)
    $end            reduce using rule 42 (Array -> id [ num ] .)
    ELSE            reduce using rule 42 (Array -> id [ num ] .)


state 53

    (42) Array -> id [ num . ]
    (44) Matriz -> id [ num . ] [ num ]

    ]               shift and go to state 63


state 54

    (36) Cicle -> FOR ( Atrib ; . Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> FOR ( Atrib ; . Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> FOR ( Atrib ; . Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> FOR ( Atrib ; . Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> FOR ( Atrib ; . Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> FOR ( Atrib ; . Factor ! = Factor ; Atrib ) Comandos ROF
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Matriz                         shift and go to state 3
    Factor                         shift and go to state 64
    Array                          shift and go to state 25

state 55

    (43) Atrib -> id [ . num ] = num
    (45) Atrib -> id [ . num ] [ num ] = num

    num             shift and go to state 65


state 56

    (26) Writing -> WRITE id [ num . ]

    ]               shift and go to state 66


state 57

    (35) Condition -> IF ( Exp ! . = Termo ) THEN Comandos ELSE Comandos FI

    =               shift and go to state 67


state 58

    (34) Condition -> IF ( Exp = . = Termo ) THEN Comandos ELSE Comandos FI

    =               shift and go to state 68


state 59

    (31) Condition -> IF ( Exp < . Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> IF ( Exp < . = Termo ) THEN Comandos ELSE Comandos FI
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    =               shift and go to state 70
    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Matriz                         shift and go to state 3
    Factor                         shift and go to state 8
    Termo                          shift and go to state 69
    Array                          shift and go to state 25

state 60

    (30) Condition -> IF ( Exp > . Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> IF ( Exp > . = Termo ) THEN Comandos ELSE Comandos FI
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    =               shift and go to state 72
    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Matriz                         shift and go to state 3
    Factor                         shift and go to state 8
    Termo                          shift and go to state 71
    Array                          shift and go to state 25

state 61

    (43) Atrib -> id [ num ] = . num

    num             shift and go to state 73


state 62

    (45) Atrib -> id [ num ] [ . num ] = num
    (44) Matriz -> id [ num ] [ . num ]

    num             shift and go to state 74


state 63

    (42) Array -> id [ num ] .
    (44) Matriz -> id [ num ] . [ num ]

    *               reduce using rule 42 (Array -> id [ num ] .)
    /               reduce using rule 42 (Array -> id [ num ] .)
    +               reduce using rule 42 (Array -> id [ num ] .)
    -               reduce using rule 42 (Array -> id [ num ] .)
    PRINT           reduce using rule 42 (Array -> id [ num ] .)
    READ            reduce using rule 42 (Array -> id [ num ] .)
    WRITE           reduce using rule 42 (Array -> id [ num ] .)
    START           reduce using rule 42 (Array -> id [ num ] .)
    id              reduce using rule 42 (Array -> id [ num ] .)
    IF              reduce using rule 42 (Array -> id [ num ] .)
    FOR             reduce using rule 42 (Array -> id [ num ] .)
    END             reduce using rule 42 (Array -> id [ num ] .)
    num             reduce using rule 42 (Array -> id [ num ] .)
    (               reduce using rule 42 (Array -> id [ num ] .)
    $end            reduce using rule 42 (Array -> id [ num ] .)
    )               reduce using rule 42 (Array -> id [ num ] .)
    ;               reduce using rule 42 (Array -> id [ num ] .)
    ELSE            reduce using rule 42 (Array -> id [ num ] .)
    FI              reduce using rule 42 (Array -> id [ num ] .)
    ROF             reduce using rule 42 (Array -> id [ num ] .)
    >               reduce using rule 42 (Array -> id [ num ] .)
    <               reduce using rule 42 (Array -> id [ num ] .)
    =               reduce using rule 42 (Array -> id [ num ] .)
    !               reduce using rule 42 (Array -> id [ num ] .)
    [               shift and go to state 75


state 64

    (36) Cicle -> FOR ( Atrib ; Factor . < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> FOR ( Atrib ; Factor . > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> FOR ( Atrib ; Factor . < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> FOR ( Atrib ; Factor . > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> FOR ( Atrib ; Factor . = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> FOR ( Atrib ; Factor . ! = Factor ; Atrib ) Comandos ROF

    <               shift and go to state 78
    >               shift and go to state 79
    =               shift and go to state 77
    !               shift and go to state 76


state 65

    (43) Atrib -> id [ num . ] = num
    (45) Atrib -> id [ num . ] [ num ] = num

    ]               shift and go to state 80


state 66

    (26) Writing -> WRITE id [ num ] .

    ELSE            reduce using rule 26 (Writing -> WRITE id [ num ] .)
    PRINT           reduce using rule 26 (Writing -> WRITE id [ num ] .)
    READ            reduce using rule 26 (Writing -> WRITE id [ num ] .)
    WRITE           reduce using rule 26 (Writing -> WRITE id [ num ] .)
    START           reduce using rule 26 (Writing -> WRITE id [ num ] .)
    id              reduce using rule 26 (Writing -> WRITE id [ num ] .)
    IF              reduce using rule 26 (Writing -> WRITE id [ num ] .)
    FOR             reduce using rule 26 (Writing -> WRITE id [ num ] .)
    END             reduce using rule 26 (Writing -> WRITE id [ num ] .)
    num             reduce using rule 26 (Writing -> WRITE id [ num ] .)
    (               reduce using rule 26 (Writing -> WRITE id [ num ] .)
    FI              reduce using rule 26 (Writing -> WRITE id [ num ] .)
    ROF             reduce using rule 26 (Writing -> WRITE id [ num ] .)
    $end            reduce using rule 26 (Writing -> WRITE id [ num ] .)


state 67

    (35) Condition -> IF ( Exp ! = . Termo ) THEN Comandos ELSE Comandos FI
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Matriz                         shift and go to state 3
    Factor                         shift and go to state 8
    Termo                          shift and go to state 81
    Array                          shift and go to state 25

state 68

    (34) Condition -> IF ( Exp = = . Termo ) THEN Comandos ELSE Comandos FI
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Matriz                         shift and go to state 3
    Factor                         shift and go to state 8
    Termo                          shift and go to state 82
    Array                          shift and go to state 25

state 69

    (31) Condition -> IF ( Exp < Termo . ) THEN Comandos ELSE Comandos FI
    (16) Termo -> Termo . * Factor
    (17) Termo -> Termo . / Factor

    )               shift and go to state 83
    *               shift and go to state 32
    /               shift and go to state 33


state 70

    (33) Condition -> IF ( Exp < = . Termo ) THEN Comandos ELSE Comandos FI
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Matriz                         shift and go to state 3
    Factor                         shift and go to state 8
    Termo                          shift and go to state 84
    Array                          shift and go to state 25

state 71

    (30) Condition -> IF ( Exp > Termo . ) THEN Comandos ELSE Comandos FI
    (16) Termo -> Termo . * Factor
    (17) Termo -> Termo . / Factor

    )               shift and go to state 85
    *               shift and go to state 32
    /               shift and go to state 33


state 72

    (32) Condition -> IF ( Exp > = . Termo ) THEN Comandos ELSE Comandos FI
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Matriz                         shift and go to state 3
    Factor                         shift and go to state 8
    Termo                          shift and go to state 86
    Array                          shift and go to state 25

state 73

    (43) Atrib -> id [ num ] = num .

    ELSE            reduce using rule 43 (Atrib -> id [ num ] = num .)
    PRINT           reduce using rule 43 (Atrib -> id [ num ] = num .)
    READ            reduce using rule 43 (Atrib -> id [ num ] = num .)
    WRITE           reduce using rule 43 (Atrib -> id [ num ] = num .)
    START           reduce using rule 43 (Atrib -> id [ num ] = num .)
    id              reduce using rule 43 (Atrib -> id [ num ] = num .)
    IF              reduce using rule 43 (Atrib -> id [ num ] = num .)
    FOR             reduce using rule 43 (Atrib -> id [ num ] = num .)
    END             reduce using rule 43 (Atrib -> id [ num ] = num .)
    num             reduce using rule 43 (Atrib -> id [ num ] = num .)
    (               reduce using rule 43 (Atrib -> id [ num ] = num .)
    ROF             reduce using rule 43 (Atrib -> id [ num ] = num .)
    FI              reduce using rule 43 (Atrib -> id [ num ] = num .)
    )               reduce using rule 43 (Atrib -> id [ num ] = num .)
    $end            reduce using rule 43 (Atrib -> id [ num ] = num .)
    ;               reduce using rule 43 (Atrib -> id [ num ] = num .)


state 74

    (45) Atrib -> id [ num ] [ num . ] = num
    (44) Matriz -> id [ num ] [ num . ]

    ]               shift and go to state 87


state 75

    (44) Matriz -> id [ num ] [ . num ]

    num             shift and go to state 88


state 76

    (41) Cicle -> FOR ( Atrib ; Factor ! . = Factor ; Atrib ) Comandos ROF

    =               shift and go to state 89


state 77

    (40) Cicle -> FOR ( Atrib ; Factor = . = Factor ; Atrib ) Comandos ROF

    =               shift and go to state 90


state 78

    (36) Cicle -> FOR ( Atrib ; Factor < . Factor ; Atrib ) Comandos ROF
    (38) Cicle -> FOR ( Atrib ; Factor < . = Factor ; Atrib ) Comandos ROF
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    =               shift and go to state 92
    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Matriz                         shift and go to state 3
    Factor                         shift and go to state 91
    Array                          shift and go to state 25

state 79

    (37) Cicle -> FOR ( Atrib ; Factor > . Factor ; Atrib ) Comandos ROF
    (39) Cicle -> FOR ( Atrib ; Factor > . = Factor ; Atrib ) Comandos ROF
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    =               shift and go to state 94
    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Matriz                         shift and go to state 3
    Factor                         shift and go to state 93
    Array                          shift and go to state 25

state 80

    (43) Atrib -> id [ num ] . = num
    (45) Atrib -> id [ num ] . [ num ] = num

    =               shift and go to state 61
    [               shift and go to state 95


state 81

    (35) Condition -> IF ( Exp ! = Termo . ) THEN Comandos ELSE Comandos FI
    (16) Termo -> Termo . * Factor
    (17) Termo -> Termo . / Factor

    )               shift and go to state 96
    *               shift and go to state 32
    /               shift and go to state 33


state 82

    (34) Condition -> IF ( Exp = = Termo . ) THEN Comandos ELSE Comandos FI
    (16) Termo -> Termo . * Factor
    (17) Termo -> Termo . / Factor

    )               shift and go to state 97
    *               shift and go to state 32
    /               shift and go to state 33


state 83

    (31) Condition -> IF ( Exp < Termo ) . THEN Comandos ELSE Comandos FI

    THEN            shift and go to state 98


state 84

    (33) Condition -> IF ( Exp < = Termo . ) THEN Comandos ELSE Comandos FI
    (16) Termo -> Termo . * Factor
    (17) Termo -> Termo . / Factor

    )               shift and go to state 99
    *               shift and go to state 32
    /               shift and go to state 33


state 85

    (30) Condition -> IF ( Exp > Termo ) . THEN Comandos ELSE Comandos FI

    THEN            shift and go to state 100


state 86

    (32) Condition -> IF ( Exp > = Termo . ) THEN Comandos ELSE Comandos FI
    (16) Termo -> Termo . * Factor
    (17) Termo -> Termo . / Factor

    )               shift and go to state 101
    *               shift and go to state 32
    /               shift and go to state 33


state 87

    (45) Atrib -> id [ num ] [ num ] . = num
    (44) Matriz -> id [ num ] [ num ] .

    =               shift and go to state 102
    *               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    /               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    +               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    -               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    ELSE            reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    PRINT           reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    READ            reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    WRITE           reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    START           reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    id              reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    IF              reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    FOR             reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    END             reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    num             reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    (               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    ROF             reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    FI              reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    $end            reduce using rule 44 (Matriz -> id [ num ] [ num ] .)


state 88

    (44) Matriz -> id [ num ] [ num . ]

    ]               shift and go to state 103


state 89

    (41) Cicle -> FOR ( Atrib ; Factor ! = . Factor ; Atrib ) Comandos ROF
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Matriz                         shift and go to state 3
    Factor                         shift and go to state 104
    Array                          shift and go to state 25

state 90

    (40) Cicle -> FOR ( Atrib ; Factor = = . Factor ; Atrib ) Comandos ROF
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Matriz                         shift and go to state 3
    Factor                         shift and go to state 105
    Array                          shift and go to state 25

state 91

    (36) Cicle -> FOR ( Atrib ; Factor < Factor . ; Atrib ) Comandos ROF

    ;               shift and go to state 106


state 92

    (38) Cicle -> FOR ( Atrib ; Factor < = . Factor ; Atrib ) Comandos ROF
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Matriz                         shift and go to state 3
    Factor                         shift and go to state 107
    Array                          shift and go to state 25

state 93

    (37) Cicle -> FOR ( Atrib ; Factor > Factor . ; Atrib ) Comandos ROF

    ;               shift and go to state 108


state 94

    (39) Cicle -> FOR ( Atrib ; Factor > = . Factor ; Atrib ) Comandos ROF
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    id              shift and go to state 31
    num             shift and go to state 7
    (               shift and go to state 12

    Matriz                         shift and go to state 3
    Factor                         shift and go to state 109
    Array                          shift and go to state 25

state 95

    (45) Atrib -> id [ num ] [ . num ] = num

    num             shift and go to state 110


state 96

    (35) Condition -> IF ( Exp ! = Termo ) . THEN Comandos ELSE Comandos FI

    THEN            shift and go to state 111


state 97

    (34) Condition -> IF ( Exp = = Termo ) . THEN Comandos ELSE Comandos FI

    THEN            shift and go to state 112


state 98

    (31) Condition -> IF ( Exp < Termo ) THEN . Comandos ELSE Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 113
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 99

    (33) Condition -> IF ( Exp < = Termo ) . THEN Comandos ELSE Comandos FI

    THEN            shift and go to state 114


state 100

    (30) Condition -> IF ( Exp > Termo ) THEN . Comandos ELSE Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 115
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 101

    (32) Condition -> IF ( Exp > = Termo ) . THEN Comandos ELSE Comandos FI

    THEN            shift and go to state 116


state 102

    (45) Atrib -> id [ num ] [ num ] = . num

    num             shift and go to state 117


state 103

    (44) Matriz -> id [ num ] [ num ] .

    )               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    *               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    /               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    ;               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    +               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    -               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    PRINT           reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    READ            reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    WRITE           reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    START           reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    id              reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    IF              reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    FOR             reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    END             reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    num             reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    (               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    $end            reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    ELSE            reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    FI              reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    ROF             reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    >               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    <               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    =               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)
    !               reduce using rule 44 (Matriz -> id [ num ] [ num ] .)


state 104

    (41) Cicle -> FOR ( Atrib ; Factor ! = Factor . ; Atrib ) Comandos ROF

    ;               shift and go to state 118


state 105

    (40) Cicle -> FOR ( Atrib ; Factor = = Factor . ; Atrib ) Comandos ROF

    ;               shift and go to state 119


state 106

    (36) Cicle -> FOR ( Atrib ; Factor < Factor ; . Atrib ) Comandos ROF
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num

    id              shift and go to state 47

    Atrib                          shift and go to state 120

state 107

    (38) Cicle -> FOR ( Atrib ; Factor < = Factor . ; Atrib ) Comandos ROF

    ;               shift and go to state 121


state 108

    (37) Cicle -> FOR ( Atrib ; Factor > Factor ; . Atrib ) Comandos ROF
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num

    id              shift and go to state 47

    Atrib                          shift and go to state 122

state 109

    (39) Cicle -> FOR ( Atrib ; Factor > = Factor . ; Atrib ) Comandos ROF

    ;               shift and go to state 123


state 110

    (45) Atrib -> id [ num ] [ num . ] = num

    ]               shift and go to state 124


state 111

    (35) Condition -> IF ( Exp ! = Termo ) THEN . Comandos ELSE Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 125
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 112

    (34) Condition -> IF ( Exp = = Termo ) THEN . Comandos ELSE Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 126
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 113

    (31) Condition -> IF ( Exp < Termo ) THEN Comandos . ELSE Comandos FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ELSE            shift and go to state 127
    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 114

    (33) Condition -> IF ( Exp < = Termo ) THEN . Comandos ELSE Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 128
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 115

    (30) Condition -> IF ( Exp > Termo ) THEN Comandos . ELSE Comandos FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ELSE            shift and go to state 129
    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 116

    (32) Condition -> IF ( Exp > = Termo ) THEN . Comandos ELSE Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 130
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 117

    (45) Atrib -> id [ num ] [ num ] = num .

    ELSE            reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    PRINT           reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    READ            reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    WRITE           reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    START           reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    id              reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    IF              reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    FOR             reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    END             reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    num             reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    (               reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    ROF             reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    FI              reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    )               reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    $end            reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)
    ;               reduce using rule 45 (Atrib -> id [ num ] [ num ] = num .)


state 118

    (41) Cicle -> FOR ( Atrib ; Factor ! = Factor ; . Atrib ) Comandos ROF
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num

    id              shift and go to state 47

    Atrib                          shift and go to state 131

state 119

    (40) Cicle -> FOR ( Atrib ; Factor = = Factor ; . Atrib ) Comandos ROF
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num

    id              shift and go to state 47

    Atrib                          shift and go to state 132

state 120

    (36) Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib . ) Comandos ROF

    )               shift and go to state 133


state 121

    (38) Cicle -> FOR ( Atrib ; Factor < = Factor ; . Atrib ) Comandos ROF
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num

    id              shift and go to state 47

    Atrib                          shift and go to state 134

state 122

    (37) Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib . ) Comandos ROF

    )               shift and go to state 135


state 123

    (39) Cicle -> FOR ( Atrib ; Factor > = Factor ; . Atrib ) Comandos ROF
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num

    id              shift and go to state 47

    Atrib                          shift and go to state 136

state 124

    (45) Atrib -> id [ num ] [ num ] . = num

    =               shift and go to state 102


state 125

    (35) Condition -> IF ( Exp ! = Termo ) THEN Comandos . ELSE Comandos FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ELSE            shift and go to state 137
    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 126

    (34) Condition -> IF ( Exp = = Termo ) THEN Comandos . ELSE Comandos FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ELSE            shift and go to state 138
    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 127

    (31) Condition -> IF ( Exp < Termo ) THEN Comandos ELSE . Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 139
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 128

    (33) Condition -> IF ( Exp < = Termo ) THEN Comandos . ELSE Comandos FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ELSE            shift and go to state 140
    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 129

    (30) Condition -> IF ( Exp > Termo ) THEN Comandos ELSE . Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 141
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 130

    (32) Condition -> IF ( Exp > = Termo ) THEN Comandos . ELSE Comandos FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ELSE            shift and go to state 142
    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 131

    (41) Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib . ) Comandos ROF

    )               shift and go to state 143


state 132

    (40) Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib . ) Comandos ROF

    )               shift and go to state 144


state 133

    (36) Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) . Comandos ROF
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 145
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 134

    (38) Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib . ) Comandos ROF

    )               shift and go to state 146


state 135

    (37) Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) . Comandos ROF
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 147
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 136

    (39) Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib . ) Comandos ROF

    )               shift and go to state 148


state 137

    (35) Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE . Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 149
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 138

    (34) Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE . Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 150
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 139

    (31) Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos . FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    FI              shift and go to state 151
    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 140

    (33) Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE . Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 152
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 141

    (30) Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos . FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    FI              shift and go to state 153
    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 142

    (32) Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE . Comandos FI
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 154
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 143

    (41) Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) . Comandos ROF
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 155
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 144

    (40) Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) . Comandos ROF
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 156
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 145

    (36) Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos . ROF
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ROF             shift and go to state 157
    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 146

    (38) Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) . Comandos ROF
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 158
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 147

    (37) Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos . ROF
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ROF             shift and go to state 159
    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 148

    (39) Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) . Comandos ROF
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Comandos                       shift and go to state 160
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 2
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 149

    (35) Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos . FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    FI              shift and go to state 161
    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 150

    (34) Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos . FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    FI              shift and go to state 162
    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 151

    (31) Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .

    ROF             reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    PRINT           reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    READ            reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    WRITE           reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    START           reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    id              reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    IF              reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    FOR             reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    END             reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    num             reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    (               reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    ELSE            reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    FI              reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)
    $end            reduce using rule 31 (Condition -> IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI .)


state 152

    (33) Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos . FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    FI              shift and go to state 163
    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 153

    (30) Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .

    ROF             reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    PRINT           reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    READ            reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    WRITE           reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    START           reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    id              reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    IF              reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    FOR             reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    END             reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    num             reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    (               reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    ELSE            reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    FI              reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)
    $end            reduce using rule 30 (Condition -> IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI .)


state 154

    (32) Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos . FI
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    FI              shift and go to state 164
    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 155

    (41) Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos . ROF
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ROF             shift and go to state 165
    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 156

    (40) Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos . ROF
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ROF             shift and go to state 166
    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 157

    (36) Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .

    ELSE            reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    PRINT           reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    READ            reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    WRITE           reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    START           reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    id              reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    IF              reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    FOR             reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    END             reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    num             reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    (               reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    FI              reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    ROF             reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)
    $end            reduce using rule 36 (Cicle -> FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF .)


state 158

    (38) Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos . ROF
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ROF             shift and go to state 167
    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 159

    (37) Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .

    ELSE            reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    PRINT           reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    READ            reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    WRITE           reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    START           reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    id              reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    IF              reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    FOR             reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    END             reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    num             reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    (               reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    FI              reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    ROF             reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)
    $end            reduce using rule 37 (Cicle -> FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF .)


state 160

    (39) Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos . ROF
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Printing
    (4) Comando -> . Reading
    (5) Comando -> . Writing
    (6) Comando -> . Start
    (7) Comando -> . Exp
    (8) Comando -> . Atrib
    (9) Comando -> . Condition
    (10) Comando -> . Cicle
    (11) Comando -> . End
    (12) Printing -> . PRINT frase
    (24) Reading -> . READ id
    (25) Writing -> . WRITE id
    (26) Writing -> . WRITE id [ num ]
    (27) Start -> . START
    (13) Exp -> . Exp + Termo
    (14) Exp -> . Exp - Termo
    (15) Exp -> . Termo
    (29) Atrib -> . id = Exp
    (43) Atrib -> . id [ num ] = num
    (45) Atrib -> . id [ num ] [ num ] = num
    (30) Condition -> . IF ( Exp > Termo ) THEN Comandos ELSE Comandos FI
    (31) Condition -> . IF ( Exp < Termo ) THEN Comandos ELSE Comandos FI
    (32) Condition -> . IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI
    (33) Condition -> . IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI
    (34) Condition -> . IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI
    (35) Condition -> . IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI
    (36) Cicle -> . FOR ( Atrib ; Factor < Factor ; Atrib ) Comandos ROF
    (37) Cicle -> . FOR ( Atrib ; Factor > Factor ; Atrib ) Comandos ROF
    (38) Cicle -> . FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF
    (39) Cicle -> . FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF
    (40) Cicle -> . FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF
    (41) Cicle -> . FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF
    (28) End -> . END
    (16) Termo -> . Termo * Factor
    (17) Termo -> . Termo / Factor
    (18) Termo -> . Factor
    (19) Factor -> . id
    (20) Factor -> . num
    (21) Factor -> . ( Exp )
    (22) Factor -> . Array
    (23) Factor -> . Matriz
    (42) Array -> . id [ num ]
    (44) Matriz -> . id [ num ] [ num ]

    ROF             shift and go to state 168
    PRINT           shift and go to state 9
    READ            shift and go to state 4
    WRITE           shift and go to state 18
    START           shift and go to state 19
    id              shift and go to state 11
    IF              shift and go to state 23
    FOR             shift and go to state 16
    END             shift and go to state 15
    num             shift and go to state 7
    (               shift and go to state 12

    Atrib                          shift and go to state 24
    End                            shift and go to state 1
    Exp                            shift and go to state 21
    Matriz                         shift and go to state 3
    Writing                        shift and go to state 5
    Start                          shift and go to state 6
    Printing                       shift and go to state 20
    Comando                        shift and go to state 35
    Factor                         shift and go to state 8
    Termo                          shift and go to state 13
    Array                          shift and go to state 25
    Reading                        shift and go to state 10
    Cicle                          shift and go to state 22
    Condition                      shift and go to state 14

state 161

    (35) Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .

    ROF             reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    PRINT           reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    READ            reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    WRITE           reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    START           reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    id              reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    IF              reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    FOR             reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    END             reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    num             reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    (               reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    ELSE            reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    FI              reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)
    $end            reduce using rule 35 (Condition -> IF ( Exp ! = Termo ) THEN Comandos ELSE Comandos FI .)


state 162

    (34) Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .

    ROF             reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    PRINT           reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    READ            reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    WRITE           reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    START           reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    id              reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    IF              reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    FOR             reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    END             reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    num             reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    (               reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    ELSE            reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    FI              reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)
    $end            reduce using rule 34 (Condition -> IF ( Exp = = Termo ) THEN Comandos ELSE Comandos FI .)


state 163

    (33) Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .

    ROF             reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    PRINT           reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    READ            reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    WRITE           reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    START           reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    id              reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    IF              reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    FOR             reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    END             reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    num             reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    (               reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    ELSE            reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    FI              reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)
    $end            reduce using rule 33 (Condition -> IF ( Exp < = Termo ) THEN Comandos ELSE Comandos FI .)


state 164

    (32) Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .

    ROF             reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    PRINT           reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    READ            reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    WRITE           reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    START           reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    id              reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    IF              reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    FOR             reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    END             reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    num             reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    (               reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    ELSE            reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    FI              reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)
    $end            reduce using rule 32 (Condition -> IF ( Exp > = Termo ) THEN Comandos ELSE Comandos FI .)


state 165

    (41) Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .

    ELSE            reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    PRINT           reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    READ            reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    WRITE           reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    START           reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    id              reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    IF              reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    FOR             reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    END             reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    num             reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    (               reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    FI              reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    ROF             reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)
    $end            reduce using rule 41 (Cicle -> FOR ( Atrib ; Factor ! = Factor ; Atrib ) Comandos ROF .)


state 166

    (40) Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .

    ELSE            reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    PRINT           reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    READ            reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    WRITE           reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    START           reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    id              reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    IF              reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    FOR             reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    END             reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    num             reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    (               reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    FI              reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    ROF             reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)
    $end            reduce using rule 40 (Cicle -> FOR ( Atrib ; Factor = = Factor ; Atrib ) Comandos ROF .)


state 167

    (38) Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .

    ELSE            reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    PRINT           reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    READ            reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    WRITE           reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    START           reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    id              reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    IF              reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    FOR             reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    END             reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    num             reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    (               reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    FI              reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    ROF             reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)
    $end            reduce using rule 38 (Cicle -> FOR ( Atrib ; Factor < = Factor ; Atrib ) Comandos ROF .)


state 168

    (39) Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .

    ELSE            reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    PRINT           reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    READ            reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    WRITE           reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    START           reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    id              reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    IF              reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    FOR             reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    END             reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    num             reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    (               reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    FI              reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    ROF             reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)
    $end            reduce using rule 39 (Cicle -> FOR ( Atrib ; Factor > = Factor ; Atrib ) Comandos ROF .)

